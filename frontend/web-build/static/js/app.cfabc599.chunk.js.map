{"version":3,"sources":["src/assets/logo.png","src/constants/keys.constants.ts","src/components/common/theme.tsx","src/context/preferences.context.tsx","src/hooks/useColorScheme.ts","src/utils/overlay.ts","src/context/products.context.tsx","src/components/common/toast.tsx","src/utils/storage.ts","src/utils/nativeStorage.ts","src/constants/backend.constants.ts","src/services/request.service.ts","src/services/auth.service.ts","src/services/products.service.ts","src/services/formdata.service.ts","src/services/crud.service.ts","src/services/get.service.ts","src/context/vendor.context.tsx","src/context/authorization.context.tsx","src/components/common/background.tsx","src/components/common/logo.tsx","src/components/common/header.tsx","src/screens/account/startScreen.tsx","src/screens/account/loginScreen.tsx","src/screens/account/registerScreen.tsx","src/components/common/paragraph.tsx","src/navigation/accountStackNavigator.tsx","src/constants/routes.constants.ts","src/components/common/time.tsx","src/utils/initialize.ts","src/hooks/useVendorIcon.ts","src/hooks/useImagePlaceholder.ts","src/hooks/useAvatarPlaceholder.ts","src/constants/icons.constants.ts","src/components/products/product.tsx","src/screens/products/productScreen.tsx","src/components/products/productDetail.tsx","src/screens/products/productDetailScreen.tsx","src/components/products/makeOffer.tsx","src/screens/products/newMakeOfferScreen.tsx","src/components/products/makePurchase.tsx","src/screens/products/makePurchaseScreen.tsx","src/constants/options.constants.ts","src/components/products/updateProduct.tsx","src/screens/products/updateProductScreen.tsx","src/components/orders/orderTransaction.tsx","src/screens/orders/ordersMadeScreen.tsx","src/screens/orders/orderRequestsScreen.tsx","src/screens/orders/ordersScreen.tsx","src/screens/vendor/newAddProductScreen.tsx","src/screens/vendor/myProductsScreen.tsx","src/screens/vendor/favoritesScreen.tsx","src/navigation/bottomTabNavigator.tsx","src/navigation/productStackNavigator.tsx","src/screens/vendor/drawerContent.tsx","src/navigation/drawerNavigator.tsx","src/navigation/coreNavigator.tsx","src/context/user.context.tsx","src/components/common/splash.tsx","src/core.tsx","src/hooks/useCachedResources.ts","App.tsx","src/assets/background_dot.png","assets/fonts/SpaceMono-Regular.ttf","src/assets/logo@2x.png"],"names":["module","exports","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","colors","primary","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","PreferencesContext","React","createContext","undefined","PreferencesProvider","children","colorScheme","_useColorScheme","console","log","useState","I18nManager","isRTL","rtl","isThemeDark","setIsThemeDark","useEffect","a","async","AsyncStorage","getItem","themeName","themeAsync","preferences","useMemo","toggleTheme","setItem","toggleRTL","forceRTL","theme","Provider","value","usePreference","useContext","overlay","elevation","surfaceColor","surface","Animated","Value","inputRange","interpolate","outputRange","map","calculateColor","overlayTransparency","elevationOverlayTransparency","color","mix","hex","ProductsActionTypes","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","Toast","open","setOpen","error","success","warning","info","message","duration","useTheme","safeArea","useSafeAreaInsets","dark","background","textColor","text","alpha","rgb","string","contentColor","borderColor","View","style","styles","container","Snackbar","snackBar","bottom","backgroundColor","visible","onDismiss","action","label","size","icon","notification","accent","onPress","StyleSheet","create","flex","justifyContent","borderWidth","hairlineWidth","localStorage","then","json","JSON","parse","accessToken","stringify","nativeStorage","SecureStore","DEFAULT_AVATAR","DEFAULT_PLACEHOLDER","API","RequestTicket","method","access","url","refresh","body","Request","mode","headers","Authorization","credentials","FormDataRequest","signUpRequest","request","username","email","password","fetch","signInRequest","signOutRequest","createProduct","vendor","title","category","description","price","condition","images","data","FormData","append","Array","from","forEach","image","name","refreshToken","postFormData","updateProduct","slug","putFormData","BACKEND","deleteRequest","putRequest","postRequest","getRequest","res","getVendorData","id","addFavorite","product_id","removeFavorite","makePurchase","product","buyer","makeOffer","amount","acceptOffer","status","declineOffer","completePayment","createOrderDetail","order","full_name","phone_number","country","town_or_city","street_address1","street_address2","county","stripe_pid","zipcode","initialState","products","loading","ProductsData","ProductsDataProvider","useReducer","state","type","fetchProducts","fetchProductsSuccess","fetchProductsFailure","dispatch","categoryOptions","setCategoryOptions","loadProducts","loadCategories","VendorActionTypes","useProductsData","VendorData","VendorDataProvider","vendorId","setVendorId","favorites","order_requests","orders_made","fetchVendor","fetchVendorSuccess","fetchVendorFailure","fetchVendorFaves","fetchVendorOrdersMade","fetchVendorOrderRequests","loadVendorData","response","toString","openSuccess","setOpenSuccess","openWarning","setOpenWarning","openError","setOpenError","setMessage","onSuccess","setTimeout","onWarning","onError","vendorContextValue","addVendorFavorite","ID","group","ok","warn","groupEnd","removeVendorFavorite","orderId","AuthActionTypes","useVendorData","isLoading","isSignedOut","isSignedUp","noAccount","isSignedIn","AuthContext","AuthorizationProvider","prevState","TO_SIGNUP_PAGE","TO_SIGNIN_PAGE","RESTORE_TOKEN","RESTORE_TOKEN_ERROR","SIGNED_UP","SIGNING_IN","SIGNING_IN_ERROR","SIGN_IN","SIGNING_OUT","SIGN_OUT","SIGNING_OUT_ERROR","Platform","OS","nativeToken","userToken","localToken","bootstrapAsync","vendorDispatch","authContextValue","signIn","navigation","user","signOut","signUp","useAuth","Background","ImageBackground","source","require","resizeMode","KeyboardAvoidingView","behavior","width","padding","maxWidth","alignSelf","alignItems","Logo","ActivityIndicator","animating","Image","height","marginBottom","Header","fontSize","fontWeight","paddingVertical","StartScreen","Paragraph","Button","labelStyle","button","navigate","marginVertical","lineHeight","LoginScreen","getUsername","setUsername","getPassword","setPassword","useForm","defaultValues","criteriaMode","control","setFocus","handleSubmit","errors","formState","onSubmit","e","inputSpacing","inputSpacingHorizontal","formConfigArray","textInputProps","textInput","left","TextInput","Icon","underlineColor","textContentType","returnKeyType","keyboardType","autoCapitalize","onChangeText","onSubmitEditing","rules","required","secureTextEntry","minLength","maxLength","marginTop","render","messages","_","entries","key","row","TouchableOpacity","replace","forgotPassword","flexDirection","halfContainer","headline","textAlign","RegisterScreen","getEmail","setEmail","autoCompleteType","pattern","reset","index","routes","AccountStack","createStackNavigator","AccountStackNavigator","Navigator","initialRouteName","screenOptions","headerShown","animationEnabled","cardOverlayEnabled","cardShadowEnabled","animationTypeForReplace","header","route","back","options","headerTitle","Appbar","BackAction","goBack","Content","MaterialCommunityIcons","marginRight","titleStyle","Screen","component","getFocusedRouteNameFromRoute","TimeAgo","date","dayjs","extend","relativeTime","fromNow","initialize","charAt","toUpperCase","useVendorIcon","vendorIcon","setVendorIcon","vendorInitials","setVendorInitials","thumbnail","full_size","useImagePlaceholder","productImage","setProductImage","productThumbnail","setProductThumbnail","useAvatarPlaceholder","avatarImage","setAvatarImage","Product","addToFaves","removeFromFaves","iconColor","imageBorderColor","otherVendorInitials","inFavorites","some","favorite","isMyProduct","myProd","hasPendingOffer","orderReq","isPurchased","inMyOffers","ordersMade","isMyPurchase","TouchableRipple","Surface","leftColumn","uri","Badge","position","right","online","disabled","rightColumn","topRow","Title","product_count","iconContainer","Caption","iconDescription","order_count","handle","is_available","Chip","bottomRow","hitSlop","top","IconButton","created_at","updated_at","paddingTop","paddingRight","dot","borderRadius","marginLeft","badge","Separator","ProductScreen","FlatList","contentContainerStyle","productProps","renderItem","item","keyExtractor","ItemSeparatorComponent","ProductDetail","avatar","Subheading","content","uppercase","product_images","length","similar_products","similar","footerRow","ProductDetailScreen","params","MakeOffer","productId","sellerId","getAmount","setAmount","setStatus","isSubmitting","isDirty","isSubmitted","isValidating","hasUnsavedChanges","Boolean","addListener","preventDefault","confirm","Alert","alert","ScrollView","scrollViewContent","centerText","Headline","Fragment","display","placeholder","validate","positive","v","parseInt","lessThanPrice","paddingHorizontal","MakeOfferScreen","MakePurchase","confirmation","setConfirmation","getOrderNumber","setOrderNumber","onConfirm","MakePurchaseScreen","CONDITION_OPTIONS","UpdateProduct","getTitle","setTitle","getCategory","setCategory","getDescription","setDescription","getPrice","setPrice","getCondition","fileList","blurOnSubmit","multiline","onChange","UpdateProductScreen","OrderTransaction","props","toLowerCase","toUpper","paddingBottom","OrdersMadeScreen","push","OrderRequestsScreen","orderReqs","initialLayout","Dimensions","get","OrderRequests","OrdersMade","TransactionOrdersScreen","setIndex","renderScene","SceneMap","orderRequests","tabBarColor","rippleColor","lighten","darken","navigationState","onIndexChange","renderTabBar","indicatorStyle","shadowColor","pressColor","AddProductScreen","setCondition","setImages","setFiles","setFileList","watch","register","useFieldArray","fields","remove","watchFieldArray","controlledFields","field","ImagePicker","validatedData","JSX","defaultValue","DocumentPicker","copyToCacheDirectory","multiple","results","output","mediaTypes","Images","allowsEditing","base64","exif","allowsMultipleSelection","aspect","quality","cancelled","selected","result","MyProductsScreen","Text","FavoriteProductsScreen","Tab","createMaterialBottomTabNavigator","BottomTabs","routeName","isFocused","useIsFocused","backBehavior","shifting","activeColor","inactiveColor","sceneAnimationEnabled","barStyle","tabBarIcon","Portal","FAB","Stack","StackNavigator","handleSearch","useWindowDimensions","openDrawer","Action","DrawerContent","paperTheme","isLargeScreen","progress","useDrawerProgress","translateX","interpolateNode","focusedRoute","getCurrentRouteName","routeNames","navigationWithPush","currentRoute","Object","keys","DrawerActions","closeDrawer","pushAction","StackActions","DrawerContentScrollView","drawerContent","transform","userInfoSection","toggleDrawer","caption","section","paragraph","drawerSection","DrawerItem","screen","activeTintColor","inactiveTintColor","focused","preference","pointerEvents","Switch","paddingLeft","Drawer","createDrawerNavigator","DrawerNavigator","drawerType","sceneContainerStyle","drawerLabelStyle","fontFamily","drawerIcon","CoreNavigator","UserContext","UserProvider","userId","setUserId","setLoading","heading","setHeading","setAlert","returning","setReturning","handleSignIn","handleSignOut","handleDelete","Splash","isVisible","align","setAlign","alignsecond","setAlignsecond","spinAnim","spin","fadeAnim","useRef","current","loop","timing","toValue","easing","Easing","linear","useNativeDriver","start","opacity","rotate","margin","marginHorizontal","SCREENS","Products","ProductDetails","Transactions","Favorites","MyProducts","AddProduct","Core","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","useCachedResources","isReady","setIsReady","setInitialState","showSplash","setShowSplash","Linking","initialUrl","savedStateString","restoreState","StatusBar","translucent","animated","NavigationContainer","onStateChange","linking","prefixes","enabled","config","screens","reduce","acc","path","slice","Home","NotFound","fallback","documentTitle","formatter","App"],"mappings":"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","file":"static/js/app.cfabc599.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.529a4159.png\";","export const NAVIGATION_PERSISTENCE_KEY = 'NAVIGATION_STATE';\nexport const THEME_PERSISTENCE_KEY = 'THEME_TYPE';\n","import {\n  DefaultTheme as NavigationDefaultTheme,\n  DarkTheme as NavigationDarkTheme,\n} from '@react-navigation/native';\nimport {\n  DefaultTheme as PaperDefaultTheme,\n  DarkTheme as PaperDarkTheme,\n} from 'react-native-paper';\nimport merge from 'deepmerge';\n\nexport const CombinedDarkTheme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: '#1ba1f2',\n  },\n};\n\nexport const CombinedDefaultTheme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n    primary: '#1ba1f2',\n  },\n};\n\n// export const CombinedDefaultTheme = merge(\n//   PaperDefaultTheme,\n//   NavigationDefaultTheme\n// );\n// export const CombinedDarkTheme = merge(\n//   PaperDarkTheme,\n//   NavigationDarkTheme\n// );\n","import React from 'react';\nimport { I18nManager } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport useColorScheme from '../hooks/useColorScheme';\n\nimport { THEME_PERSISTENCE_KEY } from '../constants/keys.constants';\n\nimport {\n  CombinedDefaultTheme,\n  CombinedDarkTheme,\n} from '../components/common/theme';\n\ntype PreferencesContextType = {\n  theme: typeof CombinedDefaultTheme | typeof CombinedDarkTheme;\n  rtl: 'left' | 'right';\n  toggleTheme: () => void;\n  toggleRTL: () => void;\n  isThemeDark: boolean;\n  setIsThemeDark: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport const PreferencesContext =\n  React.createContext<PreferencesContextType>(undefined!);\n\nexport default function PreferencesProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const colorScheme = useColorScheme();\n\n  console.log('Preferences: colorscheme', colorScheme);\n\n  const [rtl] = React.useState<boolean>(I18nManager.isRTL);\n  const [isThemeDark, setIsThemeDark] =\n    React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const themeAsync = async () => {\n      try {\n        const themeName = await AsyncStorage?.getItem(\n          THEME_PERSISTENCE_KEY\n        );\n\n        console.log(\n          'Storage themePersistence: ',\n          THEME_PERSISTENCE_KEY\n        );\n\n        setIsThemeDark(themeName === 'dark' ? true : false);\n      } catch (e) {\n        // Ignore\n      }\n    };\n    themeAsync();\n  }, []);\n\n  const preferences = React.useMemo(\n    () => ({\n      toggleTheme: () => {\n        setIsThemeDark(!isThemeDark);\n        AsyncStorage?.setItem(\n          THEME_PERSISTENCE_KEY,\n          isThemeDark ? 'light' : 'dark'\n        );\n      },\n\n      toggleRTL: () => I18nManager.forceRTL(!rtl),\n      isThemeDark,\n      setIsThemeDark,\n      theme: isThemeDark ? CombinedDarkTheme : CombinedDefaultTheme,\n\n      rtl: (rtl ? 'right' : 'left') as 'right' | 'left',\n    }),\n    [rtl, isThemeDark]\n  );\n\n  return (\n    <PreferencesContext.Provider value={preferences}>\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport const usePreference = () =>\n  React.useContext(PreferencesContext);\n","import {\n  ColorSchemeName,\n  useColorScheme as _useColorScheme,\n} from \"react-native\";\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","import color from 'color';\nimport { Animated } from 'react-native';\nimport { DarkTheme } from 'react-native-paper';\nimport {\n  CombinedDefaultTheme,\n  CombinedDarkTheme,\n} from '../components/common/theme';\n\nexport default function overlay(\n  elevation: number | Animated.Value = 1,\n  surfaceColor: string = CombinedDarkTheme.colors.surface\n) {\n  if (elevation instanceof Animated.Value) {\n    const inputRange = [0, 1, 2, 3, 8, 24];\n    return elevation.interpolate({\n      inputRange,\n\n      outputRange: inputRange.map((elevation) => {\n        return calculateColor(surfaceColor, elevation);\n      }),\n    });\n  }\n  return calculateColor(surfaceColor, elevation);\n}\n\nfunction calculateColor(surfaceColor: string, elevation: number) {\n  let overlayTransparency: number;\n  if (elevation >= 1 && elevation <= 24) {\n    overlayTransparency = elevationOverlayTransparency[elevation];\n  } else if (elevation > 24) {\n    overlayTransparency = elevationOverlayTransparency[24];\n  } else {\n    overlayTransparency = elevationOverlayTransparency[1];\n  }\n  return color(surfaceColor)\n    .mix(color('white'), overlayTransparency * 0.01)\n    .hex();\n}\nconst elevationOverlayTransparency: { [id: number]: number } = {\n  1: 5,\n  2: 7,\n  3: 8,\n  4: 9,\n  5: 10,\n  6: 11,\n  7: 11.5,\n  8: 12,\n  9: 12.5,\n  10: 13,\n  11: 13.5,\n  12: 14,\n  13: 14.25,\n  14: 14.5,\n  15: 14.75,\n  16: 15,\n  17: 15.12,\n  18: 15.24,\n  19: 15.36,\n  20: 15.48,\n  21: 15.6,\n  22: 15.72,\n  23: 15.84,\n  24: 16,\n};\n","import React from 'react';\n\nimport {\n  deleteRequest,\n  getRequest,\n  postRequest,\n  putRequest,\n} from '../services/crud.service';\nimport { getProducts, getCategories } from '../services/get.service';\nimport {\n  ProductStackNavigatorParamList,\n  CategoryTypeParamList,\n} from '../types';\nimport { useUserContext } from './user.context';\n\nexport type ProductParams =\n  ProductStackNavigatorParamList['ProductDetails'];\n\n/**\n * Third-level Context provider for all user-specific snipetts and collections data.\n * Relies on UserContext's username upon login to fetch user's data.\n *\n */\n\nexport type Options = Array<{\n  label: string;\n  value: string | number;\n}>;\n\nexport enum ProductsActionTypes {\n  fetchProducts,\n  fetchProductsSuccess,\n  fetchProductsFailure,\n}\n\nexport interface FetchProductsAction {\n  type: ProductsActionTypes;\n  products?: ProductParams[];\n  error?: string;\n}\n\nexport interface ProductsStateInterface {\n  products?: ProductParams[] | [];\n  loading: boolean;\n  error?: string;\n}\n\nconst initialState: ProductsStateInterface = {\n  products: [],\n  loading: false,\n  error: '',\n};\n\ntype ProductsDataType = {\n  products: ProductParams[] | [] | undefined;\n  loading: boolean;\n  error: string | undefined;\n  dispatch: React.Dispatch<FetchProductsAction>;\n  loadProducts: () => Promise<void>;\n  loadCategories: () => Promise<void>;\n  categoryOptions: Options;\n};\n\nconst ProductsData = React.createContext<ProductsDataType>(\n  undefined!\n);\n\nexport default function ProductsDataProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [state, dispatch] = React.useReducer(\n    (\n      state: ProductsStateInterface,\n      { type, products, error }: FetchProductsAction\n    ) => {\n      switch (type) {\n        case ProductsActionTypes.fetchProducts:\n          return { ...state, loading: true };\n\n        case ProductsActionTypes.fetchProductsSuccess:\n          return { ...state, products, loading: false };\n\n        case ProductsActionTypes.fetchProductsFailure:\n          return { ...state, error: error, loading: false };\n\n        default:\n          return state;\n      }\n    },\n    initialState\n  );\n\n  const [categoryOptions, setCategoryOptions] =\n    React.useState<Options>([{ label: 'Category', value: 0 }]);\n\n  async function loadProducts() {\n    dispatch({ type: ProductsActionTypes.fetchProducts });\n\n    const data = await getProducts();\n\n    if (data) {\n      dispatch({\n        type: ProductsActionTypes.fetchProductsSuccess,\n        products: data,\n      });\n    } else {\n      dispatch({ type: ProductsActionTypes.fetchProductsFailure });\n    }\n  }\n\n  async function loadCategories() {\n    const data = await getCategories();\n    if (data) {\n      setCategoryOptions(\n        data.map((category: CategoryTypeParamList) => ({\n          label: category.name,\n          value: category.id,\n        }))\n      );\n    }\n  }\n\n  console.log('Products Context Render');\n\n  React.useEffect(() => {\n    loadProducts();\n  }, []);\n\n  React.useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const { products, loading, error } = state;\n\n  return (\n    <ProductsData.Provider\n      value={{\n        products,\n        loading,\n        error,\n        dispatch,\n        loadProducts,\n        loadCategories,\n        categoryOptions,\n      }}\n    >\n      {children}\n    </ProductsData.Provider>\n  );\n}\n\nexport const useProductsData = () => React.useContext(ProductsData);\n","import React from 'react';\nimport color from 'color';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { View, StyleSheet } from 'react-native';\nimport {\n  Button,\n  Snackbar,\n  useTheme,\n  Avatar,\n  Text,\n} from 'react-native-paper';\nimport overlay from '../../utils/overlay';\n\n/**\n * The main prompt for all messages following fetch methods.\n *\n * @file defines feedback toast that relays message from backend.\n * @date 2021-07-18\n */\n\nexport const Toast = ({\n  open,\n  setOpen,\n  success,\n  error,\n  warning,\n  info,\n  message,\n  duration = 2500,\n}: {\n  success?: boolean;\n  error?: boolean;\n  warning?: boolean;\n  info?: boolean;\n  open: boolean;\n  message?: string | any;\n  duration?: number;\n  label?: string;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}) => {\n  const theme = useTheme();\n  const safeArea = useSafeAreaInsets();\n\n  const surfaceColor = theme.dark\n    ? (overlay(6, theme.colors.surface) as string)\n    : theme.colors.background;\n\n  const textColor = color(theme.colors.text)\n    .alpha(0.6)\n    .rgb()\n    .string();\n\n  const contentColor = color(theme.colors.text)\n    .alpha(0.8)\n    .rgb()\n    .string();\n\n  const borderColor = color(theme.colors.text)\n    .alpha(0.15)\n    .rgb()\n    .string();\n\n  return (\n    <View style={styles.container}>\n      <Snackbar\n        color={textColor}\n        style={[\n          styles.snackBar,\n          {\n            bottom: safeArea.bottom + 65,\n            backgroundColor: surfaceColor,\n            borderColor: borderColor,\n          },\n        ]}\n        visible={open}\n        onDismiss={() => setOpen(false)}\n        duration={duration}\n        action={{\n          // @ts-ignore\n          label: error ? (\n            <Avatar.Icon\n              size={24}\n              icon=\"alert-decagram-outline\"\n              color={theme.colors.error}\n            />\n          ) : warning ? (\n            <Avatar.Icon\n              size={24}\n              icon=\"alert-outline\"\n              color={theme.colors.error}\n            />\n          ) : info ? (\n            <Avatar.Icon\n              size={24}\n              icon=\"information-outline\"\n              color={theme.colors.notification}\n            />\n          ) : (\n            <Avatar.Icon\n              size={24}\n              icon=\"check\"\n              color={theme.colors.accent}\n            />\n          ),\n          onPress: () => setOpen(false),\n        }}\n      >\n        <Text style={{ color: contentColor }}>{message}</Text>\n      </Snackbar>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-between',\n  },\n  snackBar: {\n    borderWidth: StyleSheet.hairlineWidth,\n  },\n});\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const localStorage = {\n  getToken: async () =>\n    AsyncStorage.getItem(\"token\").then((json: any) => {\n      return JSON.parse(json);\n    }),\n  setToken: async (accessToken: AccessToken[\"accessToken\"]) =>\n    AsyncStorage.setItem(\"token\", JSON.stringify(accessToken)),\n  clearToken: async () => AsyncStorage.removeItem(\"token\"),\n\n  setLogoutEvent: () =>\n    window.localStorage.setItem(\"app_logout\", JSON.stringify(Date.now())),\n};\n","import * as SecureStore from \"expo-secure-store\";\n\nexport const nativeStorage = {\n  getToken: async () =>\n    SecureStore.getItemAsync(\"token\").then((json: any) => {\n      return JSON.parse(json);\n    }),\n  setToken: async (accessToken: AccessToken[\"accessToken\"]) =>\n    SecureStore.setItemAsync(\"token\", JSON.stringify(accessToken)),\n  clearToken: async () => SecureStore.deleteItemAsync(\"token\"),\n\n  setLogoutEvent: () =>\n    window.localStorage.setItem(\"app_logout\", JSON.stringify(Date.now())),\n};\n","export const DEFAULT_AVATAR =\n  \"https://thrifthub.s3.ap-southeast-1.amazonaws.com/media/images/default_avatar.png\";\nexport const DEFAULT_PLACEHOLDER =\n  \"https://thrifthub.s3.ap-southeast-1.amazonaws.com/media/images/default_avatar.png\";\n\nexport const MOBILE_SPLASHSCREEN =\n  \"https://thrifthub.s3.ap-southeast-1.amazonaws.com/static/frontend/splash.png\";\n\nexport const DEFAULT_ICON =\n  \"https://thrifthub.s3.ap-southeast-1.amazonaws.com/static/frontend/icon.png\";\n\nexport const DEFAULT_ADAPTIVE_ICON =\n  \"https://thrifthub.s3.ap-southeast-1.amazonaws.com/static/frontend/adaptive-icon.png\";\n\nexport const PRODUCT_ENDPONT = \"store\";\nexport const CATEGORY_ENDPOINT = \"category\";\nexport const VENDOR_ENDPOINT = \"vendor\";\nexport const ORDER_ENDPOINT = \"orders\";\nexport const ORDERDETAILS_ENDPONT = \"orderdetail\";\nexport const API = \"https://thrifthub-backend.herokuapp.com/api\";\nexport const HOME_PRODUCTS_QUERY =\n  'store/?expand=product_images,vendor,product,category&include=vendor.name';\n","/**\n * Functions that pre-packages HTTP requests for a fetcher/handler.\n *\n * Requests are sorted per method for requests like signupRequest and loginRequest to send to the backend efficiently.\n *\n * @see signupRequest\n * @see loginRequest\n * @see LogoutRequest\n * @see putRequest\n * @see getRequest\n */\n\n/**\n * Api backend base URL.\n */\n\nimport { API } from '../constants/backend.constants';\n\nexport const RequestTicket = ({\n  method,\n  access,\n  refresh,\n  url,\n  body,\n}: {\n  method: string;\n  access?: AccessToken['accessToken'];\n  refresh?: string;\n  url: string;\n  body?: object;\n}) => {\n  if (method === 'post') {\n    if (access) {\n      return new Request(`${API}/${url}/`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: access ? `Bearer ${access}` : '',\n        },\n        credentials: 'include',\n        body: body ? JSON.stringify(body) : null,\n      });\n    }\n    return new Request(`${API}/${url}/`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body),\n    });\n  }\n\n  if (method === 'put') {\n    return new Request(`${API}/${url}/`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${access}`,\n      },\n      body: JSON.stringify(body),\n    });\n  }\n\n  if (method === 'delete') {\n    return new Request(`${API}/${url}/`, {\n      method: 'DELETE',\n      mode: 'cors',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${access}`,\n      },\n      body: JSON.stringify(body),\n    });\n  }\n  return new Request(`${API}/${url}/`, {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      // Authorization: access ? `Bearer ${access}` : '',\n    },\n  });\n};\n\nexport const FormDataRequest = ({\n  method,\n  access,\n  refresh,\n  url,\n  body,\n}: {\n  method: string;\n  access?: AccessToken['accessToken'];\n  refresh?: string;\n  url: string;\n  body?: FormData;\n}) => {\n  if (method === 'post') {\n    if (access) {\n      return new Request(`${API}/${url}/`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          Authorization: access ? `Bearer ${access}` : '',\n        },\n        credentials: 'include',\n        body: body,\n      });\n    }\n    return new Request(`${API}/${url}/`, {\n      method: 'POST',\n      credentials: 'include',\n      // headers: { 'Content-Type': 'application/json' },\n      body: body,\n    });\n  }\n\n  if (method === 'put') {\n    return new Request(`${API}/${url}/`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        // 'Content-Type': 'application/json',\n        Authorization: `Bearer ${access}`,\n      },\n      body: body,\n    });\n  }\n\n  if (method === 'delete') {\n    return new Request(`${API}/${url}/`, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: {\n        // 'Content-Type': 'application/json',\n        Authorization: `Bearer ${access}`,\n      },\n    });\n  }\n  return new Request(`${API}/${url}/`, {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      // Authorization: access ? `Bearer ${access}` : '',\n    },\n  });\n};\n","import { RequestTicket } from \"./request.service\";\n/**\n * Sign up request handler.\n *\n * @see RequestTicket\n * @param  {object} body body of sign up request\n * @return {Promise} handles user's authentication passport once fulfilled\n */\nexport function signUpRequest({\n  body,\n}: {\n  body: {\n    username: string;\n    email: string;\n    password: string;\n  };\n}) {\n  const request = RequestTicket({\n    method: \"post\",\n    url: \"account/register\",\n    body: {\n      username: body.username,\n      email: body.email,\n      password: body.password,\n    },\n  });\n  return fetch(request);\n}\n\n/**\n * Sign in request handler.\n *\n * @see RequestTicket\n * @param  {object} body body of sign up request\n * @return {Promise} handles user's authentication passport once fulfilled\n */\nexport function signInRequest({\n  body,\n}: {\n  body: {\n    username: string;\n    password: string;\n  };\n}) {\n  const request = RequestTicket({\n    method: \"post\",\n    url: \"account/login\",\n    body: {\n      username: body.username,\n      password: body.password,\n    },\n  });\n  return fetch(request);\n}\n\n/**\n * Sign out request handler.\n *\n * @see RequestTicket\n * @return {null} handles revoking of user's authentication passport without explicit return\n */\nexport function signOutRequest({ accessToken }: AccessToken) {\n  const request = RequestTicket({\n    method: \"post\",\n    url: \"account/logout_all\",\n    access: accessToken,\n  });\n  return fetch(request);\n}\n","import {\n  postFormData,\n  putFormData,\n  deleteFormData,\n} from './formdata.service';\n\nimport * as BACKEND from '../constants/backend.constants';\n\nexport function createProduct(\n  vendor: string,\n  title: string,\n  category: string,\n  description: string,\n  price: string,\n  condition: string,\n  accessToken: AccessToken['accessToken'],\n  images?: FileList\n) {\n  const data = new FormData();\n  data.append('vendor', vendor);\n  data.append('title', title);\n  data.append('description', description);\n  data.append('price', price);\n  data.append('condition', condition);\n  data.append('category', category);\n  if (images) {\n    Array.from(images).forEach(function (image) {\n      data.append('images', image, image.name);\n    });\n  }\n  return postFormData({\n    url: `store`,\n    body: data,\n    accessToken,\n  });\n}\n\nexport function updateProduct(\n  slug: string,\n  vendor: string,\n  title: string,\n  category: string,\n  description: string,\n  price: string,\n  condition: string,\n  accessToken: AccessToken['accessToken'],\n  images?: FileList\n) {\n  const data = new FormData();\n  data.append('vendor', vendor);\n  data.append('title', title);\n  data.append('description', description);\n  data.append('price', price);\n  data.append('condition', condition);\n  data.append('category', category);\n  if (images) {\n    Array.from(images).forEach(function (image) {\n      data.append('images', image, image.name);\n    });\n  }\n  return putFormData({\n    url: `${BACKEND.PRODUCT_ENDPONT}/${slug}`,\n    body: data,\n    accessToken,\n  });\n}\n","import { FormDataRequest } from './request.service';\n\n/**\n * CRUD requests that return a prepared fetch. Promise is handled in context.\n *\n */\n\n/**\n * Simple delete request with no body or redirects.\n *\n * @see RequestTicket\n * @see useUserContext\n * @param  {} url url string of backend resource\n * @param  {} accessToken access token stored in context memory for request Authorization header\n * @return {null} handles frontend rerouting once fulfilled without explicit return\n */\nexport function deleteFormData({\n  url,\n  accessToken,\n  body,\n}: {\n  accessToken: AccessToken['accessToken'];\n  url: string;\n  body?: FormData;\n}) {\n  const request = FormDataRequest({\n    method: 'delete',\n    url,\n    access: accessToken,\n    body,\n  });\n  return fetch(request);\n}\n\n/**\n * Put request.\n *\n * @see RequestTicket\n * @see useUserContext\n * @param  {} url url string of backend resource\n * @param  {} access access token stored in context memory for request Authorization header\n * @param  {} body put request body\n * @return {Promise} handles frontend rerouting once fulfilled\n */\nexport function putFormData({\n  url,\n  accessToken,\n  body,\n}: {\n  accessToken: AccessToken['accessToken'];\n  url: string;\n  body: FormData;\n}) {\n  const request = FormDataRequest({\n    method: 'put',\n    url,\n    access: accessToken,\n    body,\n  });\n  return fetch(request);\n}\n\n/**\n * Post request handler (General).\n *\n * @see RequestTicket\n * @param  {} url url string of backend resource\n * @param  {} access access token stored in context memory for request Authorization header\n * @param  {} body body of post request\n * @return {null} handles frontend rerouting once fulfilled without explicit return\n */\nexport function postFormData({\n  url,\n  accessToken,\n  refreshToken,\n  body,\n}: {\n  accessToken: AccessToken['accessToken'];\n  refreshToken?: string;\n  url: string;\n  body: FormData;\n}) {\n  const request = FormDataRequest({\n    method: 'post',\n    url,\n    access: accessToken,\n    refresh: refreshToken || '',\n    body,\n  });\n  return fetch(request);\n}\n\n/**\n * Get request handler (General).\n *\n * @see RequestTicket\n * @see useUserContext\n * @param  {} url url string of backend resource\n * @param  {} token access token stored in context memory for request Authorization header\n * @return {Promise}\n */\nexport function getRequest({ url }: { url: string }) {\n  const request = FormDataRequest({\n    method: 'get',\n    url,\n  });\n  return fetch(request).then((res) => res.json());\n}\n","import { RequestTicket } from \"./request.service\";\n\n/**\n * CRUD requests that return a prepared fetch. Promise is handled in context.\n *\n */\n\n/**\n * Simple delete request with no body or redirects.\n *\n * @see RequestTicket\n * @see useUserContext\n * @param  {} url url string of backend resource\n * @param  {} accessToken access token stored in context memory for request Authorization header\n * @return {null} handles frontend rerouting once fulfilled without explicit return\n */\nexport function deleteRequest({\n  url,\n  accessToken,\n  body,\n}: {\n  accessToken: AccessToken[\"accessToken\"];\n  url: string;\n  body?: object;\n}) {\n  const request = RequestTicket({\n    method: \"delete\",\n    url,\n    access: accessToken,\n    body,\n  });\n  return fetch(request);\n}\n\n/**\n * Put request.\n *\n * @see RequestTicket\n * @see useUserContext\n * @param  {} url url string of backend resource\n * @param  {} access access token stored in context memory for request Authorization header\n * @param  {} body put request body\n * @return {Promise} handles frontend rerouting once fulfilled\n */\nexport function putRequest({\n  url,\n  accessToken,\n  body,\n}: {\n  accessToken: AccessToken[\"accessToken\"];\n  url: string;\n  body: object;\n}) {\n  const request = RequestTicket({\n    method: \"put\",\n    url,\n    access: accessToken,\n    body,\n  });\n  return fetch(request);\n}\n\n/**\n * Post request handler (General).\n *\n * @see RequestTicket\n * @param  {} url url string of backend resource\n * @param  {} access access token stored in context memory for request Authorization header\n * @param  {} body body of post request\n * @return {null} handles frontend rerouting once fulfilled without explicit return\n */\nexport function postRequest({\n  url,\n  accessToken,\n  refreshToken,\n  body,\n}: {\n  accessToken: AccessToken[\"accessToken\"];\n  refreshToken?: string;\n  url: string;\n  body: object;\n}) {\n  const request = RequestTicket({\n    method: \"post\",\n    url,\n    access: accessToken,\n    refresh: refreshToken || \"\",\n    body,\n  });\n  return fetch(request);\n}\n\n/**\n * Get request handler (General).\n *\n * @see RequestTicket\n * @see useUserContext\n * @param  {} url url string of backend resource\n * @param  {} token access token stored in context memory for request Authorization header\n * @return {Promise}\n */\nexport function getRequest({ url }: { url: string }) {\n  const request = RequestTicket({\n    method: \"get\",\n    url,\n  });\n  return fetch(request).then((res) => res.json());\n}\n","import {\n  getRequest,\n  postRequest,\n  putRequest,\n  deleteRequest,\n} from './crud.service';\n\nimport * as BACKEND from '../constants/backend.constants';\n\n// STORE\nexport function getCategories() {\n  return getRequest({ url: BACKEND.CATEGORY_ENDPOINT });\n}\n\nexport function getProducts() {\n  return getRequest({\n    url: BACKEND.HOME_PRODUCTS_QUERY,\n  });\n}\n\nexport function getProductsByCategory(slug: string) {\n  return getRequest({\n    url: `${BACKEND.PRODUCT_ENDPONT}/${BACKEND.CATEGORY_ENDPOINT}/${slug}`,\n  });\n}\n\nexport function getProductsByVendor(slug: string) {\n  return getRequest({\n    url: `${BACKEND.PRODUCT_ENDPONT}/${BACKEND.VENDOR_ENDPOINT}/${slug}`,\n  });\n}\n\nexport function searchProducts(query: string) {\n  return getRequest({\n    url: `${BACKEND.PRODUCT_ENDPONT}/?search=${query}`,\n  });\n}\n\nexport function getProduct(slug: string) {\n  return getRequest({ url: `${BACKEND.PRODUCT_ENDPONT}/${slug}` });\n}\n\nexport function createProduct(\n  vendor: number,\n  title: string,\n  category: number,\n  description: string,\n  price: string,\n  condition: number,\n  accessToken: AccessToken['accessToken'],\n  image?: string,\n  slug?: string\n) {\n  return postRequest({\n    url: `store`,\n    body: {\n      title,\n      vendor,\n      category,\n      description,\n      slug,\n      price,\n      condition,\n      image,\n    },\n    accessToken,\n  });\n}\n\nexport function updateProduct(\n  accessToken: AccessToken['accessToken'],\n  slug: string,\n  vendor: string,\n  title?: string,\n  category?: string,\n  description?: string,\n  price?: string,\n  condition?: string,\n  images?: string\n) {\n  return putRequest({\n    url: `${BACKEND.PRODUCT_ENDPONT}/${slug}`,\n    body: {\n      title,\n      vendor,\n      category,\n      description,\n      slug,\n      price,\n      condition,\n      images,\n    },\n    accessToken,\n  });\n}\n\nexport function deleteProduct(slug: string, accessToken: string) {\n  return deleteRequest({\n    url: `${BACKEND.PRODUCT_ENDPONT}/${slug}`,\n    accessToken,\n  });\n}\n\n// VENDOR\nexport function getVendors() {\n  return getRequest({ url: BACKEND.VENDOR_ENDPOINT });\n}\n\nexport function getVendorData(id: string) {\n  return getRequest({ url: `${BACKEND.VENDOR_ENDPOINT}/${id}` });\n}\n\nexport function getVendorFavorites(id: string) {\n  return getRequest({\n    url: `${BACKEND.VENDOR_ENDPOINT}/${id}/favorites`,\n  });\n}\n\nexport function addFavorite(\n  id: string,\n  product_id: string,\n  accessToken: AccessToken['accessToken']\n) {\n  return postRequest({\n    url: `${BACKEND.VENDOR_ENDPOINT}/${id}/favorites`,\n    body: { product_id },\n    accessToken,\n  });\n}\n\nexport function removeFavorite(\n  id: string,\n  product_id: string,\n  accessToken: AccessToken['accessToken']\n) {\n  return deleteRequest({\n    url: `${BACKEND.VENDOR_ENDPOINT}/${id}/favorites`,\n    body: { product_id },\n    accessToken,\n  });\n}\n\nexport function getVendorFriends(id: string) {\n  return getRequest({\n    url: `${BACKEND.VENDOR_ENDPOINT}/${id}/friends`,\n  });\n}\n\n// ORDERS\nexport function getOrders() {\n  return getRequest({ url: `${BACKEND.ORDER_ENDPOINT}` });\n}\n\nexport function makePurchase(\n  product: string,\n  buyer: string,\n  accessToken: AccessToken['accessToken']\n) {\n  return postRequest({\n    url: BACKEND.ORDER_ENDPOINT,\n    body: { product, buyer },\n    accessToken,\n  });\n}\n\nexport function makeOffer(\n  product: string,\n  buyer: string,\n  amount: string,\n  accessToken: AccessToken['accessToken']\n) {\n  return postRequest({\n    url: BACKEND.ORDER_ENDPOINT,\n    body: { product, buyer, amount },\n    accessToken,\n  });\n}\n\nexport function acceptOffer(\n  id: string,\n  product: string,\n  buyer: string,\n  accessToken: AccessToken['accessToken']\n) {\n  return putRequest({\n    url: `${BACKEND.ORDER_ENDPOINT}/${id}`,\n    body: { product, buyer, status: 'ACCEPTED' },\n    accessToken,\n  });\n}\n\nexport function declineOffer(\n  id: string,\n  product: string,\n  buyer: string,\n  accessToken: AccessToken['accessToken']\n) {\n  return putRequest({\n    url: `${BACKEND.ORDER_ENDPOINT}/${id}`,\n    body: { product, buyer, status: 'DENIED' },\n    accessToken,\n  });\n}\n\nexport function completePayment(\n  id: string,\n  product: string,\n  buyer: string,\n  accessToken: AccessToken['accessToken']\n) {\n  return putRequest({\n    url: `${BACKEND.ORDER_ENDPOINT}/${id}`,\n    body: { product, buyer, status: 'COMPLETED' },\n    accessToken,\n  });\n}\n\nexport function updateOrder(\n  id: string,\n  product: string,\n  buyer: string,\n  accessToken: AccessToken['accessToken'],\n  amount?: string,\n  status?: string\n) {\n  return putRequest({\n    url: `${BACKEND.ORDER_ENDPOINT}/${id}`,\n    body: { product, buyer, status, amount },\n    accessToken,\n  });\n}\n\nexport function createOrder(\n  product: string,\n  buyer: string,\n  accessToken: AccessToken['accessToken'],\n  amount?: string\n) {\n  return postRequest({\n    url: BACKEND.ORDER_ENDPOINT,\n    body: { product, buyer, amount },\n    accessToken,\n  });\n}\n\nexport function deleteOrder(\n  id: string,\n  accessToken: AccessToken['accessToken']\n) {\n  return deleteRequest({\n    url: `${BACKEND.ORDER_ENDPOINT}/${id}`,\n    accessToken,\n  });\n}\n\nexport function getOrderDetail(id: string) {\n  return getRequest({ url: `${BACKEND.ORDERDETAILS_ENDPONT}/${id}` });\n}\n\nexport function createOrderDetail(\n  accessToken: AccessToken['accessToken'],\n  order: string,\n  full_name: string,\n  email: string,\n  phone_number: string,\n  country: string,\n  town_or_city: string,\n  street_address1: string,\n  street_address2?: string,\n  county?: string,\n  stripe_pid?: string,\n  zipcode?: string\n) {\n  return postRequest({\n    url: BACKEND.ORDERDETAILS_ENDPONT,\n    body: {\n      order,\n      full_name,\n      email,\n      phone_number,\n      country,\n      town_or_city,\n      street_address1,\n      street_address2,\n      county,\n      zipcode,\n      stripe_pid,\n    },\n    accessToken,\n  });\n}\n\nexport function updateOrderDetail(\n  id: string,\n  accessToken: AccessToken['accessToken'],\n  order: string,\n  full_name?: string,\n  email?: string,\n  phone_number?: string,\n  country?: string,\n  town_or_city?: string,\n  street_address1?: string,\n  street_address2?: string,\n  county?: string,\n  stripe_pid?: string,\n  zipcode?: string\n) {\n  return putRequest({\n    url: `${BACKEND.ORDERDETAILS_ENDPONT}/${id}`,\n    body: {\n      order,\n      full_name,\n      email,\n      phone_number,\n      country,\n      town_or_city,\n      street_address1,\n      street_address2,\n      county,\n      zipcode,\n      stripe_pid,\n    },\n    accessToken,\n  });\n}\n","import React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  updateProduct,\n  createProduct,\n} from '../services/products.service';\n\nimport {\n  getVendorData,\n  getVendorFavorites,\n  addFavorite,\n  removeFavorite,\n  makePurchase,\n  makeOffer,\n  acceptOffer,\n  declineOffer,\n  completePayment,\n  createOrderDetail,\n  updateOrderDetail,\n} from '../services/get.service';\n\nimport { Toast } from '../components/common/toast';\n\nimport { useProductsData } from './products.context';\n\nimport {\n  OrderTypeParamList,\n  VendorTypeParamList,\n  ProductTypeParamList,\n} from '../types';\n\nexport type VendorParams = VendorTypeParamList;\n\n/**\n * Third-level Context provider for all user-specific snipetts and collections data.\n * Relies on UserContext's username upon login to fetch user's data.\n *\n * @since 2021-04-08\n */\n\nexport enum VendorActionTypes {\n  fetchVendor,\n  fetchVendorSuccess,\n  fetchVendorFailure,\n  fetchVendorFaves,\n  fetchVendorOrderRequests,\n  fetchVendorOrdersMade,\n}\n\nexport interface FetchVendorAction {\n  type: VendorActionTypes;\n  vendor?: VendorParams;\n  favorites?: ProductTypeParamList;\n  order_requests?: OrderTypeParamList;\n  orders_made?: OrderTypeParamList;\n  error?: object;\n}\n\nexport interface StateInterface {\n  vendor?: VendorParams;\n  loading: boolean;\n  error?: object;\n}\n\nconst initialState: StateInterface = {\n  vendor: undefined,\n  loading: false,\n  error: {},\n};\n\ntype VendorDataType = {\n  vendor: VendorParams | undefined;\n  loading: boolean;\n  error: {} | undefined;\n  vendorId: string | undefined;\n\n  addVendorFavorite: (\n    product_id: string,\n    accessToken: string\n  ) => Promise<void>;\n  removeVendorFavorite: (\n    product_id: string,\n    accessToken: string\n  ) => Promise<void>;\n  makeOffer: (\n    product: string,\n    amount: string,\n    accessToken: string\n  ) => Promise<void>;\n  makePurchase: (\n    product: string,\n    accessToken: string\n  ) => Promise<void>;\n  acceptOffer: (\n    orderId: string,\n    product: string,\n    buyer: string,\n    accessToken: string\n  ) => Promise<void>;\n  declineOffer: (\n    orderId: string,\n    product: string,\n    buyer: string,\n    accessToken: string\n  ) => Promise<void>;\n  completePayment: (\n    orderId: string,\n    product: string,\n    buyer: string,\n    accessToken: string\n  ) => Promise<void>;\n  createProduct: (\n    title: string,\n    category: string,\n    description: string,\n    price: string,\n    condition: string,\n    accessToken: string,\n    images?: FileList | undefined\n  ) => Promise<void>;\n  updateProduct: (\n    slug: string,\n    title: string,\n    category: string,\n    description: string,\n    price: string,\n    condition: string,\n    accessToken: string,\n    images?: FileList | undefined\n  ) => Promise<void>;\n  state: StateInterface;\n  dispatch: React.Dispatch<FetchVendorAction>;\n  loadVendorData(id: string): Promise<void>;\n};\n\nconst VendorData = React.createContext<VendorDataType>(undefined!);\n\nexport default function VendorDataProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const { loadProducts } = useProductsData();\n  const [vendorId, setVendorId] = React.useState<string | undefined>(\n    undefined!\n  );\n  const [state, dispatch] = React.useReducer(\n    (\n      state: StateInterface,\n      {\n        type,\n        vendor,\n        favorites,\n        order_requests,\n        orders_made,\n        error,\n      }: FetchVendorAction\n    ) => {\n      switch (type) {\n        case VendorActionTypes.fetchVendor:\n          return { ...state, loading: true };\n\n        case VendorActionTypes.fetchVendorSuccess:\n          return { ...state, vendor, loading: false };\n\n        case VendorActionTypes.fetchVendorFailure:\n          return { ...state, error: error, loading: false };\n\n        case VendorActionTypes.fetchVendorFaves:\n          return {\n            ...state,\n            loading: false,\n            favorites: favorites,\n          };\n        case VendorActionTypes.fetchVendorOrdersMade:\n          return {\n            ...state,\n            orders_made: orders_made,\n          };\n        case VendorActionTypes.fetchVendorOrderRequests:\n          return {\n            ...state,\n            order_requests: order_requests,\n          };\n\n        default:\n          return state;\n      }\n    },\n    initialState\n  );\n\n  async function loadVendorFavorites(id: string) {\n    const response: ProductTypeParamList = await getVendorFavorites(\n      id\n    );\n    if (response) {\n      console.log('VendorDispatch: Favorites reloaded', response);\n      dispatch({\n        type: VendorActionTypes.fetchVendorFaves,\n        favorites: response,\n      });\n    }\n  }\n\n  async function loadVendorData(id: string) {\n    dispatch({ type: VendorActionTypes.fetchVendor });\n    const response: VendorParams = await getVendorData(id);\n    if (response) {\n      console.log('VendorDispatch: Vendor data reloaded', response);\n      dispatch({\n        type: VendorActionTypes.fetchVendorSuccess,\n        vendor: response,\n      });\n    }\n  }\n\n  const { vendor, loading, error } = state;\n\n  React.useEffect(() => {\n    if (state.vendor) {\n      setVendorId(state.vendor.id.toString());\n    }\n  }, [state]);\n\n  console.log('currentVendorId', vendorId);\n\n  const [openSuccess, setOpenSuccess] = React.useState(false);\n  const [openWarning, setOpenWarning] = React.useState(false);\n  const [openError, setOpenError] = React.useState(false);\n  const [message, setMessage] = React.useState<string | any>('');\n\n  const onSuccess = (text: string | any) => {\n    setMessage(text);\n    setOpenSuccess(true);\n    setTimeout(() => {\n      setOpenSuccess(false);\n      setMessage('');\n    }, 2500);\n  };\n  const onWarning = (text: string | any) => {\n    setMessage(text);\n    setOpenWarning(true);\n    setTimeout(() => {\n      setOpenWarning(false);\n      setMessage('');\n    }, 2500);\n  };\n  const onError = (text: string | any) => {\n    setMessage(text);\n    setOpenError(true);\n    setTimeout(() => {\n      setOpenError(false);\n      setMessage('');\n    }, 2500);\n  };\n\n  console.log('Vendor Context Render');\n\n  const vendorContextValue = React.useMemo(\n    () => ({\n      addVendorFavorite: async (\n        product_id: string,\n        accessToken: string\n      ) => {\n        const ID = vendorId || vendor?.id.toString() || '';\n        console.group('Vendor Provider: adding favorite');\n        /**\n         * If credentials are validated...\n         */\n        if (product_id !== undefined && accessToken !== undefined) {\n          /**\n           * Dispatch auth to launch loading.\n           */\n          console.log('Fetching with', ID, product_id, accessToken);\n          /**\n           * Fetch add favorite to backend with credentials.\n           */\n          await addFavorite(ID, product_id, accessToken).then(\n            (response) => {\n              /**\n               * If status is ~200/successful...\n               */\n              if (response.ok) {\n                /**\n                 * Serialize the payload from backend.\n                 */\n                response.json().then((data) => {\n                  /**\n                   * Ensure there's data in the payload.\n                   */\n                  if (data) {\n                    /**\n                     * Dispatch that sign in was a success\n                     */\n                    console.log(\n                      'Vendor Provider: Add favorite success message',\n                      data.message\n                    );\n                    /**\n                     * Display a snackbar message\n                     */\n                    onSuccess(data.message);\n                    /**\n                     * Reload vendor data\n                     */\n                    console.log('vendorId in request add', vendorId);\n                    loadVendorData(ID);\n                  }\n                });\n              } else {\n                /**\n                 * Dispatch that sign in was a success\n                 */\n                console.warn(\n                  'Vendor Provider: Add favorite failed message',\n                  response\n                    .json()\n                    .then((data) =>\n                      data ? JSON.parse(data) : 'Request Failed'\n                    )\n                );\n                /**\n                 * Display warning message\n                 */\n                onWarning(\n                  response\n                    .json()\n                    .then((data) =>\n                      data ? JSON.parse(data) : 'Request Failed'\n                    )\n                );\n              }\n            }\n          );\n        } else {\n          console.warn('Vendor Provider: Credetials error');\n          /**\n           * Display error message\n           */\n          onError('Request Failed');\n        }\n        console.groupEnd();\n      },\n\n      removeVendorFavorite: async (\n        product_id: string,\n        accessToken: string\n      ) => {\n        const ID = vendorId || vendor?.id.toString() || '';\n        console.group('Vendor Provider: removing favorite');\n        /**\n         * If credentials are validated...\n         */\n        if (product_id !== undefined && accessToken !== undefined) {\n          /**\n           * Dispatch auth to launch loading.\n           */\n          console.log('Fetching with', ID, product_id, accessToken);\n          /**\n           * Fetch add favorite to backend with credentials.\n           */\n          await removeFavorite(ID, product_id, accessToken).then(\n            (response) => {\n              /**\n               * If status is ~200/successful...\n               */\n              if (response.ok) {\n                /**\n                 * Serialize the payload from backend.\n                 */\n                response.json().then((data) => {\n                  /**\n                   * Ensure there's data in the payload.\n                   */\n                  if (data) {\n                    /**\n                     * Dispatch that sign in was a success\n                     */\n                    console.log(\n                      'Vendor Provider: Remove favorite success message',\n                      data.message\n                    );\n\n                    /**\n                     * Display a snackbar message\n                     */\n                    onSuccess(data.message);\n                    /**\n                     * Reload vendor data\n                     */\n                    loadVendorData(ID);\n                  }\n                });\n              } else {\n                /**\n                 * Dispatch that sign in failed\n                 */\n                // response.json().then((data) => {\n                //   if (data) {\n                //     console.warn(\n                //       'Vendor Provider: Remove favorite failed message',\n                //       JSON.parse(data)\n                //     );\n                //     onWarning(JSON.parse(data));\n                //   } else {\n                //     onWarning('Request Failed');\n                //   }\n                // });\n                console.warn(\n                  'Vendor Provider: Remove favorite failed message',\n                  response\n                    .json()\n                    .then((data) =>\n                      data ? JSON.parse(data) : 'Request Failed'\n                    )\n                );\n                /**\n                 * Display warning message\n                 */\n                onWarning(\n                  response\n                    .json()\n                    .then((data) =>\n                      data ? JSON.parse(data) : 'Request Failed'\n                    )\n                );\n              }\n            }\n          );\n        } else {\n          console.warn('Vendor Provider: Credetials error');\n          /**\n           * Display error message\n           */\n          onError('Request Failed');\n        }\n        console.groupEnd();\n      },\n\n      makeOffer: async (\n        product: string,\n        amount: string,\n        accessToken: string\n      ) => {\n        const ID = vendorId || vendor?.id.toString() || '';\n        console.group('Vendor Provider: Making Offer');\n        /**\n         * If credentials are validated...\n         */\n        if (\n          product !== undefined &&\n          amount !== undefined &&\n          accessToken !== undefined\n        ) {\n          /**\n           * Dispatch auth to launch loading.\n           */\n          console.log('Fetching with', product, amount, accessToken);\n          /**\n           * Fetch make purchase to backend with credentials.\n           */\n          await makeOffer(product, ID, amount, accessToken).then(\n            (response) => {\n              /**\n               * If status is ~200/successful...\n               */\n              if (response.ok) {\n                /**\n                 * Serialize the payload from backend.\n                 */\n                response.json().then((data) => {\n                  /**\n                   * Dispatch that purchas was initiated\n                   */\n                  console.log(\n                    'Offer Success Order Status',\n                    data.status\n                  );\n                  console.log('Offer Success Order data', data);\n                  console.log('Offer Success Order Id', data.id);\n                  /**\n                   * Display a snackbar message\n                   */\n                  onSuccess(\n                    `Offer Made. Status: ${data.status}. Order ID: ${data.id} `\n                  );\n                  /**\n                   * Reload Vendor Data\n                   */\n                  loadVendorData(ID);\n                });\n              } else {\n                /**\n                 * Dispatch that purchase failed\n                 */\n                console.warn(\n                  'Offer Failed',\n                  response\n                    .json()\n                    .then((data) =>\n                      data ? JSON.parse(data) : 'Offer Request Failed'\n                    )\n                );\n                /**\n                 * Display warning message\n                 */\n                onWarning(\n                  response\n                    .json()\n                    .then((data) =>\n                      data ? JSON.parse(data) : 'Offer Request Failed'\n                    )\n                );\n              }\n            }\n          );\n        } else {\n          console.warn('Offer: Credentials error');\n\n          /**\n           * Display error message\n           */\n          onError('Request Failed with Credentials Error');\n        }\n        console.groupEnd();\n      },\n\n      makePurchase: async (product: string, accessToken: string) => {\n        const ID = vendorId || vendor?.id.toString() || '';\n        console.group('Vendor Provider: Making Purchase');\n        /**\n         * If credentials are validated...\n         */\n        if (product !== undefined && accessToken !== undefined) {\n          /**\n           * Dispatch auth to launch loading.\n           */\n          console.log('fetching with', ID, product, accessToken);\n          /**\n           * Fetch make purchase to backend with credentials.\n           */\n          await makePurchase(product, ID, accessToken).then(\n            (response) => {\n              /**\n               * If status is ~200/successful...\n               */\n              if (response.ok) {\n                /**\n                 * Serialize the payload from backend.\n                 */\n                response.json().then((data) => {\n                  /**\n                   * Dispatch that purchas was initiated\n                   */\n                  console.log(\n                    'Purchase Success Order Status',\n                    data.status\n                  );\n                  console.log('Purchase Success Order data', data);\n                  console.log('Purchase Success Order Id', data.id);\n                  /**\n                   * Display a snackbar message\n                   */\n                  onSuccess(\n                    `Purchase Initiated. Status: ${data.status}. Order ID: ${data.id} `\n                  );\n                  /**\n                   * Reload Vendor Data\n                   */\n                  loadVendorData(ID);\n                });\n              } else {\n                /**\n                 * Dispatch that purchase failed\n                 */\n                console.warn(\n                  'Purchase Failed',\n                  response\n                    .json()\n                    .then((data) =>\n                      data\n                        ? JSON.parse(data)\n                        : 'Purchase Request Failed'\n                    )\n                );\n                /**\n                 * Display warning message\n                 */\n                onWarning(\n                  response\n                    .json()\n                    .then((data) =>\n                      data\n                        ? JSON.parse(data)\n                        : 'Purchase Request Failed'\n                    )\n                );\n              }\n            }\n          );\n        } else {\n          console.warn('Purchase: Credentials error');\n          /**\n           * Display error message\n           */\n          onError('Request Failed');\n        }\n        console.groupEnd();\n      },\n\n      acceptOffer: async (\n        orderId: string,\n        product: string,\n        buyer: string,\n        accessToken: string\n      ) => {\n        console.group('Vendor Provider: Accepting Offer');\n        /**\n         * If credentials are validated...\n         */\n        if (\n          orderId !== undefined &&\n          product !== undefined &&\n          buyer !== undefined &&\n          accessToken !== undefined\n        ) {\n          /**\n           * Dispatch auth to launch loading.\n           */\n          console.log(\n            'Fetching with',\n            orderId,\n            product,\n            buyer,\n            accessToken\n          );\n          /**\n           * Fetch make purchase to backend with credentials.\n           */\n          await acceptOffer(\n            orderId,\n            product,\n            buyer,\n            accessToken\n          ).then((response) => {\n            /**\n             * If status is ~200/successful...\n             */\n            if (response.ok) {\n              /**\n               * Serialize the payload from backend.\n               */\n              response.json().then((data) => {\n                /**\n                 * Dispatch that purchas was initiated\n                 */\n                console.log(\n                  'Accept Offer Success Order Status',\n                  data.status\n                );\n                console.log('Accept Success Order data', data);\n                console.log('Accept Success Order Id', data.id);\n                /**\n                 * Display a snackbar message\n                 */\n                onSuccess(\n                  `Offer Accepted. Status: ${data.status}. Order ID: ${data.id} `\n                );\n                /**\n                 * Reload Vendor Data\n                 */\n                vendorId && loadVendorData(vendorId);\n              });\n            } else {\n              /**\n               * Dispatch that purchase failed\n               */\n              console.warn(\n                'Accept Failed',\n                response\n                  .json()\n                  .then((data) =>\n                    data\n                      ? JSON.parse(data)\n                      : 'Request to Accept Offer Failed'\n                  )\n              );\n              /**\n               * Display warning message\n               */\n              onWarning(\n                response\n                  .json()\n                  .then((data) =>\n                    data\n                      ? JSON.parse(data)\n                      : 'Request to Accept Offer Failed'\n                  )\n              );\n            }\n          });\n        } else {\n          console.warn('Offer: Credentials error');\n\n          /**\n           * Display error message\n           */\n          onError('Request Failed with Credentials Error');\n        }\n        console.groupEnd();\n      },\n\n      declineOffer: async (\n        orderId: string,\n        product: string,\n        buyer: string,\n        accessToken: string\n      ) => {\n        console.group('Vendor Provider: Declining Offer');\n        /**\n         * If credentials are validated...\n         */\n        if (\n          orderId !== undefined &&\n          product !== undefined &&\n          buyer !== undefined &&\n          accessToken !== undefined\n        ) {\n          /**\n           * Dispatch auth to launch loading.\n           */\n          console.log(\n            'Fetching with',\n            orderId,\n            product,\n            buyer,\n            accessToken\n          );\n          /**\n           * Fetch make declineoffer to backend with credentials.\n           */\n          await declineOffer(\n            orderId,\n            product,\n            buyer,\n            accessToken\n          ).then((response) => {\n            /**\n             * If status is ~200/successful...\n             */\n            if (response.ok) {\n              /**\n               * Serialize the payload from backend.\n               */\n              response.json().then((data) => {\n                /**\n                 * Dispatch that purchas was initiated\n                 */\n                console.log(\n                  'Decline Offer Success Order Status',\n                  data.status\n                );\n                console.log('Decline Success Order data', data);\n                console.log('Decline Success Order Id', data.id);\n                /**\n                 * Display a snackbar message\n                 */\n                onSuccess(\n                  `Offer Declined. Status: ${data.status}. Order ID: ${data.id} `\n                );\n                /**\n                 * Reload Vendor Data\n                 */\n                vendorId && loadVendorData(vendorId);\n              });\n            } else {\n              /**\n               * Dispatch that purchase failed\n               */\n              console.warn(\n                'Decline Failed',\n                response\n                  .json()\n                  .then((data) =>\n                    data\n                      ? JSON.parse(data)\n                      : 'Request to Decline Offer Failed'\n                  )\n              );\n              /**\n               * Display warning message\n               */\n              onWarning(\n                response\n                  .json()\n                  .then((data) =>\n                    data\n                      ? JSON.parse(data)\n                      : 'Request to Decline Offer Failed'\n                  )\n              );\n            }\n          });\n        } else {\n          console.warn('Offer: Credentials error');\n          /**\n           * Display error message\n           */\n          onError('Request Failed with Credentials Error');\n        }\n        console.groupEnd();\n      },\n\n      completePayment: async (\n        orderId: string,\n        product: string,\n        buyer: string,\n        accessToken: string\n      ) => {\n        console.group('Vendor Provider: Completing Payment');\n        /**\n         * If credentials are validated...\n         */\n        if (\n          orderId !== undefined &&\n          product !== undefined &&\n          buyer !== undefined &&\n          accessToken !== undefined\n        ) {\n          /**\n           * Dispatch auth to launch loading.\n           */\n          console.log(\n            'Fetching with',\n            orderId,\n            product,\n            buyer,\n            accessToken\n          );\n          /**\n           * Fetch make purchase to backend with credentials.\n           */\n          await completePayment(\n            orderId,\n            product,\n            buyer,\n            accessToken\n          ).then((response) => {\n            /**\n             * If status is ~200/successful...\n             */\n            if (response.ok) {\n              /**\n               * Serialize the payload from backend.\n               */\n              response.json().then((data) => {\n                /**\n                 * Dispatch that purchas was initiated\n                 */\n                console.log(\n                  'Complete Payment Success Order Status',\n                  data.status\n                );\n                console.log(\n                  'Complete Payment Success Order data',\n                  data\n                );\n                console.log(\n                  'Complete Payment Success Order Id',\n                  data.id\n                );\n                /**\n                 * Display a snackbar message\n                 */\n                onSuccess(\n                  `Payment Completed. Status: ${data.status}. Order ID: ${data.id} `\n                );\n                /**\n                 * Reload Vendor Data\n                 */\n                vendorId && loadVendorData(vendorId);\n              });\n            } else {\n              /**\n               * Dispatch that purchase failed\n               */\n              console.warn(\n                'Complete Payment Failed',\n                response\n                  .json()\n                  .then((data) =>\n                    data\n                      ? JSON.parse(data)\n                      : 'Request to Complete Payment Failed'\n                  )\n              );\n              /**\n               * Display warning message\n               */\n              onWarning(\n                response\n                  .json()\n                  .then((data) =>\n                    data\n                      ? JSON.parse(data)\n                      : 'Request to Complete Payment Failed'\n                  )\n              );\n            }\n          });\n        } else {\n          console.warn('Offer: Credentials error');\n\n          /**\n           * Display error message\n           */\n          onError('Request Failed with Credentials Error');\n        }\n        console.groupEnd();\n      },\n\n      createProduct: async (\n        title: string,\n        category: string,\n        description: string,\n        price: string,\n        condition: string,\n        accessToken: string,\n        images?: FileList\n      ) => {\n        const ID = vendorId || vendor?.id.toString() || '';\n        console.group('Vendor Provider: Creating Product');\n        /**\n         * If credentials are validated...\n         */\n        if (\n          title !== undefined &&\n          category !== undefined &&\n          description !== undefined &&\n          price !== undefined &&\n          condition !== undefined &&\n          accessToken !== undefined &&\n          images !== undefined\n        ) {\n          /**\n           * Dispatch auth to launch loading.\n           */\n          console.log(\n            'Fetching with',\n            title,\n            category,\n            description,\n            price,\n            condition,\n            accessToken,\n            images\n          );\n          /**\n           * Fetch add favorite to backend with credentials.\n           */\n          await createProduct(\n            ID,\n            title,\n            category,\n            description,\n            price,\n            condition,\n            accessToken,\n            images\n          ).then((response) => {\n            /**\n             * If status is ~200/successful...\n             */\n            if (response.ok) {\n              /**\n               * Serialize the payload from backend.\n               */\n              response.json().then((data) => {\n                /**\n                 * Ensure there's data in the payload.\n                 */\n                if (data) {\n                  /**\n                   * Dispatch that create product was a success\n                   */\n                  console.log(\n                    'Vendor Provider: Create Product success data',\n                    data\n                  );\n                  /**\n                   * Display a snackbar message\n                   */\n                  onSuccess(\n                    `Product Created. Product ID: ${data.id}`\n                  );\n                  /**\n                   * Reload vendor data\n                   */\n                  loadVendorData(ID);\n                  console.log('current vendor id in fetch', vendorId);\n                  /**\n                   * Reload products\n                   */\n                  loadProducts();\n                }\n              });\n            } else {\n              /**\n               * Dispatch that product creation failed\n               */\n              console.warn(\n                'Vendor Provider: Create Productfailed message',\n                response\n                  .json()\n                  .then((data) =>\n                    data\n                      ? JSON.parse(data)\n                      : 'Creating Product Failed'\n                  )\n              );\n              /**\n               * Display warning message\n               */\n              onWarning(\n                response\n                  .json()\n                  .then((data) =>\n                    data\n                      ? JSON.parse(data)\n                      : 'Creating Product Failed'\n                  )\n              );\n            }\n          });\n        } else {\n          console.warn('Vendor Provider: Credetials error');\n          console.log(\n            vendorId,\n            title,\n            description,\n            category,\n            price,\n            condition,\n            accessToken,\n            images\n          );\n          /**\n           * Display error message\n           */\n          onError('Request Failed');\n        }\n        console.groupEnd();\n      },\n\n      updateProduct: async (\n        slug: string,\n        title: string,\n        category: string,\n        description: string,\n        price: string,\n        condition: string,\n        accessToken: string,\n        images?: FileList\n      ) => {\n        const ID = vendorId || vendor?.id.toString() || '';\n        console.group('Vendor Provider: Updating Product');\n        /**\n         * If credentials are validated...\n         */\n        if (\n          slug !== undefined &&\n          title !== undefined &&\n          category !== undefined &&\n          description !== undefined &&\n          price !== undefined &&\n          condition !== undefined &&\n          accessToken !== undefined &&\n          images !== undefined\n        ) {\n          /**\n           * Dispatch auth to launch loading.\n           */\n          console.log(\n            'Fetching with',\n            slug,\n            title,\n            category,\n            description,\n            price,\n            condition,\n            accessToken,\n            images\n          );\n          /**\n           * Fetch add favorite to backend with credentials.\n           */\n          await updateProduct(\n            slug,\n            ID,\n            title,\n            category,\n            description,\n            price,\n            condition,\n            accessToken,\n            images\n          ).then((response) => {\n            /**\n             * If status is ~200/successful...\n             */\n            if (response.ok) {\n              /**\n               * Serialize the payload from backend.\n               */\n              response.json().then((data) => {\n                /**\n                 * Ensure there's data in the payload.\n                 */\n                if (data) {\n                  /**\n                   * Dispatch that create product was a success\n                   */\n                  console.log(\n                    'Vendor Provider: Update Product success data',\n                    data\n                  );\n                  /**\n                   * Display a snackbar message\n                   */\n                  onSuccess(\n                    `Product Updated. Product ID: ${data.id}`\n                  );\n                  /**\n                   * Reload vendor data\n                   */\n                  loadVendorData(ID);\n                  // return {\n                  //   status: data.status\n                  // }\n                  /**\n                   * Reload products\n                   */\n                  loadProducts();\n                }\n              });\n            } else {\n              /**\n               * Dispatch that product creation failed\n               */\n              console.warn(\n                'Vendor Provider: Create Productfailed message',\n                response\n                  .json()\n                  .then((data) =>\n                    data ? JSON.parse(data) : 'Update Product Failed'\n                  )\n              );\n              /**\n               * Display warning message\n               */\n              onWarning(\n                response\n                  .json()\n                  .then((data) =>\n                    data ? JSON.parse(data) : 'Update Product Failed'\n                  )\n              );\n            }\n          });\n        } else {\n          console.warn('Vendor Provider: Credetials error');\n          /**\n           * Display error message\n           */\n          onError('Request Failed');\n        }\n        console.groupEnd();\n      },\n\n      loading,\n      error,\n      vendor,\n      state,\n      dispatch,\n      vendorId,\n      loadVendorData,\n    }),\n    [state]\n  );\n\n  return (\n    <VendorData.Provider value={vendorContextValue}>\n      {children}\n      <View>\n        <Toast\n          open={openSuccess}\n          setOpen={setOpenSuccess}\n          success\n          message={message}\n        />\n        <Toast\n          open={openWarning}\n          setOpen={setOpenWarning}\n          warning\n          message={message}\n        />\n        <Toast\n          open={openError}\n          setOpen={setOpenError}\n          error\n          message={message}\n        />\n      </View>\n    </VendorData.Provider>\n  );\n}\n\nexport const useVendorData = () => React.useContext(VendorData);\n","import React from 'react';\nimport { Platform, View } from 'react-native';\n\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport {\n  AccountStackNavigatorParamList,\n  ProductStackNavigatorParamList,\n} from '../types';\n\nimport { Toast } from '../components/common/toast';\n\nimport { localStorage } from '../utils/storage';\nimport { nativeStorage } from '../utils/nativeStorage';\nimport {\n  signInRequest,\n  signUpRequest,\n  signOutRequest,\n} from '../services/auth.service';\n\nimport { AuthResponseType } from '../types';\nimport { useVendorData, VendorActionTypes } from './vendor.context';\n\nexport type AllRoutes = AccountStackNavigatorParamList &\n  ProductStackNavigatorParamList;\n\nexport enum AuthActionTypes {\n  TO_SIGNUP_PAGE,\n  TO_SIGNIN_PAGE,\n  RESTORE_TOKEN,\n  RESTORE_TOKEN_ERROR,\n  SIGNING_IN,\n  SIGNING_IN_ERROR,\n  SIGNING_OUT,\n  SIGNING_OUT_ERROR,\n  SIGNED_UP,\n  SIGN_IN,\n  SIGN_OUT,\n}\n\nexport interface AuthAction {\n  type: AuthActionTypes;\n  accessToken?: null | string;\n  error?: any;\n}\n\nexport type AuthStateInterface = {\n  isLoading: boolean;\n  isSignedOut: boolean;\n  isSignedUp: boolean;\n  isSignedIn: boolean;\n  noAccount: boolean;\n  accessToken?: null | string;\n  error?: any;\n};\n\nexport const initialState = {\n  isLoading: true,\n  isSignedOut: false,\n  isSignedUp: false,\n  noAccount: false,\n  isSignedIn: false,\n  accessToken: null,\n  refreshToken: null,\n  error: undefined,\n};\n\nexport type AuthDataType = {\n  signIn: (username: string, password: string) => Promise<void>;\n  signOut: () => Promise<void>;\n  signUp: (\n    username: string,\n    email: string,\n    password: string\n  ) => Promise<void>;\n  isSignedOut: boolean;\n  isSignedIn: boolean;\n  isSignedUp: boolean;\n  isLoading: boolean;\n  noAccount: boolean;\n  accessToken?: string | null;\n  error?: any;\n  state: AuthStateInterface;\n};\n\nexport const AuthContext = React.createContext<AuthDataType>(\n  undefined!\n);\n\nexport default function AuthorizationProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [state, dispatch] = React.useReducer(\n    (\n      prevState: AuthStateInterface,\n      { type, error, accessToken }: AuthAction\n    ) => {\n      switch (type) {\n        case AuthActionTypes.TO_SIGNUP_PAGE:\n          return {\n            ...prevState,\n            isLoading: false,\n            isSignedUp: false,\n            noAccount: true,\n          };\n        case AuthActionTypes.TO_SIGNIN_PAGE:\n          return {\n            ...prevState,\n            isLoading: false,\n            isSignedIn: false,\n            noAccount: false,\n          };\n        case AuthActionTypes.RESTORE_TOKEN:\n          return {\n            ...prevState,\n            accessToken,\n            isLoading: false,\n          };\n        case AuthActionTypes.RESTORE_TOKEN_ERROR:\n          return {\n            ...prevState,\n            error,\n            isLoading: false,\n          };\n\n        case AuthActionTypes.SIGNED_UP:\n          return {\n            ...prevState,\n            isSignedIn: true,\n            isSignedUp: true,\n            isLoading: false,\n            accessToken,\n          };\n        case AuthActionTypes.SIGNING_IN:\n          return {\n            ...prevState,\n            isLoading: true,\n          };\n        case AuthActionTypes.SIGNING_IN_ERROR:\n          return {\n            ...prevState,\n            isLoading: false,\n            error: error,\n          };\n        case AuthActionTypes.SIGN_IN:\n          return {\n            ...prevState,\n            isSignedOut: false,\n            isSignedIn: true,\n            isSignedUp: true,\n            accessToken,\n          };\n        case AuthActionTypes.SIGNING_OUT:\n          return {\n            ...prevState,\n            loading: true,\n          };\n\n        case AuthActionTypes.SIGN_OUT:\n          return {\n            ...prevState,\n            isLoading: false,\n            isSignedOut: true,\n            accessToken: null,\n            refreshToken: null,\n          };\n        case AuthActionTypes.SIGNING_OUT_ERROR:\n          return {\n            ...prevState,\n            isLoading: false,\n            error,\n          };\n      }\n    },\n    initialState\n  );\n\n  React.useEffect(() => {\n    // Fetch the token from storage then navigate to our appropriate place\n    const bootstrapAsync = async () => {\n      let userToken;\n\n      if (Platform.OS !== 'web') {\n        try {\n          const nativeToken = await nativeStorage.getToken();\n          if (nativeToken) {\n            userToken = nativeToken;\n          }\n        } catch (error: any) {\n          // Restoring token failed\n          dispatch({\n            type: AuthActionTypes.RESTORE_TOKEN_ERROR,\n            accessToken: null,\n            error,\n          });\n          console.log('error', error.message);\n        }\n      }\n\n      try {\n        console.log('else');\n        const localToken = await localStorage.getToken();\n        if (localToken) {\n          console.log('token in local', localToken);\n          userToken = localToken;\n          dispatch({\n            type: AuthActionTypes.RESTORE_TOKEN,\n            accessToken: localToken,\n          });\n        }\n      } catch (error: any) {\n        dispatch({\n          type: AuthActionTypes.RESTORE_TOKEN_ERROR,\n          accessToken: null,\n          error,\n        });\n        console.log('error', error.message);\n      }\n\n      console.log('fetched token', userToken);\n\n      // After restoring token, we may need to validate it in production apps\n      // This will switch to the App screen or Auth screen and this loading\n      // screen will be unmounted and thrown away.\n\n      dispatch({\n        type: AuthActionTypes.RESTORE_TOKEN,\n        accessToken: userToken,\n      });\n\n      console.log('stored to state', state.accessToken);\n    };\n    bootstrapAsync();\n  }, []);\n\n  const { dispatch: vendorDispatch } = useVendorData();\n  const [openSuccess, setOpenSuccess] = React.useState(false);\n  const [openWarning, setOpenWarning] = React.useState(false);\n  const [openError, setOpenError] = React.useState(false);\n  const [message, setMessage] = React.useState<string | any>('');\n\n  const onSuccess = (text: string | any) => {\n    setMessage(text);\n    setOpenSuccess(true);\n    setTimeout(() => {\n      setOpenSuccess(false);\n      setMessage('');\n    }, 2500);\n  };\n  const onWarning = (text: string | any) => {\n    setMessage(text);\n    setOpenWarning(true);\n    setTimeout(() => {\n      setOpenWarning(false);\n      setMessage('');\n    }, 2500);\n  };\n  const onError = (text: string | any) => {\n    setMessage(text);\n    setOpenError(true);\n    setTimeout(() => {\n      setOpenError(false);\n      setMessage('');\n    }, 2500);\n  };\n  console.log('second stored to state', state.accessToken);\n  // In a production app, we need to send some data (usually username, password) to server and get a token\n  // We will also need to handle errors if sign in failed\n  // After getting token, we need to persist the token using `AsyncStorage`\n  const authContextValue = React.useMemo(\n    () => ({\n      signIn: async (\n        username: string,\n        password: string,\n        navigation?: StackNavigationProp<AllRoutes>\n      ) => {\n        /**\n         * If credentials are validated...\n         */\n        if (username !== undefined && password !== undefined) {\n          /**\n           * Dispatch auth to launch loading.\n           */\n          dispatch({\n            type: AuthActionTypes.SIGNING_IN,\n          });\n          /**\n           * Fetch sign in to backend with credentials.\n           */\n          await signInRequest({\n            body: {\n              username,\n              password,\n            },\n          }).then((response) => {\n            /**\n             * If status is ~200/successful...\n             */\n            if (response.ok) {\n              /**\n               * Serialize the payload from backend.\n               */\n              response.json().then((data: AuthResponseType) => {\n                /**\n                 * Ensure there's data in the payload.\n                 */\n                if (data) {\n                  console.log('Sign In Data', data);\n                  /**\n                   * Dispatch that sign in was a success\n                   */\n                  dispatch({\n                    type: AuthActionTypes.SIGN_IN,\n                    accessToken: data.access,\n                  });\n                  /**\n                   * If we're running natively, set the native local token\n                   */\n                  if (Platform.OS !== 'web') {\n                    console.log('native set token');\n                    nativeStorage.setToken(data.access);\n                  }\n                  /**\n                   * Set the local token\n                   */\n                  localStorage.setToken(data.access);\n                  /**\n                   * Dispatch the user data to vendor provider\n                   */\n                  vendorDispatch({\n                    type: VendorActionTypes.fetchVendorSuccess,\n                    vendor: data.user,\n                  });\n                  /**\n                   * Display a snackbar message\n                   */\n                  onSuccess(`Welcome back, ${data.user.name}`);\n                }\n              });\n            } else {\n              /**\n               * Dispatch that Sign in failed\n               */\n              dispatch({\n                type: AuthActionTypes.SIGNING_IN_ERROR,\n                error: response\n                  .json()\n                  .then((data) =>\n                    data\n                      ? JSON.parse(data)\n                      : { message: 'Sign In Failed' }\n                  ),\n              });\n              /**\n               * Dispatch to vendor provider that user data fetch failed\n               */\n              vendorDispatch({\n                type: VendorActionTypes.fetchVendorFailure,\n              });\n              /**\n               * Display a snackbar message\n               */\n              onWarning(\n                response\n                  .json()\n                  .then((data) =>\n                    data ? JSON.parse(data) : 'Sign In Failed'\n                  )\n              );\n            }\n          });\n        } else {\n          /**\n           * Dispatch Auth that credentials failed\n           */\n          dispatch({\n            type: AuthActionTypes.TO_SIGNIN_PAGE,\n          });\n          /**\n           * Display Error snackbar message\n           */\n          onError('Request Failed');\n        }\n      },\n\n      signOut: async () => {\n        console.log('AuthContext: Sign out');\n        /**\n         * Dispatch auth to launch loading.\n         */\n        dispatch({\n          type: AuthActionTypes.SIGNING_OUT,\n        });\n        /**\n         * Fetch sign out to backend with access token.\n         */\n        await signOutRequest({\n          accessToken: state.accessToken,\n        }).then((response) => {\n          /**\n           * If status is ~200/successful...\n           */\n          if (response.ok) {\n            /**\n             * Dispatch auth to launch sign out event.\n             */\n            dispatch({ type: AuthActionTypes.SIGN_OUT });\n            /**\n             * Display successful snackbar message.\n             */\n            onSuccess('Signed Out');\n          } else {\n            /**\n             * Dispatch auth to laucnh sigg out failure event.\n             */\n            dispatch({\n              type: AuthActionTypes.SIGNING_OUT_ERROR,\n              error: response\n                .json()\n                .then((data) =>\n                  data\n                    ? JSON.parse(data)\n                    : { message: 'Sign Out Failed' }\n                ),\n            });\n            /**\n             * Display warning snackbar message.\n             */\n            onWarning(\n              response\n                .json()\n                .then((data) =>\n                  data ? JSON.parse(data) : 'Sign Out Failed'\n                )\n            );\n          }\n        });\n      },\n\n      signUp: async (\n        username: string,\n        email: string,\n        password: string\n      ) => {\n        /**\n         * If credentials are validated...\n         */\n        if (\n          username !== undefined &&\n          email !== undefined &&\n          password !== undefined\n        ) {\n          /**\n           * Dispatch auth to launch loading.\n           */\n          dispatch({\n            type: AuthActionTypes.SIGNING_IN,\n          });\n          /**\n           * Fetch sign up to backend with credentials.\n           */\n          await signUpRequest({\n            body: {\n              username,\n              email,\n              password,\n            },\n          }).then((response) => {\n            /**\n             * If status is ~200/successful...\n             */\n            if (response.ok) {\n              /**\n               * Serialize the payload from backend.\n               */\n              response.json().then((data: AuthResponseType) => {\n                /**\n                 * Ensure there's data in the payload.\n                 */\n                if (data) {\n                  /**\n                   * Dispatch auth that sign up was a success\n                   */\n                  dispatch({\n                    type: AuthActionTypes.SIGNED_UP,\n                    accessToken: data.access,\n                  });\n                  /**\n                   * If we're running natively, set the native local token\n                   */\n                  if (Platform.OS !== 'web') {\n                    console.log('native set token');\n                    nativeStorage.setToken(data.access);\n                  }\n                  /**\n                   * Set the local token\n                   */\n                  localStorage.setToken(data.access);\n                  /**\n                   * Dispatch the user data to vendor provider\n                   */\n                  vendorDispatch({\n                    type: VendorActionTypes.fetchVendorSuccess,\n                    vendor: data.user,\n                  });\n                  /**\n                   * Display a successful snackbar message\n                   */\n                  onSuccess('Account Created');\n                }\n              });\n            } else {\n              /**\n               * Dispatch auth that Sign up failed\n               */\n              dispatch({\n                type: AuthActionTypes.SIGNING_IN_ERROR,\n                error: response\n                  .json()\n                  .then((data) =>\n                    data\n                      ? JSON.parse(data)\n                      : { message: 'Sign Up Failed' }\n                  ),\n              });\n              /**\n               * Dispatch to vendor provider that fetching user data failed.\n               */\n              vendorDispatch({\n                type: VendorActionTypes.fetchVendorFailure,\n              });\n              /**\n               * Display warning snackbar message\n               */\n              onWarning(\n                response\n                  .json()\n                  .then((data) =>\n                    data ? JSON.parse(data) : 'Sign Up Failed'\n                  )\n              );\n            }\n          });\n        } else {\n          /**\n           * Dispatch auth that credentials are invalid.\n           */\n          dispatch({\n            type: AuthActionTypes.TO_SIGNUP_PAGE,\n          });\n          /**\n           * Display Error snackbar message\n           */\n          onError('Request Failed');\n        }\n      },\n      state,\n      isSignedOut: state.isSignedOut,\n      isSignedIn: state.isSignedIn,\n      isLoading: state.isLoading,\n      noAccount: state.noAccount,\n      accessToken: state.accessToken,\n      isSignedUp: state.isSignedUp,\n    }),\n\n    [state]\n  );\n\n  return (\n    <AuthContext.Provider value={authContextValue}>\n      {children}\n      <View>\n        <Toast\n          open={openSuccess}\n          setOpen={setOpenSuccess}\n          success\n          message={message}\n        />\n        <Toast\n          open={openWarning}\n          setOpen={setOpenWarning}\n          warning\n          message={message}\n        />\n        <Toast\n          open={openError}\n          setOpen={setOpenError}\n          error\n          message={message}\n        />\n      </View>\n    </AuthContext.Provider>\n  );\n}\n\nexport const useAuth = () => React.useContext(AuthContext);\n","import React from 'react';\nimport {\n  ImageBackground,\n  StyleSheet,\n  KeyboardAvoidingView,\n} from 'react-native';\nimport { useTheme, Surface } from 'react-native-paper';\n\nexport default function Background({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const theme = useTheme();\n  return (\n    <ImageBackground\n      source={require('../../assets/background_dot.png')}\n      resizeMode=\"repeat\"\n      style={[\n        styles.background,\n        { backgroundColor: theme.colors.surface },\n      ]}\n      // style={{ flex: 1, width: \"100%\", backgroundColor: theme.colors.surface }}\n    >\n      <KeyboardAvoidingView\n        style={styles.container}\n        behavior=\"padding\"\n      >\n        {children}\n      </KeyboardAvoidingView>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    width: '100%',\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    width: '100%',\n    maxWidth: 340,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { Image, StyleSheet } from 'react-native';\nimport { ActivityIndicator } from 'react-native-paper';\nimport { DEFAULT_ICON } from '../../constants/backend.constants';\n\nexport default function Logo({ loading }: { loading?: boolean }) {\n  const image = { uri: DEFAULT_ICON };\n  return loading ? (\n    <ActivityIndicator\n      // hidesWhenStopped={true}\n      animating={loading}\n      style={styles.image}\n    />\n  ) : (\n    <Image\n      source={require('../../assets/logo.png')}\n      style={styles.image}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 110,\n    height: 110,\n    marginBottom: 8,\n  },\n});\n","import React from \"react\";\nimport { StyleSheet, TextInputProps } from \"react-native\";\nimport { Text, useTheme } from \"react-native-paper\";\n\nexport default function Header({ children }: { children: React.ReactNode }) {\n  const theme = useTheme();\n  return (\n    <Text\n      style={{\n        fontSize: 21,\n        color: theme.colors.primary,\n        fontWeight: \"bold\",\n        paddingVertical: 12,\n      }}\n    >\n      {children}{\" \"}\n    </Text>\n  );\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport Background from '../../components/common/background';\nimport Logo from '../../components/common/logo';\nimport Header from '../../components/common/header';\nimport {\n  Paragraph,\n  Button,\n  Headline,\n  useTheme,\n} from 'react-native-paper';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { AccountStackNavigatorParamList } from '../../types';\nimport { useAuth } from '../../context/authorization.context';\n\nexport default function StartScreen({\n  navigation,\n}: {\n  navigation: StackNavigationProp<AccountStackNavigatorParamList>;\n}) {\n  const theme = useTheme();\n  // const {\n  //   isLoading,\n  //   isSignedIn,\n  //   accessToken,\n  //   noAccount,\n  //   isSignedUp,\n  // } = useAuth();\n\n  // console.log('isSignedIn', isSignedIn);\n  // console.log('isLoading', isLoading);\n  // console.log('accessToken', accessToken);\n  // console.log('noAccount', noAccount);\n  // console.log('isSignedUp', isSignedUp);\n\n  // React.useEffect(() => {\n  //   if (isLoading) {\n  //     navigation.replace('Dashboard');\n  //   }\n  //   if (isSignedIn && accessToken && isSignedUp) {\n  //     console.log('isSignedIn and accessToken and isSignedUp');\n  //     navigation.replace('LoginScreen');\n  //   }\n  //   if (!isSignedUp && noAccount) {\n  //     console.log('not isSignedUp and noAccount');\n  //     navigation.replace('RegisterScreen');\n  //   }\n  //   if (!isSignedIn && !noAccount) {\n  //     console.log('not isSignedIn and not noAccount');\n  //     navigation.replace('LoginScreen');\n  //   }\n  // }, [isSignedIn, accessToken, isSignedUp, noAccount, isLoading]);\n  return (\n    <Background>\n      <Logo />\n      <Header>Welcome to ThriftHub</Header>\n      <Paragraph>\n        An online thrift store for second-hand goods!\n      </Paragraph>\n      <Button\n        mode=\"contained\"\n        labelStyle={styles.text}\n        style={styles.button}\n        onPress={() => navigation.navigate('LoginScreen')}\n      >\n        Login\n      </Button>\n      <Button\n        mode=\"outlined\"\n        labelStyle={styles.text}\n        style={[\n          styles.button,\n          { backgroundColor: theme.colors.surface },\n        ]}\n        onPress={() => navigation.navigate('RegisterScreen')}\n      >\n        Sign Up\n      </Button>\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    marginVertical: 10,\n    paddingVertical: 2,\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    lineHeight: 26,\n  },\n});\n","import React, { useState } from 'react';\n\nimport {\n  TouchableOpacity,\n  StyleSheet,\n  View,\n  ScrollView,\n} from 'react-native';\nimport {\n  useController,\n  useForm,\n  SubmitHandler,\n  SubmitErrorHandler,\n} from 'react-hook-form';\nimport _ from 'lodash/fp';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { FormBuilder } from 'react-native-paper-form-builder';\nimport { LogicProps } from 'react-native-paper-form-builder/dist/Types/Types';\nimport {\n  Text,\n  useTheme,\n  TextInput,\n  Button,\n  List,\n  Checkbox,\n  ActivityIndicator,\n} from 'react-native-paper';\nimport Background from '../../components/common/background';\nimport Logo from '../../components/common/logo';\nimport Header from '../../components/common/header';\nimport BackButton from '../../components/common/backButton';\n\nimport { useAuth } from '../../context/authorization.context';\n\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { AccountStackNavigatorParamList } from '../../types';\n\ntype FormValues = {\n  username: string;\n  password: string;\n};\n\nexport default function LoginScreen({\n  navigation,\n}: {\n  navigation: StackNavigationProp<AccountStackNavigatorParamList>;\n}) {\n  const theme = useTheme();\n  const { signIn, isLoading } = useAuth();\n  const [getUsername, setUsername] = useState('');\n  const [getPassword, setPassword] = useState('');\n\n  const {\n    control,\n    setFocus,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormValues>({\n    defaultValues: {\n      username: '',\n      password: '',\n    },\n    mode: 'onChange',\n    criteriaMode: 'all',\n  });\n\n  const onSubmit: SubmitHandler<FormValues> = (data, e) => {\n    console.log(data, e);\n    signIn(data.username, data.password);\n  };\n  const onError: SubmitErrorHandler<FormValues> = (errors, e) => {\n    console.log(errors, e);\n    // navigation.reset({});\n  };\n\n  return (\n    <Background>\n      <Logo loading={isLoading} />\n\n      <Header>Welcome Back</Header>\n\n      <View style={styles.container}>\n        <FormBuilder\n          inputSpacing={12}\n          inputSpacingHorizontal={4}\n          theme={theme}\n          control={control}\n          setFocus={setFocus}\n          formConfigArray={[\n            {\n              name: 'username',\n              type: 'text',\n              textInputProps: {\n                label: 'Username',\n                style: styles.textInput,\n                left: <TextInput.Icon name={'account'} />,\n                underlineColor: 'transparent',\n                mode: 'outlined',\n                textContentType: 'username',\n                returnKeyType: 'next',\n                keyboardType: 'default',\n                autoCapitalize: 'none',\n                value: getUsername,\n                onChangeText: (username) => setUsername(username),\n                onSubmitEditing: () => setFocus('password'),\n              },\n              rules: {\n                required: {\n                  value: true,\n                  message: 'Username is required',\n                },\n              },\n            },\n            {\n              name: 'password',\n              type: 'password',\n              textInputProps: {\n                label: 'Password',\n                style: styles.textInput,\n                left: <TextInput.Icon name={'lock'} />,\n                underlineColor: 'transparent',\n                mode: 'outlined',\n                textContentType: 'password',\n                returnKeyType: 'send',\n                keyboardType: 'default',\n                value: getPassword,\n                onChangeText: (password) => setPassword(password),\n                secureTextEntry: true,\n                onSubmitEditing: () =>\n                  handleSubmit(onSubmit, onError),\n              },\n              rules: {\n                required: {\n                  value: true,\n                  message: 'Password is required',\n                },\n                minLength: {\n                  value: 4,\n                  message: 'Password should be atleast 4 characters',\n                },\n                maxLength: {\n                  value: 30,\n                  message:\n                    'Password should be between 8 and 30 characters',\n                },\n              },\n            },\n          ]}\n        />\n      </View>\n\n      <Button\n        mode={'contained'}\n        labelStyle={styles.text}\n        style={[styles.button, { marginTop: 24 }]}\n        onPress={handleSubmit(onSubmit, onError)}\n      >\n        LogIn\n      </Button>\n\n      <ErrorMessage\n        errors={errors}\n        name=\"username\"\n        render={({ messages }) => {\n          console.log('messages', messages);\n          return (\n            messages &&\n            _.entries(messages).map(([type, message]) => (\n              <Text key={type}>{message}</Text>\n            ))\n          );\n        }}\n      />\n\n      <ErrorMessage\n        errors={errors}\n        name=\"password\"\n        render={({ messages }) => {\n          console.log('messages', messages);\n          return (\n            messages &&\n            _.entries(messages).map(([type, message]) => (\n              <Text key={type}>{message}</Text>\n            ))\n          );\n        }}\n      />\n\n      <View style={styles.row}>\n        <Text>Don’t have an account? </Text>\n        <TouchableOpacity\n          onPress={() => navigation.replace('RegisterScreen')}\n        >\n          <Text\n            style={{\n              fontWeight: 'bold',\n              color: theme.colors.primary,\n            }}\n          >\n            Sign up\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  );\n}\n\nfunction ForgotPassword({\n  navigation,\n}: {\n  navigation: StackNavigationProp<AccountStackNavigatorParamList>;\n}) {\n  return (\n    <View style={styles.forgotPassword}>\n      <TouchableOpacity\n      // onPress={() => navigation.navigate('ResetPassword')}\n      >\n        <Text style={styles.forgotPassword}>\n          Forgot your password?\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nfunction RememberMe(props: LogicProps) {\n  const { name, rules, shouldUnregister, defaultValue, control } =\n    props;\n  const { field } = useController({\n    name,\n    rules,\n    shouldUnregister,\n    defaultValue,\n    control,\n  });\n\n  return (\n    <List.Item\n      title={'Remember me'}\n      left={() => (\n        <Checkbox.Android\n          status={field.value}\n          onPress={() => {\n            field.onChange(\n              field.value === 'checked' ? 'unchecked' : 'checked'\n            );\n          }}\n        />\n      )}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  halfContainer: {\n    flex: 1,\n    padding: 8,\n  },\n  headline: {\n    textAlign: 'center',\n  },\n  textInput: {\n    paddingVertical: 5,\n  },\n  button: {\n    width: '100%',\n    marginVertical: 10,\n    paddingVertical: 2,\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    lineHeight: 26,\n  },\n  container: {\n    width: '100%',\n    marginVertical: 12,\n  },\n});\n","import React, { useState } from 'react';\n\nimport {\n  TouchableOpacity,\n  StyleSheet,\n  View,\n  ScrollView,\n} from 'react-native';\nimport {\n  useController,\n  useForm,\n  SubmitHandler,\n  SubmitErrorHandler,\n} from 'react-hook-form';\nimport _ from 'lodash/fp';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { FormBuilder } from 'react-native-paper-form-builder';\nimport { LogicProps } from 'react-native-paper-form-builder/dist/Types/Types';\nimport {\n  Text,\n  useTheme,\n  TextInput,\n  Button,\n  List,\n  Checkbox,\n  ActivityIndicator,\n} from 'react-native-paper';\nimport BackButton from '../../components/common/backButton';\nimport Background from '../../components/common/background';\nimport Header from '../../components/common/header';\nimport Logo from '../../components/common/logo';\n\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport {\n  AccountStackNavigatorParamList,\n  AccountStackNavProps,\n} from '../../types';\n\nimport { useAuth } from '../../context/authorization.context';\n\ntype FormValues = {\n  username: string;\n  email: string;\n  password: string;\n};\n\nexport default function RegisterScreen({\n  navigation,\n}: {\n  navigation: StackNavigationProp<AccountStackNavigatorParamList>;\n}) {\n  const theme = useTheme();\n  const { signIn, signUp, isLoading } = useAuth();\n  const [getUsername, setUsername] = useState('');\n  const [getEmail, setEmail] = useState('');\n  const [getPassword, setPassword] = useState('');\n\n  const {\n    control,\n    setFocus,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormValues>({\n    defaultValues: {\n      username: '',\n      password: '',\n    },\n    mode: 'onChange',\n    criteriaMode: 'all',\n  });\n\n  const onSubmit: SubmitHandler<FormValues> = (data, e) => {\n    console.log(data, e);\n    signUp(data.username, data.email, data.password);\n  };\n  const onError: SubmitErrorHandler<FormValues> = (errors, e) => {\n    console.log(errors, e);\n    navigation.reset({\n      index: 0,\n      routes: [{ name: 'StartScreen' }],\n    });\n  };\n\n  return (\n    <Background>\n      <Logo loading={isLoading} />\n\n      <Header>Create Account</Header>\n      <View style={styles.container}>\n        <FormBuilder\n          inputSpacing={12}\n          inputSpacingHorizontal={4}\n          theme={theme}\n          control={control}\n          setFocus={setFocus}\n          formConfigArray={[\n            {\n              name: 'username',\n              type: 'text',\n              textInputProps: {\n                label: 'Username',\n                style: styles.textInput,\n                left: <TextInput.Icon name={'account'} />,\n                underlineColor: 'transparent',\n                mode: 'outlined',\n                textContentType: 'username',\n                returnKeyType: 'next',\n                keyboardType: 'default',\n                value: getUsername,\n                onChangeText: (username) => setUsername(username),\n              },\n              rules: {\n                required: {\n                  value: true,\n                  message: 'Username is required',\n                },\n              },\n            },\n            {\n              name: 'email',\n              type: 'email',\n              textInputProps: {\n                label: 'Email',\n                left: <TextInput.Icon name={'email'} />,\n                underlineColor: 'transparent',\n                mode: 'outlined',\n                autoCapitalize: 'none',\n                autoCompleteType: 'email',\n                textContentType: 'emailAddress',\n                keyboardType: 'email-address',\n                returnKeyType: 'next',\n                value: getEmail,\n                onChangeText: (email) => setEmail(email),\n              },\n              rules: {\n                required: {\n                  value: true,\n                  message: 'Email is required',\n                },\n                pattern: {\n                  value: /\\S+@\\S+\\.\\S+/,\n                  // value:\n                  //   /[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})/,\n                  message: 'Email is invalid',\n                },\n              },\n            },\n            {\n              name: 'password',\n              type: 'password',\n              textInputProps: {\n                label: 'Password',\n                style: styles.textInput,\n                left: <TextInput.Icon name={'lock'} />,\n                underlineColor: 'transparent',\n                mode: 'outlined',\n                textContentType: 'password',\n                returnKeyType: 'done',\n                keyboardType: 'default',\n                value: getPassword,\n                onChangeText: (password) => setPassword(password),\n                secureTextEntry: true,\n              },\n              rules: {\n                required: {\n                  value: true,\n                  message: 'Password is required',\n                },\n                minLength: {\n                  value: 4,\n                  message: 'Password should be atleast 4 characters',\n                },\n                maxLength: {\n                  value: 30,\n                  message:\n                    'Password should be between 8 and 30 characters',\n                },\n              },\n            },\n          ]}\n        />\n      </View>\n\n      <Button\n        mode=\"contained\"\n        labelStyle={styles.text}\n        style={[styles.button, { marginTop: 24 }]}\n        onPress={handleSubmit(onSubmit, onError)}\n      >\n        Sign Up\n      </Button>\n\n      <View style={styles.row}>\n        <Text>Already have an account? </Text>\n        <TouchableOpacity\n          onPress={() => navigation.replace('LoginScreen')}\n        >\n          <Text\n            style={{\n              fontWeight: 'bold',\n              color: theme.colors.primary,\n            }}\n          >\n            Login\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  textInput: {\n    paddingVertical: 5,\n  },\n  button: {\n    width: '100%',\n    marginVertical: 10,\n    paddingVertical: 2,\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    lineHeight: 26,\n  },\n  container: {\n    width: '100%',\n    marginVertical: 12,\n  },\n});\n","import React from \"react\";\nimport { StyleSheet, TextInputProps } from \"react-native\";\nimport { Text } from \"react-native-paper\";\n\ninterface Props extends TextInputProps {\n  children: React.ReactNode;\n}\nexport default function Paragraph({ children, ...props }: Props) {\n  return (\n    <Text style={styles.text} {...props}>\n      {children}\n    </Text>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 15,\n    lineHeight: 21,\n    textAlign: \"center\",\n    marginBottom: 12,\n  },\n});\n","import React from 'react';\nimport color from 'color';\n\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { getFocusedRouteNameFromRoute } from '@react-navigation/native';\nimport { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { Appbar, Avatar, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport { TouchableOpacity } from 'react-native';\nimport {\n  DEFAULT_AVATAR,\n  DEFAULT_ICON,\n} from '../constants/backend.constants';\n\nimport * as ROUTES from '../constants/routes.constants';\n\nimport overlay from '../utils/overlay';\n\nimport {\n  StartScreen,\n  LoginScreen,\n  RegisterScreen,\n} from '../screens/account';\n\nimport { useAuth } from '../context/authorization.context';\n\nimport { AccountStackNavigatorParamList } from '../types';\n\nconst AccountStack =\n  createStackNavigator<AccountStackNavigatorParamList>();\n\nexport const AccountStackNavigator = () => {\n  const theme = useTheme();\n  const { state } = useAuth();\n  // const {\n  //   isLoading,\n  //   isSignedIn,\n  //   accessToken,\n  //   noAccount,\n  //   isSignedUp,\n  // } = useAuth();\n\n  // console.log('isSignedIn', isSignedIn);\n  // console.log('isLoading', isLoading);\n  // console.log('accessToken', accessToken);\n  // console.log('noAccount', noAccount);\n  // console.log('isSignedUp', isSignedUp);\n\n  // React.useEffect(() => {\n  //   if (isLoading) {\n  //     navigation.replace('Dashboard');\n  //   }\n  //   if (isSignedIn && accessToken && isSignedUp) {\n  //     console.log('isSignedIn and accessToken and isSignedUp');\n  //     navigation.replace('LoginScreen');\n  //   }\n  //   if (!isSignedUp && noAccount) {\n  //     console.log('not isSignedUp and noAccount');\n  //     navigation.replace('RegisterScreen');\n  //   }\n  //   if (!isSignedIn && !noAccount) {\n  //     console.log('not isSignedIn and not noAccount');\n  //     navigation.replace('LoginScreen');\n  //   }\n  // }, [isSignedIn, accessToken, isSignedUp, noAccount, isLoading]);\n\n  console.log('AccountStackNavigator', AccountStack);\n\n  return (\n    <AccountStack.Navigator\n      initialRouteName={ROUTES.START_ROUTE}\n      // headerMode=\"screen\"\n      screenOptions={{\n        headerShown: true,\n        animationEnabled: true,\n        cardOverlayEnabled: true,\n        cardShadowEnabled: true,\n        animationTypeForReplace: 'push',\n        header: ({ navigation, route, back, options }) => {\n          // const { options } = scene.descriptor;\n          const title =\n            options.headerTitle !== undefined\n              ? options.headerTitle\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          return (\n            <Appbar.Header\n              theme={{\n                colors: {\n                  primary: theme.dark\n                    ? (overlay(6, theme.colors.surface) as string)\n                    : theme.colors.surface,\n                },\n              }}\n            >\n              {back ? (\n                <Appbar.BackAction\n                  onPress={navigation.goBack}\n                  color={theme.colors.primary}\n                />\n              ) : (\n                <Avatar.Image\n                  size={40}\n                  style={{ backgroundColor: 'transparent' }}\n                  source={require('../assets/logo.png')}\n                />\n              )}\n\n              <Appbar.Content\n                title={\n                  title === ROUTES.START_ROUTE ? (\n                    <MaterialCommunityIcons\n                      style={{ marginRight: 10 }}\n                      name=\"package-variant-closed\"\n                      size={40}\n                      color={theme.colors.primary}\n                    />\n                  ) : (\n                    title\n                  )\n                }\n                titleStyle={{\n                  fontSize: 18,\n                  fontWeight: 'bold',\n                  color: theme.colors.primary,\n                }}\n              />\n            </Appbar.Header>\n          );\n        },\n      }}\n    >\n      <AccountStack.Screen\n        name={ROUTES.START_ROUTE}\n        component={StartScreen}\n        options={({ route }) => {\n          const routeName =\n            getFocusedRouteNameFromRoute(route) ?? 'StartScreen';\n          return { headerTitle: routeName };\n        }}\n      />\n      <AccountStack.Screen\n        name={ROUTES.SIGNIN_ROUTE}\n        component={LoginScreen}\n        options={{ headerTitle: 'Sign In' }}\n      />\n      <AccountStack.Screen\n        name={ROUTES.SIGNUP_ROUTE}\n        component={RegisterScreen}\n        options={{\n          headerTitle: 'Register',\n          animationTypeForReplace: state.isSignedOut ? 'pop' : 'push',\n        }}\n      />\n    </AccountStack.Navigator>\n  );\n};\n","// Product Route Names\n// Push Stack\nexport const PRODUCTS_ROUTE = 'Products';\nexport const PRODUCT_DETAILS_ROUTE = 'ProductDetails';\n\nexport const MAKE_OFFER_ROUTE = 'MakeOffer';\nexport const MAKE_PURCHASE_ROUTE = 'MakePurchase';\nexport const UPDATE_PRODUCT_ROUTE = 'UpdateProduct';\n\n// Screen Stack\nexport const TRANSACTIONS_ROUTE = 'Transactions';\nexport const FAVORITES_ROUTE = 'Favorites';\nexport const MY_PRODUCTS_ROUTE = 'MyProducts';\nexport const ADD_PRODUCT_ROUTE = 'AddProduct';\n\n// Account Stack\nexport const START_ROUTE = 'StartScreen';\nexport const SIGNIN_ROUTE = 'LoginScreen';\nexport const SIGNUP_ROUTE = 'RegisterScreen';\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { Text } from 'react-native-paper';\n\n/**\n * A date parser.\n *\n * Parses a date string and returns ... ago\n * Parses a date to ISO format to have acceptable time element\n * Date format from API is ddd, dd MMM yyyy HH':'mm':'ss 'GMT'\n *\n * @requires dayjs\n * @requires dayjs/relativeTime\n * @link https://react-query.tanstack.com/\n * @file defines TimeAgo and TimeAgoProps\n * @since 7.18.21\n *\n */\n\n/**\n * TimeAgo component.\n *\n * @implements {TimeAgoProps}\n * @example\n * dayjs.extend(relativeTime);\n * dayjs('1999-01-01').fromNow(); // 20 years ago\n */\n\nexport const TimeAgo = ({ date }: { date: string }) => {\n  dayjs.extend(relativeTime);\n  return (\n    <Text\n    // dateTime={dayjs(date).toISOString()}\n    >\n      {dayjs(date).fromNow()}\n    </Text>\n  );\n};\n","import _ from \"lodash\";\n\nexport const initialize = (name: string) => {\n  return name.charAt(0).toUpperCase() + name.charAt(1).toUpperCase();\n};\n\nexport const firstInitial = (name: string) => {\n  return name.charAt(0).toUpperCase();\n};\n\nexport function capitalize(str: string) {\n  return str.toLowerCase().replace(/^.| ./g, _.toUpper);\n}\n\nexport function capitalizeFirstLetter(str: string) {\n  return `${str.charAt(0).toUpperCase()}${str.slice(1)}`;\n}\n\nexport function normalizeUsername(username: string | undefined) {\n  if (!username || typeof username !== \"string\") return undefined;\n  return username.trim().toLowerCase();\n}\n\n// css utility\n// https://github.com/devhubapp/devhub/blob/6e31725a63f42986eb040153aec7eb11723b8289/landing/tailwind.config.js#L5\n\nexport function toKebabCase(str: string) {\n  if (!(str && typeof str === \"string\")) return \"\";\n\n  const matches = str.match(\n    /[A-Z]{2,}(?=[A-Z][a-z]+|\\b)|[A-Z]?[a-z]+|[A-Z]|[0-9]+/g\n  );\n  if (!(matches && matches.length)) return str;\n\n  return matches.map((s) => s.toLowerCase()).join(\"-\");\n}\n","import React from \"react\";\nimport {\n  DEFAULT_AVATAR,\n  DEFAULT_PLACEHOLDER,\n} from \"../constants/backend.constants\";\nimport { initialize } from \"../utils/initialize\";\nimport { useVendorData } from \"../context/vendor.context\";\n\nexport function useVendorIcon() {\n  const { vendor } = useVendorData();\n\n  const [vendorIcon, setVendorIcon] = React.useState<string | undefined>(\n    undefined\n  );\n  const [vendorInitials, setVendorInitials] = React.useState<\n    string | undefined\n  >(undefined);\n\n  React.useMemo(() => {\n    if (vendor) {\n      if (vendor.image) {\n        if (vendor.image.thumbnail) {\n          setVendorIcon(vendor.image.thumbnail);\n        } else {\n          setVendorIcon(vendor.image.full_size);\n        }\n      } else {\n        setVendorIcon(DEFAULT_AVATAR);\n      }\n      setVendorInitials(initialize(vendor.name));\n    }\n  }, [vendor]);\n\n  return {\n    vendorIcon,\n    vendorInitials,\n  };\n}\n","import React from \"react\";\nimport {\n  DEFAULT_AVATAR,\n  DEFAULT_PLACEHOLDER,\n} from \"../constants/backend.constants\";\n\nexport function useImagePlaceholder(image: ImagePreview) {\n  const [productImage, setProductImage] = React.useState<string | undefined>(\n    undefined\n  );\n\n  const [productThumbnail, setProductThumbnail] = React.useState<\n    string | undefined\n  >(undefined);\n\n  React.useMemo(() => {\n    if (image) {\n      if (image.thumbnail) {\n        setProductThumbnail(image.thumbnail);\n      } else {\n        if (image.full_size) {\n          setProductThumbnail(image.full_size);\n        }\n      }\n      if (image.full_size) {\n        setProductImage(image.full_size);\n      } else {\n        setProductImage(DEFAULT_PLACEHOLDER);\n      }\n    } else {\n      setProductThumbnail(DEFAULT_AVATAR);\n      setProductImage(DEFAULT_PLACEHOLDER);\n    }\n  }, [image]);\n\n  return {\n    productImage,\n    productThumbnail,\n  };\n}\n","import React from \"react\";\nimport {\n  DEFAULT_AVATAR,\n  DEFAULT_PLACEHOLDER,\n} from \"../constants/backend.constants\";\n\nexport function useAvatarPlaceholder(image: ImagePreview) {\n  const [avatarImage, setAvatarImage] = React.useState<string | undefined>(\n    undefined\n  );\n\n  React.useMemo(() => {\n    if (image) {\n      if (image.thumbnail) {\n        setAvatarImage(image.thumbnail);\n      } else {\n        if (image.full_size) {\n          setAvatarImage(image.full_size);\n        }\n      }\n    } else {\n      setAvatarImage(DEFAULT_AVATAR);\n    }\n  }, [image]);\n\n  return {\n    avatarImage,\n  };\n}\n","// tavs\nexport const PRODUCTS_ICON = 'package-variant';\nexport const PRODUCT_DETAILS_ICON = 'package-variant';\nexport const TRANSACTIONS_ICON = 'cash-multiple';\nexport const FAVORITES_ICON = 'heart';\nexport const MY_PRODUCTS_ICON = 'folder-home-outline';\nexport const ADD_PRODUCT_ICON = 'folder-home-outline';\nexport const UPDATE_PRODUCT_ICON = 'folder-home-outline';\n\n// product\n\nexport const PRODUCT_COUNT_ICON = 'package-variant-closed';\nexport const ORDER_COUNT_ICON = 'currency-usd-off';\nexport const MAKE_OFFER_ICON = 'cash-multiple';\nexport const ACCEPT_OFFER_ICON = 'cash-multiple';\nexport const DISABLE_OFFER_ICON = 'cash-multiple';\nexport const MAKE_PURCHASE_ICON = 'cash-100';\nexport const ALREADY_OFFERED_ICON = 'cash-multiple';\nexport const ALREADY_PURCHASED_ICON = 'cash-multiple';\n\n// product status\nexport const PRODUCT_TIMESTAMP_ICON = 'share-outline';\nexport const PRODUCT_IN_FAVORITES_ICON = 'heart';\nexport const PRODUCT_NOT_IN_FAVORITES_ICON = 'heart-outline';\n\n// form account icons\nexport const ACCOUNT_USERNAME_ICON = 'account';\nexport const ACCOUNT_EMAIL_ICON = 'email';\nexport const ACCOUNT_PASSWORD_ICON = 'lock';\n\n// form product icons\nexport const PRODUCT_TITLE_ICON = 'account';\nexport const PRODUCT_CATEGORY_ICON = 'account';\nexport const PRODUCT_DESCRIPTION_ICON = 'email';\nexport const PRODUCT_PRICE_ICON = 'lock';\nexport const PRODUCT_CONDITION_ICON = 'office-building';\n\n// account\n\nexport const START_ICON = 'StartScreen';\nexport const SIGNIN_ICON = 'LoginScreen';\nexport const SIGNUP_ICON = 'RegisterScreen';\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Image,\n  TouchableOpacity,\n} from 'react-native';\nimport {\n  Surface,\n  Title,\n  Caption,\n  Text,\n  Avatar,\n  TouchableRipple,\n  Badge,\n  useTheme,\n  IconButton,\n  Button,\n  Chip,\n} from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport color from 'color';\n\nimport { TimeAgo } from '../common/time';\nimport { useVendorData } from '../../context/vendor.context';\nimport { useAuth } from '../../context/authorization.context';\nimport { useVendorIcon } from '../../hooks/useVendorIcon';\nimport { useImagePlaceholder } from '../../hooks/useImagePlaceholder';\nimport { useAvatarPlaceholder } from '../../hooks/useAvatarPlaceholder';\n\nimport { initialize } from '../../utils/initialize';\n\nimport * as ICONS from '../../constants/icons.constants';\nimport {\n  ProductStackNavigatorParamList,\n  ProductTypeParamList,\n  OrderTypeParamList,\n} from '../../types';\n\nexport type AvailableType = 'OFFERED' | 'DENIED' | 'PENDING';\nexport type SoldType = 'PROCESSING' | 'ACCEPTED' | 'COMPLETED';\n\nexport const Product = ({\n  product,\n  onPress,\n  makeOffer,\n  acceptOffer,\n  declineOffer,\n  makePurchase,\n  addToFaves,\n  removeFromFaves,\n  updateProduct,\n}: {\n  product: ProductStackNavigatorParamList['ProductDetails'];\n  onPress?: (slug: string) => void;\n  makeOffer?: (id: string) => void;\n  acceptOffer?: (id: string) => void;\n  declineOffer?: (id: string) => void;\n  makePurchase?: (id: string) => void;\n  addToFaves?: (id: string) => void;\n  removeFromFaves?: (id: string) => void;\n  updateProduct?: (slug: string) => void;\n}) => {\n  const theme = useTheme();\n  const iconColor = color(theme.colors.text)\n    .alpha(0.54)\n    .rgb()\n    .string();\n\n  const contentColor = color(theme.colors.text)\n    .alpha(0.8)\n    .rgb()\n    .string();\n\n  const imageBorderColor = color(theme.colors.text)\n    .alpha(0.15)\n    .rgb()\n    .string();\n\n  const { accessToken } = useAuth();\n  const { vendor, addVendorFavorite, removeVendorFavorite } =\n    useVendorData();\n\n  const { vendorIcon, vendorInitials } = useVendorIcon();\n\n  const { productImage, productThumbnail } = useImagePlaceholder(\n    product.image\n  );\n\n  const { avatarImage } = useAvatarPlaceholder(product.vendor.image);\n\n  const otherVendorInitials = initialize(product.vendor.name);\n\n  const inFavorites = vendor?.favorites.some(\n    (favorite: ProductTypeParamList) => favorite.id === product.id\n  );\n\n  const isMyProduct = vendor?.products.some(\n    (myProd: ProductTypeParamList) => myProd.id === product.id\n  );\n\n  const hasPendingOffer = vendor?.order_requests.some(\n    (orderReq: OrderTypeParamList) =>\n      orderReq.vendor.id === vendor.id &&\n      orderReq.status === 'OFFERED'\n  );\n\n  const isPurchased = vendor?.order_requests.some(\n    (orderReq: OrderTypeParamList) =>\n      orderReq.vendor.id === vendor.id &&\n      orderReq.status === ('PROCESSING' || 'COMPLETED')\n  );\n\n  const inMyOffers = vendor?.orders_made.some(\n    (ordersMade: OrderTypeParamList) =>\n      ordersMade.buyer.id === vendor.id &&\n      ordersMade.status === 'OFFERED'\n  );\n\n  const isMyPurchase = vendor?.orders_made.some(\n    (ordersMade: OrderTypeParamList) =>\n      ordersMade.buyer.id === vendor.id &&\n      ordersMade.status === ('PROCESSING' || 'COMPLETED')\n  );\n\n  // console.log('Product: ', product.title);\n  // console.log('Product: productImage', productImage);\n  // console.log('Product: productAvatar', avatarImage);\n  // console.log('Product: otherVendorInitials', otherVendorInitials);\n\n  // console.log('Product: inFaves', inFavorites);\n  // console.log('Product: isMyProduct', isMyProduct);\n  // console.log('Product: hasPendingOffer', hasPendingOffer);\n\n  // console.log('Product: Mine and isPurchased', isPurchased);\n  // console.log('Product: Not Mine and inMyOffers', inMyOffers);\n  // console.log('Product: Not Mine and isMyPurchase', isMyPurchase);\n\n  return (\n    <TouchableRipple\n      onPress={() => (onPress ? onPress(product.slug) : {})}\n    >\n      <Surface style={styles.container}>\n        <View style={styles.leftColumn}>\n          <View>\n            {avatarImage ? (\n              <Avatar.Image\n                size={60}\n                style={{ marginRight: 10 }}\n                source={{\n                  uri: avatarImage,\n                }}\n              />\n            ) : (\n              <Avatar.Text\n                size={60}\n                style={{ marginRight: 10 }}\n                label={otherVendorInitials}\n              />\n            )}\n\n            <Badge\n              size={10}\n              style={{\n                // ...styles.badge,\n                position: 'absolute',\n                bottom: 0,\n                right: 4,\n                backgroundColor: product.vendor.online\n                  ? theme.colors.accent\n                  : theme.colors.disabled,\n              }}\n            />\n          </View>\n        </View>\n\n        <View style={styles.rightColumn}>\n          <View style={styles.topRow}>\n            <Title>{product.title}</Title>\n\n            {product.vendor.product_count > 0 && (\n              <View style={styles.iconContainer}>\n                <MaterialCommunityIcons\n                  name={ICONS.PRODUCT_COUNT_ICON}\n                  size={14}\n                  color={iconColor}\n                />\n                <Caption style={styles.iconDescription}>\n                  {product.vendor.product_count}\n                  {''} products\n                </Caption>\n              </View>\n            )}\n\n            {product.vendor.order_count > 0 && (\n              <View style={styles.iconContainer}>\n                <MaterialCommunityIcons\n                  name={ICONS.ORDER_COUNT_ICON}\n                  size={14}\n                  color={iconColor}\n                />\n                <Caption style={styles.iconDescription}>\n                  {product.vendor.order_count}\n                  {''} transactions\n                </Caption>\n              </View>\n            )}\n\n            <Caption style={styles.handle}>{product.price}</Caption>\n\n            <Caption>{product.condition}</Caption>\n            {!product.is_available && (\n              <Chip\n                mode=\"flat\"\n                style={{ backgroundColor: theme.colors.error }}\n              >\n                SOLD\n              </Chip>\n            )}\n          </View>\n\n          {/* <Text style={{ color: contentColor }}>{product.description}</Text> */}\n\n          <Image\n            source={{\n              uri: productImage,\n              // product.image.image.thumbnail\n            }}\n            style={[\n              styles.image,\n              {\n                borderColor: imageBorderColor,\n              },\n            ]}\n          />\n\n          <View style={styles.bottomRow}>\n            {product.is_available && (\n              <>\n                <TouchableOpacity\n                  onPress={() => {}}\n                  hitSlop={{ top: 10, bottom: 10 }}\n                >\n                  <View style={styles.iconContainer}>\n                    <IconButton\n                      icon={ICONS.MAKE_OFFER_ICON}\n                      color={theme.colors.primary}\n                      size={20}\n                      disabled={isMyProduct}\n                      onPress={() =>\n                        hasPendingOffer\n                          ? acceptOffer &&\n                            acceptOffer(product.id.toString())\n                          : !inMyOffers\n                          ? makeOffer &&\n                            makeOffer(product.id.toString())\n                          : console.log(\n                              'this is already in your purchased'\n                            )\n                      }\n                    />\n                    <Caption style={styles.iconDescription}>\n                      {hasPendingOffer\n                        ? 'Accept Offer'\n                        : inMyOffers\n                        ? 'In Your Cart'\n                        : 'Offer'}\n                    </Caption>\n                  </View>\n                </TouchableOpacity>\n\n                <View style={styles.iconContainer}>\n                  <IconButton\n                    icon={ICONS.MAKE_PURCHASE_ICON}\n                    color={theme.colors.primary}\n                    disabled={isMyProduct || isPurchased}\n                    size={20}\n                    onPress={() =>\n                      !isMyPurchase && !isMyProduct\n                        ? makePurchase &&\n                          makePurchase(product.id.toString())\n                        : hasPendingOffer && !inMyOffers\n                        ? declineOffer &&\n                          declineOffer(product.id.toString())\n                        : {}\n                    }\n                  />\n                  <Text style={styles.iconDescription}>\n                    {isPurchased && !isMyPurchase\n                      ? 'Your Sale'\n                      : hasPendingOffer && !inMyOffers\n                      ? 'Decline Offer'\n                      : 'Purchase'}\n                  </Text>\n                </View>\n              </>\n            )}\n\n            <View style={styles.iconContainer}>\n              <MaterialCommunityIcons\n                name={ICONS.PRODUCT_TIMESTAMP_ICON}\n                size={14}\n                color={iconColor}\n              />\n              <Caption style={styles.iconDescription}>\n                {product.is_available ? 'posted' : 'sold'}{' '}\n                <TimeAgo\n                  date={\n                    product.is_available\n                      ? product.created_at\n                      : product.updated_at\n                  }\n                />\n              </Caption>\n            </View>\n\n            {isMyProduct && (\n              <TouchableOpacity\n                onPress={() =>\n                  updateProduct ? updateProduct(product.slug) : {}\n                }\n                hitSlop={{ top: 10, bottom: 10 }}\n              >\n                <View style={styles.iconContainer}>\n                  <MaterialCommunityIcons\n                    name=\"cash-100\"\n                    size={12}\n                    color={theme.colors.primary}\n                  />\n                  <Caption style={styles.iconDescription}>\n                    Update Product\n                  </Caption>\n                </View>\n              </TouchableOpacity>\n            )}\n\n            <TouchableOpacity\n              onPress={() =>\n                inFavorites\n                  ? removeVendorFavorite(\n                      product.id.toString(),\n                      accessToken ? accessToken : ''\n                    )\n                  : addVendorFavorite(\n                      product.id.toString(),\n                      accessToken ? accessToken : ''\n                    )\n              }\n              hitSlop={{ top: 10, bottom: 10 }}\n            >\n              <View style={styles.iconContainer}>\n                <MaterialCommunityIcons\n                  name={\n                    inFavorites\n                      ? ICONS.PRODUCT_IN_FAVORITES_ICON\n                      : ICONS.PRODUCT_NOT_IN_FAVORITES_ICON\n                  }\n                  size={12}\n                  color={\n                    inFavorites\n                      ? theme.colors.error\n                      : theme.colors.text\n                  }\n                />\n                <Caption style={styles.iconDescription}>\n                  {inFavorites\n                    ? 'Remove from Favorites'\n                    : 'Add to Favorites'}\n                </Caption>\n              </View>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Surface>\n    </TouchableRipple>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    paddingTop: 15,\n    paddingRight: 15,\n  },\n  leftColumn: {\n    width: 100,\n    alignItems: 'center',\n  },\n  rightColumn: {\n    flex: 1,\n  },\n  topRow: {\n    flexDirection: 'row',\n    alignItems: 'baseline',\n    justifyContent: 'space-between',\n  },\n  handle: {\n    marginRight: 3,\n  },\n  dot: {\n    fontSize: 3,\n  },\n  image: {\n    borderWidth: StyleSheet.hairlineWidth,\n    marginTop: 10,\n    borderRadius: 20,\n    width: '100%',\n    height: 150,\n  },\n  bottomRow: {\n    paddingVertical: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  iconContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  iconDescription: {\n    marginLeft: 2,\n    lineHeight: 12,\n  },\n  button: {\n    marginTop: 20,\n  },\n  badge: {\n    position: 'absolute',\n    bottom: 0,\n    right: 4,\n  },\n});\n","import { StackNavigationProp } from '@react-navigation/stack';\nimport React from 'react';\nimport { FlatList, StyleSheet, View } from 'react-native';\nimport { ActivityIndicator, useTheme } from 'react-native-paper';\n\nimport { Product } from '../../components/products/product';\nimport { useProductsData } from '../../context/products.context';\nimport { useVendorData } from '../../context/vendor.context';\n\nimport { ProductStackNavigatorParamList } from '../../types';\n\ntype ProductProps = ProductStackNavigatorParamList['ProductDetails'];\n\nfunction Separator() {\n  return <View style={{ height: StyleSheet.hairlineWidth }} />;\n}\n\nexport const ProductScreen = ({\n  navigation,\n}: {\n  navigation?: StackNavigationProp<ProductStackNavigatorParamList>;\n}) => {\n  const theme = useTheme();\n\n  const { products, loading } = useProductsData();\n\n  return loading ? (\n    <ActivityIndicator />\n  ) : (\n    <FlatList\n      contentContainerStyle={{\n        backgroundColor: theme.colors.background,\n      }}\n      style={{ backgroundColor: theme.colors.background }}\n      data={\n        products &&\n        products.map((productProps) => ({\n          ...productProps,\n          onPress: () =>\n            navigation &&\n            navigation.navigate('ProductDetails', {\n              ...productProps,\n            }),\n          makeOffer: () =>\n            navigation &&\n            navigation.navigate('MakeOffer', {\n              product: productProps,\n              ...productProps,\n            }),\n          updateProduct: () =>\n            navigation &&\n            navigation.navigate('UpdateProduct', {\n              product: productProps,\n              ...productProps,\n            }),\n        }))\n      }\n      renderItem={({ item }: { item: ProductProps }) => (\n        <Product {...item} product={item} />\n      )}\n      keyExtractor={(item: ProductProps) => item.id.toString()}\n      ItemSeparatorComponent={Separator}\n    />\n  );\n};\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Image,\n  TouchableOpacity,\n} from 'react-native';\nimport {\n  Surface,\n  Title,\n  Caption,\n  Avatar,\n  Subheading,\n  useTheme,\n  Badge,\n  Button,\n  Text,\n} from 'react-native-paper';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport color from 'color';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport { ProductStackNavigatorParamList } from '../../types';\nimport { TimeAgo } from '../common/time';\nimport { useVendorData } from '../../context/vendor.context';\nimport { useVendorIcon } from '../../hooks/useVendorIcon';\nimport { useImagePlaceholder } from '../../hooks/useImagePlaceholder';\nimport { useAvatarPlaceholder } from '../../hooks/useAvatarPlaceholder';\nimport { initialize } from '../../utils/initialize';\nimport * as ICONS from '../../constants/icons.constants';\nimport {\n  DEFAULT_PLACEHOLDER,\n  DEFAULT_AVATAR,\n} from '../../constants/backend.constants';\n\nexport const randomColor = () => {\n  const hex = Math.floor(Math.random() * 0xffffff);\n  return `${hex.toString(16)}`;\n};\n\nexport const ProductDetail = ({\n  product,\n  navigation,\n  makeOffer,\n  makePurchase,\n  addToFaves,\n}: {\n  product: ProductStackNavigatorParamList['ProductDetails'];\n  navigation?: StackNavigationProp<ProductStackNavigatorParamList>;\n  makeOffer?: (id: string) => void;\n  makePurchase?: (id: string) => void;\n  addToFaves?: (id: string) => void;\n}) => {\n  const theme = useTheme();\n\n  const { vendorId, vendor } = useVendorData();\n\n  const { vendorIcon, vendorInitials } = useVendorIcon();\n\n  const { productImage, productThumbnail } = useImagePlaceholder(\n    product.image\n  );\n\n  const { avatarImage } = useAvatarPlaceholder(product.vendor.image);\n\n  const otherVendorInitials = initialize(product.vendor.name);\n\n  const inFavorites = vendor?.favorites.some(\n    (favorite) => favorite.id === product.id\n  );\n\n  const contentColor = color(theme.colors.text)\n    .alpha(0.8)\n    .rgb()\n    .string();\n\n  const imageBorderColor = color(theme.colors.text)\n    .alpha(0.15)\n    .rgb()\n    .string();\n\n  const iconColor = color(theme.colors.text)\n    .alpha(0.54)\n    .rgb()\n    .string();\n\n  return (\n    <Surface style={styles.container}>\n      <View style={styles.topRow}>\n        <Avatar.Image\n          style={styles.avatar}\n          source={{ uri: avatarImage }}\n          size={60}\n        />\n        <View>\n          <Title>{product.title}</Title>\n          <Caption style={styles.handle}>\n            {product.vendor.name}\n          </Caption>\n        </View>\n      </View>\n      <Subheading style={[styles.content, { color: contentColor }]}>\n        {product.description}\n      </Subheading>\n      <Image\n        source={{\n          uri: productImage,\n          // product.image.image.full_size\n        }}\n        style={[\n          styles.image,\n          {\n            borderColor: imageBorderColor,\n          },\n        ]}\n      />\n      <Text style={{ marginBottom: 10 }}>{product.condition}</Text>\n      <Text style={{ marginBottom: 10 }}>{product.price}</Text>\n      <Text style={{ marginBottom: 10 }}>{product.price}</Text>\n      <Text style={{ marginBottom: 10 }}>\n        {product.is_available ? 'Posted' : 'Sold'}\n        <TimeAgo\n          date={\n            product.is_available\n              ? product.created_at\n              : product.updated_at\n          }\n        />\n      </Text>\n\n      <View style={styles.bottomRow}>\n        {product.is_available && (\n          <>\n            <TouchableOpacity\n              onPress={() => {}}\n              hitSlop={{ top: 10, bottom: 10 }}\n            >\n              <View style={styles.iconContainer}>\n                <Button\n                  mode=\"text\"\n                  uppercase\n                  color={theme.colors.primary}\n                  onPress={() =>\n                    makePurchase\n                      ? makePurchase(product.id.toString())\n                      : {}\n                  }\n                >\n                  Purchase\n                </Button>\n              </View>\n            </TouchableOpacity>\n\n            <View style={styles.iconContainer}>\n              <Button\n                mode=\"text\"\n                uppercase\n                color={theme.colors.primary}\n                onPress={() => {\n                  // makeOffer ? makeOffer(product.id.toString()) : {}\n                  console.log('product', product);\n                  navigation &&\n                    navigation.replace('MakeOffer', {\n                      product: product,\n                      ...product,\n                    });\n                }}\n              >\n                Offer\n              </Button>\n            </View>\n          </>\n        )}\n      </View>\n\n      {product.product_images && product.product_images.length > 0 && (\n        <>\n          <View style={{ height: StyleSheet.hairlineWidth }} />\n          <View style={styles.bottomRow}>\n            <View>\n              <Title>Product Images</Title>\n              <Caption style={styles.handle}>\n                {product.vendor.name}\n              </Caption>\n            </View>\n\n            {product.product_images.map((image) => (\n              <TouchableOpacity\n                onPress={() => {}}\n                hitSlop={{ top: 10, bottom: 10 }}\n              >\n                <Avatar.Image\n                  style={{ marginRight: 10 }}\n                  source={{\n                    uri: image.image.thumbnail\n                      ? image.image.thumbnail\n                      : image.image.full_size\n                      ? image.image.full_size\n                      : DEFAULT_PLACEHOLDER,\n                  }}\n                  size={40}\n                />\n              </TouchableOpacity>\n            ))}\n          </View>\n        </>\n      )}\n      {product.similar_products &&\n        product.similar_products.length > 0 && (\n          <>\n            <View style={{ height: StyleSheet.hairlineWidth }} />;\n            <Title>Related Products</Title>\n            <Caption style={styles.handle}>\n              {product.category}\n            </Caption>\n            {product.similar_products.map((similar) => (\n              <View style={styles.bottomRow}>\n                <Title>{similar.title}</Title>\n                {similar.id.toString() === vendorId ? (\n                  <Caption style={styles.handle}>\n                    Your Product\n                  </Caption>\n                ) : (\n                  <Caption style={styles.handle}>\n                    {similar.vendor}\n                  </Caption>\n                )}\n\n                <TouchableOpacity\n                  onPress={() => {}}\n                  hitSlop={{ top: 10, bottom: 10 }}\n                >\n                  <Avatar.Image\n                    style={{ marginRight: 10 }}\n                    source={{\n                      uri: similar.image.thumbnail\n                        ? similar.image.thumbnail\n                        : similar.image.full_size\n                        ? similar.image.full_size\n                        : DEFAULT_PLACEHOLDER,\n                    }}\n                    size={40}\n                  />\n                </TouchableOpacity>\n              </View>\n            ))}\n          </>\n        )}\n      <View style={styles.footerRow}>\n        <TouchableOpacity\n          style={{ marginLeft: 10 }}\n          onPress={() => {}}\n        >\n          <View>\n            {product.id.toString() === vendorId ? (\n              vendorIcon ? (\n                <Avatar.Image\n                  size={40}\n                  style={{ marginRight: 10 }}\n                  source={{\n                    uri: vendorIcon,\n                  }}\n                />\n              ) : vendorInitials ? (\n                <Avatar.Text\n                  size={40}\n                  style={{ marginRight: 10 }}\n                  label={vendorInitials}\n                />\n              ) : (\n                <Avatar.Image\n                  size={40}\n                  style={{ marginRight: 10 }}\n                  source={{ uri: DEFAULT_AVATAR }}\n                />\n              )\n            ) : avatarImage ? (\n              <Avatar.Image\n                size={40}\n                style={{ marginRight: 10 }}\n                source={{\n                  uri: vendorIcon,\n                }}\n              />\n            ) : (\n              <Avatar.Text\n                size={40}\n                style={{ marginRight: 10 }}\n                label={otherVendorInitials}\n              />\n            )}\n\n            <Badge\n              style={{\n                position: 'absolute',\n                bottom: 0,\n                right: 4,\n                backgroundColor: product.vendor.online\n                  ? theme.colors.accent\n                  : theme.colors.disabled,\n              }}\n            />\n          </View>\n        </TouchableOpacity>\n        <Title>{product.vendor.name}</Title>\n        {product.vendor.product_count > 0 && (\n          <View style={styles.iconContainer}>\n            <MaterialCommunityIcons\n              name={ICONS.PRODUCT_COUNT_ICON}\n              size={14}\n              color={iconColor}\n            />\n            <Caption style={styles.iconDescription}>\n              {product.vendor.product_count}\n              {''} products\n            </Caption>\n          </View>\n        )}\n        {product.vendor.order_count > 0 && (\n          <View style={styles.iconContainer}>\n            <MaterialCommunityIcons\n              name={ICONS.ORDER_COUNT_ICON}\n              size={14}\n              color={iconColor}\n            />\n            <Caption style={styles.iconDescription}>\n              {product.vendor.order_count}\n              {''} transactions\n            </Caption>\n          </View>\n        )}\n      </View>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  avatar: {\n    marginRight: 20,\n  },\n  topRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  handle: {\n    marginRight: 3,\n    lineHeight: 12,\n  },\n  content: {\n    marginTop: 25,\n    fontSize: 20,\n    lineHeight: 30,\n  },\n  image: {\n    borderWidth: StyleSheet.hairlineWidth,\n    marginTop: 25,\n    borderRadius: 20,\n    width: '100%',\n    height: 280,\n  },\n  thumbnail: {\n    borderWidth: StyleSheet.hairlineWidth,\n    marginTop: 25,\n    borderRadius: 10,\n    width: '25%',\n    height: 140,\n  },\n  bottomRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  footerRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  iconContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  iconDescription: {\n    marginLeft: 2,\n    lineHeight: 12,\n  },\n});\n","import React from 'react';\nimport { RouteProp } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { ProductStackNavigatorParamList } from '../../types';\nimport { ProductDetail } from '../../components/products/productDetail';\n\ntype ProductProps = ProductStackNavigatorParamList['ProductDetails'];\n\nexport const ProductDetailScreen = ({\n  route,\n  navigation,\n}: {\n  route: RouteProp<ProductStackNavigatorParamList, 'ProductDetails'>;\n  navigation?: StackNavigationProp<ProductStackNavigatorParamList>;\n}) => {\n  const makeOffer = (product: ProductProps) =>\n    navigation &&\n    navigation.navigate('MakeOffer', {\n      product,\n      ...product,\n    });\n  console.log('is this whats making it work');\n  return (\n    <ProductDetail\n      {...route.params}\n      product={route.params}\n      navigation={navigation}\n      makeOffer={() => makeOffer}\n    />\n  );\n};\n","import React from 'react';\nimport {\n  ScrollView,\n  StyleSheet,\n  View,\n  Platform,\n  Alert,\n} from 'react-native';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\nimport {\n  useController,\n  useForm,\n  SubmitHandler,\n  SubmitErrorHandler,\n  useFormState,\n} from 'react-hook-form';\n\nimport _ from 'lodash/fp';\n\nimport { FormBuilder } from 'react-native-paper-form-builder';\nimport { ErrorMessage } from '@hookform/error-message';\nimport {\n  Headline,\n  Subheading,\n  Caption,\n  useTheme,\n  Button,\n  TextInput,\n} from 'react-native-paper';\n\nimport Background from '../../components/common/background';\nimport Logo from '../../components/common/logo';\nimport Header from '../../components/common/header';\n\nimport overlay from '../../utils/overlay';\n\nimport { RouteProp } from '@react-navigation/native';\nimport { ProductStackNavigatorParamList } from '../../types';\n\nimport {\n  useVendorData,\n  VendorActionTypes,\n} from '../../context/vendor.context';\nimport { useAuth } from '../../context/authorization.context';\n\nimport { makeOffer } from '../../services/get.service';\n\ntype FormValues = {\n  product: string;\n  amount: string;\n  vendor: string;\n  buyer: string;\n};\n\nexport const MakeOffer = ({\n  product,\n  navigation,\n  route,\n  productId,\n  sellerId,\n}: {\n  product: ProductStackNavigatorParamList['MakeOffer'];\n  navigation?: StackNavigationProp<ProductStackNavigatorParamList>;\n  route?: RouteProp<ProductStackNavigatorParamList, 'MakeOffer'>;\n  productId?: string;\n  sellerId?: string;\n}) => {\n  const { vendorId, vendor, loadVendorData } = useVendorData();\n  const { accessToken } = useAuth();\n\n  const [getAmount, setAmount] = React.useState<string>('');\n  const [status, setStatus] = React.useState<string | undefined>(\n    undefined\n  );\n  const theme = useTheme();\n  const backgroundColor = overlay(2, theme.colors.surface) as string;\n\n  const price = product.product.price;\n\n  const {\n    control,\n    setFocus,\n    formState: {\n      errors,\n      isDirty,\n      isSubmitted,\n      isSubmitting,\n      isValidating,\n    },\n    handleSubmit,\n  } = useForm<FormValues>({\n    defaultValues: {\n      product: product.product.id.toString(),\n      amount: getAmount,\n      buyer: vendorId,\n      vendor: product.product.vendor.id.toString(),\n    },\n    mode: 'onChange',\n    criteriaMode: 'all',\n  });\n\n  const onSubmit: SubmitHandler<FormValues> = async (data, e) => {\n    console.log('MakeOfferScreen: ValidSubmitData =>', data, e);\n    await makeOffer(\n      data.product,\n      data.buyer,\n      data.amount,\n      accessToken\n    ).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          setStatus(data.status);\n        });\n        console.log(\n          'MakeOfferScreen: dispatching response buyer id',\n          data.buyer\n        );\n        loadVendorData(data.buyer);\n        setTimeout(() => {\n          navigation && navigation.replace('Products');\n        }, 1720);\n      }\n    });\n  };\n  const onError: SubmitErrorHandler<FormValues> = (errors, e) => {\n    console.log('MakeOfferScreen: ErrorSubmitData =>', errors, e);\n    navigation &&\n      navigation.reset({\n        index: 0,\n        routes: [{ name: 'Products' }],\n      });\n  };\n\n  console.log(\n    'MakeOfferScreen: price from props',\n    product.product.price\n  );\n  console.log('MakeOfferScreen: buyer from context', vendorId);\n  console.log(\n    'MakeOfferScreen: buyer from context reducer',\n    vendor?.id\n  );\n  console.log(\n    'MakeOfferScreen: seller from props declared',\n    sellerId\n  );\n  console.log(\n    'MakeOfferScreen: seller from props param extracted',\n    product.product.vendor.id\n  );\n  console.log(\n    'MakeOfferScreen: productid from props declared',\n    productId\n  );\n  console.log(\n    'MakeOfferScreen: product id from props extracted',\n    product.product.id\n  );\n  console.log(\n    'MakeOfferScreen: the product object from props',\n    product\n  );\n  console.log('MakeOfferScreen: the route object from props', route);\n  console.log(\n    'MakeOfferScreen: the navigation object from props',\n    navigation\n  );\n\n  const hasUnsavedChanges = Boolean(getAmount);\n\n  React.useEffect(\n    () =>\n      navigation &&\n      navigation.addListener('beforeRemove', (e) => {\n        if (!hasUnsavedChanges) {\n          return;\n        }\n\n        e.preventDefault();\n\n        if (Platform.OS === 'web') {\n          const discard = confirm(\n            'You have unsaved changes. Discard them and leave the screen?'\n          );\n\n          if (discard) {\n            navigation.dispatch(e.data.action);\n          }\n        } else {\n          Alert.alert(\n            'Discard changes?',\n            'You have unsaved changes. Discard them and leave the screen?',\n            [\n              {\n                text: \"Don't leave\",\n                style: 'cancel',\n                onPress: () => {},\n              },\n              {\n                text: 'Discard',\n                style: 'destructive',\n                onPress: () => navigation.dispatch(e.data.action),\n              },\n            ]\n          );\n        }\n      }),\n    [hasUnsavedChanges, navigation]\n  );\n\n  return (\n    <ScrollView\n      style={{ backgroundColor }}\n      contentContainerStyle={[\n        styles.scrollViewContent,\n        { backgroundColor },\n      ]}\n    >\n      <Logo loading={isSubmitting || isValidating} />\n      <Header>Offer</Header>\n      <Caption style={styles.centerText}>\n        You're about to make an offer for {product.product.title}. If\n        the seller accepts, the item will be marked as sold.\n      </Caption>\n      <Headline style={styles.centerText}>Original Price</Headline>\n      <Subheading style={styles.centerText}>\n        {product.product.price}\n      </Subheading>\n      <Caption style={styles.centerText}>{status}</Caption>\n      <ErrorMessage\n        errors={errors}\n        name=\"amount\"\n        render={({ messages }) => {\n          console.log('messages', messages);\n          return (\n            messages &&\n            _.entries(messages).map(([type, message]) => (\n              <Caption\n                style={[\n                  styles.centerText,\n                  { color: theme.colors.error },\n                ]}\n                key={type}\n              >\n                {message}\n              </Caption>\n            ))\n          );\n        }}\n      />\n      <React.Fragment>\n        <View style={styles.container}>\n          <FormBuilder\n            control={control}\n            setFocus={setFocus}\n            formConfigArray={[\n              {\n                name: 'product',\n                type: 'text',\n                textInputProps: {\n                  label: 'Product',\n                  left: <TextInput.Icon name={'account'} />,\n                  disabled: true,\n                  style: {\n                    display: 'none',\n                  },\n                  placeholder: product.product.title,\n                },\n                rules: {\n                  required: {\n                    value: true,\n                    message: 'Product is required',\n                  },\n                },\n              },\n              {\n                name: 'amount',\n                type: 'text',\n                textInputProps: {\n                  label: 'Your Offer Amount',\n                  left: <TextInput.Icon name={'lock'} />,\n                  underlineColor: 'transparent',\n                  mode: 'outlined',\n                  textContentType: 'none',\n                  returnKeyType: 'next',\n                  keyboardType: 'numeric',\n\n                  value: getAmount,\n                  onChangeText: (amount) => setAmount(amount),\n                },\n\n                rules: {\n                  required: {\n                    value: true,\n                    message: 'Amount is required',\n                  },\n                  validate: {\n                    positive: (v) =>\n                      parseInt(v) > 0 || 'should be greater than 0',\n\n                    lessThanPrice: (v) =>\n                      parseInt(v) <= price ||\n                      'should not be more than product price',\n                  },\n                  pattern: {\n                    value: /^\\-?[0-9]+(?:\\.[0-9]{1,2})?/,\n                    message: 'Amount is invalid',\n                  },\n                  minLength: {\n                    value: 3,\n                    message:\n                      'The Amount must be a valid decimal field.',\n                  },\n                  maxLength: {\n                    value: 8,\n                    message:\n                      'The Amount must be between 0 and 999,999.99',\n                  },\n                },\n              },\n              {\n                name: 'buyer',\n                type: 'text',\n                textInputProps: {\n                  label: 'Buyer',\n                  left: <TextInput.Icon name={'account'} />,\n                  disabled: true,\n                  placeholder: vendor?.name,\n                  style: {\n                    display: 'none',\n                  },\n                },\n\n                rules: {\n                  required: {\n                    value: true,\n                    message: 'Buyer is required',\n                  },\n                },\n              },\n              {\n                name: 'vendor',\n                type: 'text',\n                textInputProps: {\n                  label: 'Vendor',\n                  left: <TextInput.Icon name={'account'} />,\n                  disabled: true,\n                  placeholder: product.product.vendor.name,\n\n                  style: {\n                    display: 'none',\n                  },\n                },\n                rules: {\n                  required: {\n                    value: true,\n                    message: 'Vendor is required',\n                  },\n                },\n              },\n            ]}\n          />\n        </View>\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.text}\n          style={[styles.button, { marginTop: 24 }]}\n          onPress={handleSubmit(onSubmit, onError)}\n        >\n          Offer\n        </Button>\n      </React.Fragment>\n      <Button\n        mode=\"outlined\"\n        labelStyle={styles.text}\n        style={[\n          styles.button,\n          { backgroundColor: theme.colors.surface },\n        ]}\n        onPress={() => navigation && navigation.goBack()}\n      >\n        Cancel\n      </Button>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollViewContent: {\n    flex: 1,\n    paddingHorizontal: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  centerText: {\n    textAlign: 'center',\n  },\n  button: {\n    width: '100%',\n    marginVertical: 10,\n    paddingVertical: 2,\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    lineHeight: 26,\n  },\n  container: {\n    width: '100%',\n    marginVertical: 12,\n  },\n});\n","import React from 'react';\nimport { RouteProp } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { ProductStackNavigatorParamList } from '../../types';\nimport { MakeOffer } from '../../components/products/makeOffer';\n\nexport const MakeOfferScreen = ({\n  route,\n  navigation,\n}: {\n  route: RouteProp<ProductStackNavigatorParamList, 'MakeOffer'>;\n  navigation?: StackNavigationProp<ProductStackNavigatorParamList>;\n}) => {\n  return (\n    <MakeOffer\n      {...route.params}\n      product={route.params}\n      navigation={navigation}\n    />\n  );\n};\n","import React from 'react';\nimport { ScrollView, StyleSheet, View } from 'react-native';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\nimport {\n  useForm,\n  SubmitHandler,\n  SubmitErrorHandler,\n} from 'react-hook-form';\n\nimport _ from 'lodash/fp';\n\nimport { FormBuilder } from 'react-native-paper-form-builder';\nimport { ErrorMessage } from '@hookform/error-message';\nimport {\n  Headline,\n  Subheading,\n  Caption,\n  useTheme,\n  Button,\n  TextInput,\n  List,\n  Checkbox,\n} from 'react-native-paper';\n\nimport Background from '../../components/common/background';\nimport Logo from '../../components/common/logo';\nimport Header from '../../components/common/header';\n\nimport overlay from '../../utils/overlay';\n\nimport { RouteProp } from '@react-navigation/native';\nimport { ProductStackNavigatorParamList } from '../../types';\n\nimport { useVendorData } from '../../context/vendor.context';\nimport { useAuth } from '../../context/authorization.context';\n\nimport {\n  makePurchase,\n  createOrderDetail,\n} from '../../services/get.service';\n\ntype FormValues = {\n  full_name: string;\n  email: string;\n  phone_number: string;\n  country: string;\n  zipcode?: string;\n  town_or_city: string;\n  street_address1: string;\n  street_address2?: string;\n  county?: string;\n  stripe_pid?: string;\n  order: string;\n};\n\nexport const MakePurchase = ({\n  product,\n  navigation,\n  route,\n}: {\n  product: ProductStackNavigatorParamList['MakePurchase'];\n  navigation?: StackNavigationProp<ProductStackNavigatorParamList>;\n  route?: RouteProp<ProductStackNavigatorParamList, 'MakePurchase'>;\n}) => {\n  const { vendorId, vendor, loadVendorData } = useVendorData();\n  const { accessToken } = useAuth();\n  const [confirmation, setConfirmation] =\n    React.useState<boolean>(false);\n  const [getAmount, setAmount] = React.useState<string>('');\n  const [getOrderNumber, setOrderNumber] = React.useState<string>('');\n  const [status, setStatus] = React.useState<string | undefined>(\n    undefined\n  );\n  const theme = useTheme();\n  const backgroundColor = overlay(2, theme.colors.surface) as string;\n\n  const {\n    control,\n    setFocus,\n    formState: {\n      errors,\n      isDirty,\n      isSubmitted,\n      isSubmitting,\n      isValidating,\n    },\n    handleSubmit,\n  } = useForm<FormValues>({\n    defaultValues: {\n      full_name: '',\n      email: '',\n      phone_number: '',\n      country: '',\n      zipcode: '',\n      town_or_city: '',\n      street_address1: '',\n      street_address2: '',\n      county: '',\n      stripe_pid: '',\n      order: getOrderNumber,\n    },\n    mode: 'onChange',\n    criteriaMode: 'all',\n  });\n\n  const onConfirm = async () => {\n    await makePurchase(\n      product.product.id.toString(),\n      vendorId || '',\n      accessToken\n    ).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          setStatus(data.status);\n          setOrderNumber(data.id);\n          console.log('MakePurchase: Response order id', data.id);\n        });\n        console.log(\n          'MakePurchase: dispatching response buyer id',\n          vendorId\n        );\n        vendorId && loadVendorData(vendorId);\n        setTimeout(() => {\n          setConfirmation(true);\n        }, 750);\n      }\n    });\n  };\n\n  const onSubmit: SubmitHandler<FormValues> = async (data, e) => {\n    console.log('MakeOfferScreen: ValidSubmitData =>', data, e);\n    await createOrderDetail(\n      accessToken,\n      data.order,\n      data.full_name,\n      data.email,\n      data.phone_number,\n      data.country,\n      data.town_or_city,\n      data.street_address1,\n      data.street_address2,\n      data.county,\n      data.stripe_pid,\n      data.zipcode\n    ).then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          console.log('MakePurchase: success', data);\n        });\n        console.log('MakePurchase: reloading vendor data');\n        vendorId && loadVendorData(vendorId);\n        // setTimeout(() => {\n        //   navigation && navigation.replace('Products');\n        // }, 1720);\n      }\n    });\n  };\n  const onError: SubmitErrorHandler<FormValues> = (errors, e) => {\n    console.log('MakeOfferScreen: ErrorSubmitData =>', errors, e);\n    setStatus('ERROR');\n    // navigation &&\n    //   navigation.reset({\n    //     index: 0,\n    //     routes: [{ name: 'Products' }],\n    //   });\n  };\n\n  console.log(\n    'MakePurchase: price from props',\n    product.product.price\n  );\n  console.log('MakePurchase: buyer from context', vendorId);\n  console.log('MakePurchase: buyer from context reducer', vendor?.id);\n\n  console.log(\n    'MakePurchase: seller from props param extracted',\n    product.product.vendor.id\n  );\n\n  console.log(\n    'MakePurchase: product id from props extracted',\n    product.product.id\n  );\n  console.log('MakePurchase: the product object from props', product);\n  console.log('MakePurchase: the route object from props', route);\n  console.log(\n    'MakePurchase: the navigation object from props',\n    navigation\n  );\n\n  return (\n    <ScrollView\n      style={{ backgroundColor }}\n      contentContainerStyle={[\n        styles.scrollViewContent,\n        { backgroundColor },\n      ]}\n    >\n      <Logo loading={isSubmitting || isValidating} />\n      <Header>{confirmation ? 'Order Details' : 'Purchase'}</Header>\n      {confirmation ? (\n        <React.Fragment>\n          <Caption style={styles.centerText}>\n            Fill out your details to receive {product.product.title}.\n          </Caption>\n          <Headline style={styles.centerText}>Total Amount</Headline>\n          <Subheading style={styles.centerText}>\n            {product.product.price}\n          </Subheading>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Caption style={styles.centerText}>\n            You're about to purchase {product.product.title}. You will\n            be led to the order detail form upon hitting confirm.\n          </Caption>\n          <Headline style={styles.centerText}>Total Amount</Headline>\n          <Subheading style={styles.centerText}>\n            {product.product.price}\n          </Subheading>\n        </React.Fragment>\n      )}\n      <Caption style={styles.centerText}>{status}</Caption>\n\n      {confirmation ? (\n        <React.Fragment>\n          <View style={styles.container}>\n            <FormBuilder\n              control={control}\n              setFocus={setFocus}\n              formConfigArray={[\n                {\n                  name: 'full_name',\n                  type: 'text',\n                  textInputProps: {\n                    label: 'Full Name',\n                    left: <TextInput.Icon name={'account'} />,\n                    underlineColor: 'transparent',\n                    mode: 'outlined',\n                    textContentType: 'name',\n                    returnKeyType: 'next',\n                    keyboardType: 'default',\n                  },\n                  rules: {\n                    required: {\n                      value: true,\n                      message: 'Full name is required',\n                    },\n                  },\n                },\n                {\n                  name: 'email',\n                  type: 'text',\n                  textInputProps: {\n                    label: 'Email',\n                    left: <TextInput.Icon name={'lock'} />,\n                    underlineColor: 'transparent',\n                    mode: 'outlined',\n                    textContentType: 'emailAddress',\n                    returnKeyType: 'next',\n                    keyboardType: 'email-address',\n                  },\n\n                  rules: {\n                    required: {\n                      value: true,\n                      message: 'Email is required',\n                    },\n                    pattern: {\n                      value: /\\S+@\\S+\\.\\S+/,\n                      // value:\n                      //   /[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})/,\n                      message: 'Email is invalid',\n                    },\n                  },\n                },\n                {\n                  name: 'phone_number',\n                  type: 'text',\n                  textInputProps: {\n                    label: 'Phone Number',\n                    left: <TextInput.Icon name={'account'} />,\n                    underlineColor: 'transparent',\n                    mode: 'outlined',\n                    textContentType: 'telephoneNumber',\n                    returnKeyType: 'next',\n                    keyboardType: 'number-pad',\n                  },\n                  rules: {\n                    required: {\n                      value: true,\n                      message: 'Phone number is required',\n                    },\n                  },\n                },\n                {\n                  name: 'street_address1',\n                  type: 'text',\n                  textInputProps: {\n                    label: 'Street Address 1',\n                    left: <TextInput.Icon name={'account'} />,\n                    underlineColor: 'transparent',\n                    mode: 'outlined',\n                    textContentType: 'streetAddressLine1',\n                    returnKeyType: 'next',\n                    keyboardType: 'default',\n                  },\n                  rules: {\n                    required: {\n                      value: true,\n                      message: 'Street address is required',\n                    },\n                  },\n                },\n                {\n                  name: 'street_address2',\n                  type: 'text',\n                  textInputProps: {\n                    label: 'Street Address 2',\n                    left: <TextInput.Icon name={'account'} />,\n                    underlineColor: 'transparent',\n                    mode: 'outlined',\n                    textContentType: 'streetAddressLine2',\n                    returnKeyType: 'next',\n                    keyboardType: 'default',\n                  },\n                },\n                {\n                  name: 'county',\n                  type: 'text',\n                  textInputProps: {\n                    label: 'County',\n                    left: <TextInput.Icon name={'account'} />,\n                    underlineColor: 'transparent',\n                    mode: 'outlined',\n                    textContentType: 'sublocality',\n                    returnKeyType: 'next',\n                    keyboardType: 'default',\n                  },\n                },\n                {\n                  name: 'town_or_city',\n                  type: 'text',\n                  textInputProps: {\n                    label: 'Town or City',\n                    left: <TextInput.Icon name={'account'} />,\n                    underlineColor: 'transparent',\n                    mode: 'outlined',\n                    textContentType: 'addressCity',\n                    returnKeyType: 'next',\n                    keyboardType: 'default',\n                  },\n                  rules: {\n                    required: {\n                      value: true,\n                      message: 'Town or City is required',\n                    },\n                  },\n                },\n                {\n                  name: 'country',\n                  type: 'select',\n                  textInputProps: {\n                    label: 'Town or City',\n                    left: <TextInput.Icon name={'account'} />,\n                    underlineColor: 'transparent',\n                    mode: 'outlined',\n                    textContentType: 'countryName',\n                    returnKeyType: 'next',\n                    keyboardType: 'default',\n                  },\n                  rules: {\n                    required: {\n                      value: true,\n                      message: 'Country is Required',\n                    },\n                  },\n                  options: [\n                    {\n                      label: 'Afganistan',\n                      value: 'AF',\n                    },\n                    {\n                      label: 'Denmark',\n                      value: 'DM',\n                    },\n                    {\n                      label: 'Philippines',\n                      value: 'PH',\n                    },\n                  ],\n                },\n              ]}\n            />\n          </View>\n          <Button\n            mode=\"contained\"\n            labelStyle={styles.text}\n            style={[styles.button, { marginTop: 24 }]}\n            onPress={handleSubmit(onSubmit, onError)}\n          >\n            Submit Defails\n          </Button>\n        </React.Fragment>\n      ) : (\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.text}\n          style={[styles.button, { marginTop: 24 }]}\n          onPress={() => onConfirm}\n        >\n          Confirm Purchase\n        </Button>\n      )}\n\n      <Button\n        mode=\"outlined\"\n        labelStyle={styles.text}\n        style={[\n          styles.button,\n          { backgroundColor: theme.colors.surface },\n        ]}\n        onPress={() => navigation && navigation.goBack()}\n      >\n        Cancel\n      </Button>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollViewContent: {\n    flex: 1,\n    paddingHorizontal: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  centerText: {\n    textAlign: 'center',\n  },\n  button: {\n    width: '100%',\n    marginVertical: 10,\n    paddingVertical: 2,\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    lineHeight: 26,\n  },\n  container: {\n    width: '100%',\n    marginVertical: 12,\n  },\n});\n","import React from 'react';\nimport { RouteProp } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { ProductStackNavigatorParamList } from '../../types';\nimport { MakePurchase } from '../../components/products/makePurchase';\n\nexport const MakePurchaseScreen = ({\n  route,\n  navigation,\n}: {\n  route: RouteProp<ProductStackNavigatorParamList, 'MakePurchase'>;\n  navigation?: StackNavigationProp<ProductStackNavigatorParamList>;\n}) => {\n  return (\n    <MakePurchase\n      {...route.params}\n      product={route.params}\n      navigation={navigation}\n    />\n  );\n};\n","// const COUNTRY_OPTIONS =\n\nexport const CONDITION_OPTIONS = [\n  {\n    label: 'Mint',\n    value: 5,\n  },\n  {\n    label: 'New',\n    value: 4,\n  },\n  {\n    label: 'Good',\n    value: 3,\n  },\n  {\n    label: 'Fair',\n    value: 2,\n  },\n  {\n    label: 'Damaged',\n    value: 1,\n  },\n];\n","import React from 'react';\nimport {\n  ScrollView,\n  StyleSheet,\n  View,\n  Platform,\n  Alert,\n} from 'react-native';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\nimport {\n  useForm,\n  SubmitHandler,\n  SubmitErrorHandler,\n} from 'react-hook-form';\n\nimport _ from 'lodash/fp';\n\nimport { FormBuilder } from 'react-native-paper-form-builder';\n\nimport {\n  Headline,\n  Subheading,\n  Caption,\n  useTheme,\n  Button,\n  TextInput,\n} from 'react-native-paper';\n\nimport * as ICONS from '../../constants/icons.constants';\nimport { CONDITION_OPTIONS } from '../../constants/options.constants';\nimport Background from '../common/background';\nimport Logo from '../common/logo';\nimport Header from '../common/header';\n\nimport overlay from '../../utils/overlay';\n\nimport { RouteProp } from '@react-navigation/native';\nimport { ProductStackNavigatorParamList } from '../../types';\n\nimport { useVendorData } from '../../context/vendor.context';\nimport { useAuth } from '../../context/authorization.context';\nimport { useProductsData } from '../../context/products.context';\n\ntype FormValues = {\n  vendor: string;\n  title: string;\n  category: string;\n  description: string;\n  price: string;\n  condition: string;\n  images?: FileList;\n};\n\nexport const UpdateProduct = ({\n  product,\n  navigation,\n  route,\n}: {\n  product: ProductStackNavigatorParamList['UpdateProduct'];\n  navigation?: StackNavigationProp<ProductStackNavigatorParamList>;\n  route?: RouteProp<ProductStackNavigatorParamList, 'UpdateProduct'>;\n}) => {\n  const { updateProduct } = useVendorData();\n\n  const { categoryOptions } = useProductsData();\n  const { accessToken } = useAuth();\n\n  const theme = useTheme();\n  const backgroundColor = overlay(2, theme.colors.surface) as string;\n\n  const [getTitle, setTitle] = React.useState(product.product.title);\n  const [getCategory, setCategory] = React.useState(\n    product.product.category.id.toString()\n  );\n  const [getDescription, setDescription] = React.useState(\n    product.product.description\n  );\n  const [getPrice, setPrice] = React.useState(\n    product.product.price.toString()\n  );\n  const [getCondition, setCondition] = React.useState(\n    product.product.condition\n  );\n\n  const [status, setStatus] = React.useState<string | undefined>(\n    undefined\n  );\n  const [fileList, setFileList] = React.useState<\n    FileList | undefined\n  >(undefined!);\n\n  const {\n    control,\n    setFocus,\n    formState: {\n      errors,\n      isDirty,\n      isSubmitted,\n      isSubmitting,\n      isValidating,\n    },\n    handleSubmit,\n  } = useForm<FormValues>({\n    defaultValues: {\n      title: product.product.title,\n      category: product.product.category.id.toString(),\n      description: product.product.description,\n      price: product.product.price.toString(),\n      condition: product.product.condition,\n      images: fileList,\n    },\n    mode: 'onChange',\n    criteriaMode: 'all',\n  });\n\n  const onSubmit: SubmitHandler<FormValues> = async (data, e) => {\n    console.log('EditProduct: ValidSubmitData =>', data, e);\n    await updateProduct(\n      product.product.slug,\n      data.title,\n      data.category,\n      data.description,\n      data.price,\n      data.condition,\n      accessToken ?? ''\n    ).then((response) => console.log(response));\n  };\n\n  const onError: SubmitErrorHandler<FormValues> = (errors, e) => {\n    console.log('EditProduct: ErrorSubmitData =>', errors, e);\n    navigation &&\n      navigation.reset({\n        index: 0,\n        routes: [{ name: 'Products' }],\n      });\n  };\n\n  const hasUnsavedChanges = Boolean(\n    getTitle ||\n      getDescription ||\n      getCategory ||\n      getPrice ||\n      getCondition\n  );\n\n  React.useEffect(\n    () =>\n      navigation &&\n      navigation.addListener('beforeRemove', (e) => {\n        if (!hasUnsavedChanges) {\n          return;\n        }\n\n        e.preventDefault();\n\n        if (Platform.OS === 'web') {\n          const discard = confirm(\n            'You have unsaved changes. Discard them and leave the screen?'\n          );\n\n          if (discard) {\n            navigation.dispatch(e.data.action);\n          }\n        } else {\n          Alert.alert(\n            'Discard changes?',\n            'You have unsaved changes. Discard them and leave the screen?',\n            [\n              {\n                text: \"Don't leave\",\n                style: 'cancel',\n                onPress: () => {},\n              },\n              {\n                text: 'Discard',\n                style: 'destructive',\n                onPress: () => navigation.dispatch(e.data.action),\n              },\n            ]\n          );\n        }\n      }),\n    [hasUnsavedChanges, navigation]\n  );\n\n  return (\n    <ScrollView\n      style={{ backgroundColor }}\n      contentContainerStyle={[\n        styles.scrollViewContent,\n        { backgroundColor },\n      ]}\n    >\n      <Logo loading={isSubmitting || isValidating} />\n      <Header>Update Product</Header>\n      <Caption style={styles.centerText}>\n        You're about update {product.product.title}. You can continue\n        to update details so long as the product is not yet sold!\n      </Caption>\n      <Headline style={styles.centerText}>\n        {product.product.title}\n      </Headline>\n      <Subheading style={styles.centerText}>\n        {product.product.is_available ? 'Available' : 'Sold'}\n      </Subheading>\n\n      <React.Fragment>\n        <View style={styles.container}>\n          <FormBuilder\n            control={control}\n            setFocus={setFocus}\n            formConfigArray={[\n              {\n                name: 'title',\n                type: 'text',\n                textInputProps: {\n                  label: 'Title',\n                  left: (\n                    <TextInput.Icon name={ICONS.PRODUCT_TITLE_ICON} />\n                  ),\n                  underlineColor: 'transparent',\n                  mode: 'outlined',\n                  textContentType: 'none',\n                  returnKeyType: 'next',\n                  keyboardType: 'default',\n                  blurOnSubmit: false,\n                  value: getTitle,\n                  onChangeText: (title) => setTitle(title),\n                  onSubmitEditing: () => setFocus('description'),\n                },\n                rules: {\n                  required: {\n                    value: true,\n                    message: 'Title is required',\n                  },\n                  maxLength: {\n                    value: 255,\n                    message:\n                      'Title should be less than 255 characters.',\n                  },\n                },\n              },\n              {\n                name: 'description',\n                type: 'text',\n                textInputProps: {\n                  label: 'Description',\n                  left: (\n                    <TextInput.Icon\n                      name={ICONS.PRODUCT_DESCRIPTION_ICON}\n                    />\n                  ),\n                  multiline: true,\n                  underlineColor: 'transparent',\n                  mode: 'outlined',\n                  textContentType: 'none',\n                  returnKeyType: 'next',\n                  keyboardType: 'default',\n                  blurOnSubmit: false,\n                  value: getDescription,\n                  onChangeText: (description) =>\n                    setDescription(description),\n                  onSubmitEditing: () => setFocus('price'),\n                },\n                rules: {\n                  required: {\n                    value: false,\n                    message: 'Description is optional',\n                  },\n                },\n              },\n              {\n                name: 'price',\n                type: 'text',\n                textInputProps: {\n                  label: 'Price',\n                  left: (\n                    <TextInput.Icon name={ICONS.PRODUCT_PRICE_ICON} />\n                  ),\n                  underlineColor: 'transparent',\n                  mode: 'outlined',\n                  textContentType: 'none',\n                  returnKeyType: 'next',\n                  keyboardType: 'numeric',\n                  blurOnSubmit: false,\n                  value: getPrice,\n                  onChangeText: (price) => setPrice(price),\n                  onSubmitEditing: () => setFocus('condition'),\n                },\n                rules: {\n                  required: {\n                    value: true,\n                    message: 'Price is required',\n                  },\n                  pattern: {\n                    value: /^\\-?[0-9]+(?:\\.[0-9]{1,2})?/,\n                    message: 'Price is invalid',\n                  },\n                  minLength: {\n                    value: 3,\n                    message:\n                      'The price must be a valid decimal field.',\n                  },\n                  maxLength: {\n                    value: 8,\n                    message:\n                      'The price must be between 0 and 999,999.99',\n                  },\n                },\n              },\n              {\n                name: 'condition',\n                type: 'autocomplete',\n                textInputProps: {\n                  label: 'Condition',\n                  left: (\n                    <TextInput.Icon\n                      name={ICONS.PRODUCT_CONDITION_ICON}\n                    />\n                  ),\n                  underlineColor: 'transparent',\n                  mode: 'outlined',\n\n                  returnKeyType: 'next',\n                  keyboardType: 'default',\n                  blurOnSubmit: false,\n                  value: getCondition,\n                  onChange: (condition) =>\n                    setDescription(condition.toString()),\n                  onSubmitEditing: () => setFocus('category'),\n                },\n                rules: {\n                  required: {\n                    value: true,\n                    message: 'Condition is required',\n                  },\n                },\n\n                options: CONDITION_OPTIONS,\n              },\n              {\n                name: 'category',\n                type: 'select',\n                textInputProps: {\n                  label: 'Category',\n                  left: (\n                    <TextInput.Icon\n                      color={theme.colors.primary}\n                      name={ICONS.PRODUCT_CATEGORY_ICON}\n                    />\n                  ),\n                  underlineColor: 'transparent',\n                  mode: 'outlined',\n                  returnKeyType: 'next',\n                  keyboardType: 'default',\n                  blurOnSubmit: false,\n                  value: getCategory,\n                  onChange: (category) =>\n                    setCategory(category.toString()),\n\n                  onSubmitEditing: () =>\n                    handleSubmit(onSubmit, onError),\n                },\n                rules: {\n                  required: {\n                    value: true,\n                    message: 'Category is required',\n                  },\n                },\n                onDismiss: () => setFocus('price'),\n                options: categoryOptions,\n              },\n            ]}\n          />\n        </View>\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.text}\n          style={[styles.button, { marginTop: 24 }]}\n          onPress={handleSubmit(onSubmit, onError)}\n        >\n          Update\n        </Button>\n      </React.Fragment>\n      <Button\n        mode=\"outlined\"\n        labelStyle={styles.text}\n        style={[\n          styles.button,\n          { backgroundColor: theme.colors.surface },\n        ]}\n        onPress={() => navigation && navigation.goBack()}\n      >\n        Cancel\n      </Button>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollViewContent: {\n    flex: 1,\n    paddingHorizontal: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  centerText: {\n    textAlign: 'center',\n  },\n  button: {\n    width: '100%',\n    marginVertical: 10,\n    paddingVertical: 2,\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    lineHeight: 26,\n  },\n  container: {\n    width: '100%',\n    marginVertical: 12,\n  },\n});\n","import React from 'react';\nimport { RouteProp } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { ProductStackNavigatorParamList } from '../../types';\nimport { UpdateProduct } from '../../components/products/updateProduct';\n\nexport const UpdateProductScreen = ({\n  route,\n  navigation,\n}: {\n  route: RouteProp<ProductStackNavigatorParamList, 'UpdateProduct'>;\n  navigation?: StackNavigationProp<ProductStackNavigatorParamList>;\n}) => {\n  return (\n    <UpdateProduct\n      {...route.params}\n      product={route.params}\n      navigation={navigation}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Surface,\n  Text,\n  Avatar,\n  Button,\n  Title,\n  Subheading,\n  Paragraph,\n  Caption,\n  useTheme,\n} from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport color from 'color';\n\nimport { capitalize } from '../../utils/initialize';\nimport { TimeAgo } from '../common/time';\n\nimport { useVendorData } from '../../context/vendor.context';\n\nimport { OrderTypeParamList } from '../../types';\n\ntype Props = {\n  onPress?: (id: number) => void;\n} & OrderTypeParamList;\n\nexport const OrderTransaction = (props: Props) => {\n  const order = props;\n  const theme = useTheme();\n\n  const { vendor, vendorId } = useVendorData();\n\n  const contentColor = color(theme.colors.text)\n    .alpha(0.8)\n    .rgb()\n    .string();\n\n  return (\n    <Surface style={styles.container}>\n      <View style={styles.leftColumn}>\n        <MaterialCommunityIcons\n          name=\"currency-usd-off\"\n          size={30}\n          color=\"#8d38e8\"\n        />\n      </View>\n      <View style={styles.rightColumn}>\n        <View style={styles.topRow}>\n          {order.product.image && (\n            <Avatar.Image\n              source={{ uri: order.product.image.thumbnail }}\n              size={60}\n            />\n          )}\n        </View>\n        <Title>Status</Title>\n        <Subheading style={{ marginBottom: 10 }}>\n          {order.status}\n        </Subheading>\n        <Title>Product</Title>\n        <Paragraph>\n          {order.product.title\n            ? order.product.title\n            : order.product.toString()}\n        </Paragraph>\n        <Title>Seller</Title>\n        <Paragraph>\n          {order.vendor.name\n            ? capitalize(order.vendor.name)\n            : vendor && order.vendor.toString() === vendorId\n            ? vendor.name\n            : order.vendor.toString()}\n        </Paragraph>\n        <Button\n          mode=\"text\"\n          uppercase\n          color={theme.colors.primary}\n          onPress={() => console.log('Pressed')}\n        >\n          View\n        </Button>\n\n        <Caption style={{ color: contentColor }}>\n          {order.updated_at ||\n            (order.created_at && (\n              <TimeAgo date={order.updated_at || order.created_at} />\n            ))}\n        </Caption>\n      </View>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    paddingTop: 15,\n    paddingRight: 15,\n    paddingBottom: 15,\n  },\n  leftColumn: {\n    width: 100,\n    marginRight: 10,\n    alignItems: 'center',\n  },\n  rightColumn: {\n    flex: 1,\n  },\n  topRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n});\n","import React from 'react';\nimport { View, FlatList, StyleSheet } from 'react-native';\nimport {\n  useTheme,\n  ActivityIndicator,\n  Text,\n} from 'react-native-paper';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\nimport { OrderTransaction } from '../../components/orders/orderTransaction';\nimport { useVendorData } from '../../context/vendor.context';\n\nimport { OrderTransactionStackParamList } from '../../types';\n\ntype Props = {\n  navigation?: StackNavigationProp<OrderTransactionStackParamList>;\n};\n\ntype OrderProps = React.ComponentProps<typeof OrderTransaction>;\n\nexport const OrdersMadeScreen = (props: Props) => {\n  const theme = useTheme();\n  const { vendor, loading } = useVendorData();\n\n  return loading || !vendor ? (\n    <ActivityIndicator />\n  ) : vendor && vendor.orders_made.length < 1 ? (\n    <Text> You haven't purchased anything yet! </Text>\n  ) : (\n    <FlatList\n      contentContainerStyle={{\n        backgroundColor: theme.colors.background,\n      }}\n      style={{ backgroundColor: theme.colors.background }}\n      data={\n        vendor &&\n        vendor.orders_made &&\n        vendor.orders_made.map((ordersMade) => ({\n          ...ordersMade,\n          onPress: () =>\n            props.navigation &&\n            props.navigation.push('OrderDetails', {\n              ...ordersMade,\n            }),\n        }))\n      }\n      renderItem={({ item }: { item: OrderProps }) => {\n        return <OrderTransaction {...item} />;\n      }}\n      keyExtractor={(item: OrderProps) => item.id.toString()}\n      ItemSeparatorComponent={() => (\n        <View style={{ height: StyleSheet.hairlineWidth }} />\n      )}\n    />\n  );\n};\n","import React from 'react';\nimport { View, FlatList, StyleSheet } from 'react-native';\nimport {\n  useTheme,\n  ActivityIndicator,\n  Text,\n} from 'react-native-paper';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\nimport { OrderTransaction } from '../../components/orders/orderTransaction';\nimport { useVendorData } from '../../context/vendor.context';\n\nimport { OrderTransactionStackParamList } from '../../types';\n\ntype Props = {\n  navigation?: StackNavigationProp<OrderTransactionStackParamList>;\n};\n\ntype OrderProps = React.ComponentProps<typeof OrderTransaction>;\n\nexport const OrderRequestsScreen = (props: Props) => {\n  const theme = useTheme();\n  const { vendor, loading } = useVendorData();\n\n  return loading || !vendor ? (\n    <ActivityIndicator />\n  ) : vendor && vendor.order_requests.length < 1 ? (\n    <Text> You haven't sold anything yet!</Text>\n  ) : (\n    <FlatList\n      contentContainerStyle={{\n        backgroundColor: theme.colors.background,\n      }}\n      style={{ backgroundColor: theme.colors.background }}\n      data={\n        vendor &&\n        vendor.order_requests &&\n        vendor.order_requests.map((orderReqs) => ({\n          ...orderReqs,\n          onPress: () =>\n            props.navigation &&\n            props.navigation.push('OrderDetails', {\n              ...orderReqs,\n            }),\n        }))\n      }\n      renderItem={({ item }: { item: OrderProps }) => {\n        return <OrderTransaction {...item} />;\n      }}\n      keyExtractor={(item: OrderProps) => item.id.toString()}\n      ItemSeparatorComponent={() => (\n        <View style={{ height: StyleSheet.hairlineWidth }} />\n      )}\n    />\n  );\n};\n","import React from 'react';\nimport color from 'color';\nimport { Dimensions } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport {\n  TabView,\n  SceneMap,\n  TabBar,\n  TabBarProps,\n} from 'react-native-tab-view';\n\nimport overlay from '../../utils/overlay';\n\nimport { OrdersMadeScreen } from './ordersMadeScreen';\nimport { OrderRequestsScreen } from './orderRequestsScreen';\n\nconst initialLayout = { width: Dimensions.get('window').width };\n\nconst OrderRequests = () => <OrderRequestsScreen />;\n\nconst OrdersMade = () => <OrdersMadeScreen />;\n\nexport const TransactionOrdersScreen = () => {\n  const [index, setIndex] = React.useState(0);\n\n  const [routes] = React.useState([\n    { key: 'orderRequests', title: 'Sales' },\n    { key: 'ordersMade', title: 'Purchases' },\n  ]);\n\n  const theme = useTheme();\n\n  const renderScene = SceneMap({\n    orderRequests: OrderRequests,\n    ordersMade: OrdersMade,\n  });\n\n  const tabBarColor = theme.dark\n    ? (overlay(4, theme.colors.surface) as string)\n    : theme.colors.surface;\n\n  const textColor = theme.dark\n    ? (overlay(4, theme.colors.text) as string)\n    : theme.colors.text;\n\n  const rippleColor = theme.dark\n    ? color(tabBarColor).lighten(0.5)\n    : color(tabBarColor).darken(0.2);\n\n  const renderTabBar = (props: any) => (\n    <TabBar\n      {...props}\n      indicatorStyle={{ backgroundColor: theme.colors.primary }}\n      style={{\n        color: textColor,\n        backgroundColor: tabBarColor,\n        shadowColor: theme.colors.text,\n      }}\n      labelStyle={{ color: theme.colors.primary }}\n      pressColor={rippleColor}\n    />\n  );\n\n  return (\n    <React.Fragment>\n      <TabView\n        navigationState={{ index, routes }}\n        renderScene={renderScene}\n        onIndexChange={setIndex}\n        initialLayout={initialLayout}\n        renderTabBar={renderTabBar}\n      />\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as DocumentPicker from 'expo-document-picker';\n\nimport {\n  Image,\n  View,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Alert,\n} from 'react-native';\n\nimport { FormBuilder } from 'react-native-paper-form-builder';\n\nimport {\n  ControllerRenderProps,\n  FieldValues,\n  UseFormStateReturn,\n  useForm,\n  useFieldArray,\n  useWatch,\n  Controller,\n  SubmitHandler,\n  SubmitErrorHandler,\n} from 'react-hook-form';\n\nimport merge from 'deepmerge';\n\nimport { MaterialBottomTabNavigationProp } from '@react-navigation/material-bottom-tabs';\nimport {\n  Headline,\n  Caption,\n  useTheme,\n  Button,\n  TextInput,\n  Text,\n} from 'react-native-paper';\n\nimport Background from '../../components/common/background';\nimport Logo from '../../components/common/logo';\nimport Header from '../../components/common/header';\n\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { ProductStackNavigatorParamList } from '../../types';\n\nimport * as ICONS from '../../constants/icons.constants';\nimport { CONDITION_OPTIONS } from '../../constants/options.constants';\n\nimport { useVendorData } from '../../context/vendor.context';\nimport { useProductsData } from '../../context/products.context';\nimport { useAuth } from '../../context/authorization.context';\n\nexport type ImageInfo = {\n  uri: string;\n  width: number;\n  height: number;\n  type?: 'image' | 'video';\n  exif?: {\n    [key: string]: any;\n  };\n  base64?: string;\n};\n\ntype ProductFormValues = {\n  title: string;\n  category: string;\n  description: string;\n  price: string;\n  condition: string;\n  images: {\n    type: 'success';\n    name: string;\n    size: number;\n    uri: string;\n    lastModified?: number | undefined;\n    file: File;\n    output?: FileList | null | undefined;\n  }[];\n};\n\nexport const AddProductScreen = ({\n  navigation,\n}: {\n  navigation: StackNavigationProp<ProductStackNavigatorParamList>;\n}) => {\n  const theme = useTheme();\n  const backgroundColor = theme.colors.surface;\n\n  const { accessToken } = useAuth();\n\n  const { createProduct } = useVendorData();\n\n  const { categoryOptions } = useProductsData();\n\n  const [getTitle, setTitle] = React.useState('');\n  const [getCategory, setCategory] = React.useState('');\n  const [getDescription, setDescription] = React.useState('');\n  const [getPrice, setPrice] = React.useState('');\n  const [getCondition, setCondition] = React.useState('');\n\n  const [images, setImages] = React.useState<ImageInfo[] | null>([]);\n  const [selected, setSelected] =\n    React.useState<DocumentPicker.DocumentResult[]>();\n  const [files, setFiles] =\n    React.useState<DocumentPicker.DocumentResult>();\n\n  const [fileList, setFileList] = React.useState<\n    FileList | undefined\n  >(undefined!);\n\n  const {\n    control,\n    watch,\n    register,\n    setFocus,\n    handleSubmit,\n    formState: { errors, isSubmitting, isValidating },\n  } = useForm<ProductFormValues>({\n    defaultValues: {\n      title: '',\n      category: '',\n      description: '',\n      price: '',\n      condition: '',\n      images: [{}],\n    },\n    mode: 'onChange',\n    criteriaMode: 'all',\n  });\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'images',\n  });\n\n  const watchFieldArray = watch('images');\n  const controlledFields = fields.map((field, index) => {\n    return {\n      ...field,\n      ...watchFieldArray[index],\n    };\n  });\n\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } =\n          await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          alert(\n            'Sorry, we need camera roll permissions to make this work!'\n          );\n        }\n      }\n    })();\n  }, []);\n\n  const pickFiles = async () => {\n    let results = await DocumentPicker.getDocumentAsync({\n      copyToCacheDirectory: true,\n      multiple: true,\n      type: 'image/*',\n    });\n\n    console.log('picked files', results);\n    if (results.type === 'success') {\n      console.log(results);\n      setFiles(results);\n\n      append(results);\n\n      if (results.output) {\n        setFileList(results.output);\n        console.log('results output', results.output);\n      }\n    }\n  };\n\n  const pickImage = async () => {\n    let results = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: false,\n      base64: false,\n      exif: true,\n      allowsMultipleSelection: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log('pickImage Results', results);\n\n    if (!results.cancelled) {\n      console.log(\n        'selected results',\n        results.selected.map((result) =>\n          result.uri.replace('file://', '')\n        )\n      );\n      setImages(results.selected.map((result) => result));\n    }\n  };\n\n  const onError: SubmitErrorHandler<ProductFormValues> = (\n    errors,\n    e\n  ) => {\n    console.log('errors', errors, e);\n    navigation.reset({\n      index: 0,\n      routes: [{ name: 'Products' }],\n    });\n  };\n\n  const onSubmit: SubmitHandler<ProductFormValues> = async (\n    validatedData,\n    e\n  ) => {\n    console.log('submit handler', e);\n    console.log('submit handler validatedData', validatedData);\n    // const mergedFileList = validatedData.images\n    //   .map((image) => image.output)\n    //   .reduce((acc, image, index, field) => {\n    //     image[field] = { ...image };\n    //     return acc;\n    //   });\n\n    // console.log('reduce', mergedFileList);\n\n    createProduct(\n      validatedData.title,\n      validatedData.category,\n      validatedData.description,\n      validatedData.price,\n      validatedData.condition,\n      accessToken ? accessToken : '',\n      fileList\n    );\n  };\n\n  const hasUnsavedChanges = Boolean(\n    getTitle ||\n      getDescription ||\n      getCategory ||\n      getPrice ||\n      getCondition\n  );\n\n  React.useEffect(\n    () =>\n      navigation &&\n      navigation.addListener('beforeRemove', (e) => {\n        if (!hasUnsavedChanges) {\n          return;\n        }\n\n        e.preventDefault();\n\n        if (Platform.OS === 'web') {\n          const discard = confirm(\n            'You have unsaved changes. Discard them and leave the screen?'\n          );\n\n          if (discard) {\n            navigation.dispatch(e.data.action);\n          }\n        } else {\n          Alert.alert(\n            'Discard changes?',\n            'You have unsaved changes. Discard them and leave the screen?',\n            [\n              {\n                text: \"Don't leave\",\n                style: 'cancel',\n                onPress: () => {},\n              },\n              {\n                text: 'Discard',\n                style: 'destructive',\n                onPress: () => navigation.dispatch(e.data.action),\n              },\n            ]\n          );\n        }\n      }),\n    [hasUnsavedChanges, navigation]\n  );\n\n  // React.useEffect(() => {\n  //   if (fields.length === 2) {\n  //     remove(0);\n  //   }\n  // }, [fields]);\n\n  return (\n    <ScrollView\n      style={{ backgroundColor }}\n      contentContainerStyle={[\n        styles.scrollViewContent,\n        { backgroundColor },\n      ]}\n    >\n      <Logo loading={isSubmitting || isValidating} />\n      <Headline style={styles.centerText}>Sell a Product</Headline>\n      <Caption style={styles.centerText}>Pick a Product</Caption>\n\n      <React.Fragment>\n        <View style={styles.container}>\n          <FormBuilder\n            control={control}\n            setFocus={setFocus}\n            formConfigArray={[\n              {\n                name: 'title',\n                type: 'text',\n                textInputProps: {\n                  label: 'Title',\n                  left: (\n                    <TextInput.Icon name={ICONS.PRODUCT_TITLE_ICON} />\n                  ),\n                  underlineColor: 'transparent',\n                  mode: 'outlined',\n                  textContentType: 'none',\n                  returnKeyType: 'next',\n                  keyboardType: 'default',\n                  value: getTitle,\n                  onChangeText: (title) => setTitle(title),\n                  onSubmitEditing: () => setFocus('description'),\n                },\n                rules: {\n                  required: {\n                    value: true,\n                    message: 'Title is required',\n                  },\n                  maxLength: {\n                    value: 255,\n                    message:\n                      'Title should be less than 255 characters.',\n                  },\n                },\n              },\n              {\n                name: 'description',\n                type: 'text',\n                textInputProps: {\n                  label: 'Description',\n                  left: (\n                    <TextInput.Icon\n                      name={ICONS.PRODUCT_DESCRIPTION_ICON}\n                    />\n                  ),\n                  underlineColor: 'transparent',\n                  mode: 'outlined',\n                  textContentType: 'none',\n                  returnKeyType: 'next',\n                  keyboardType: 'default',\n                  value: getDescription,\n                  onChangeText: (description) =>\n                    setDescription(description),\n                  onSubmitEditing: () => setFocus('price'),\n                },\n                rules: {\n                  required: {\n                    value: false,\n                    message: 'Description is optional',\n                  },\n                },\n              },\n              {\n                name: 'price',\n                type: 'text',\n                textInputProps: {\n                  label: 'Price',\n                  left: (\n                    <TextInput.Icon name={ICONS.PRODUCT_PRICE_ICON} />\n                  ),\n                  underlineColor: 'transparent',\n                  mode: 'outlined',\n                  textContentType: 'none',\n                  returnKeyType: 'next',\n                  keyboardType: 'numeric',\n                  value: getPrice,\n                  onChangeText: (price) => setPrice(price),\n                  onSubmitEditing: () => setFocus('condition'),\n                },\n                rules: {\n                  required: {\n                    value: true,\n                    message: 'Price is required',\n                  },\n                  pattern: {\n                    value: /^\\-?[0-9]+(?:\\.[0-9]{1,2})?/,\n                    message: 'Price is invalid',\n                  },\n                  minLength: {\n                    value: 3,\n                    message:\n                      'The price must be a valid decimal field.',\n                  },\n                  maxLength: {\n                    value: 8,\n                    message:\n                      'The price must be between 0 and 999,999.99',\n                  },\n                },\n              },\n              {\n                name: 'condition',\n                type: 'autocomplete',\n                textInputProps: {\n                  label: 'Condition',\n                  left: (\n                    <TextInput.Icon\n                      name={ICONS.PRODUCT_CONDITION_ICON}\n                    />\n                  ),\n                  underlineColor: 'transparent',\n                  mode: 'outlined',\n                  returnKeyType: 'next',\n                  keyboardType: 'default',\n                  value: getCondition,\n                  onChange: (condition) =>\n                    setCondition(condition.toString()),\n                  onSubmitEditing: () => setFocus('category'),\n                },\n                rules: {\n                  required: {\n                    value: true,\n                    message: 'Condition is required',\n                  },\n                },\n                options: CONDITION_OPTIONS,\n              },\n              {\n                name: 'category',\n                type: 'select',\n                textInputProps: {\n                  label: 'Category',\n                  left: (\n                    <TextInput.Icon\n                      name={ICONS.PRODUCT_CATEGORY_ICON}\n                    />\n                  ),\n                  underlineColor: 'transparent',\n                  mode: 'outlined',\n                  returnKeyType: 'next',\n                  keyboardType: 'default',\n                  value: getCategory,\n                  onChange: (category) =>\n                    setCategory(category.toString()),\n                  onSubmitEditing: () =>\n                    handleSubmit(onSubmit, onError),\n                },\n                rules: {\n                  required: {\n                    value: true,\n                    message: 'Category is required',\n                  },\n                },\n                options: categoryOptions,\n              },\n              {\n                name: 'images',\n                type: 'custom',\n                JSX: () =>\n                  controlledFields.map((field, index) => {\n                    return (\n                      <View\n                        key={field.id}\n                        style={{\n                          display: 'flex',\n                          flexDirection: 'row',\n                        }}\n                      >\n                        <Image\n                          source={{ uri: field.uri }}\n                          style={{ width: 200, height: 200 }}\n                        />\n                        <TextInput\n                          key={field.id}\n                          style={{ display: 'none' }}\n                          underlineColor={'transparent'}\n                          mode=\"outlined\"\n                          value={field.uri}\n                          defaultValue={field.name}\n                          // ref={...register()}\n                          {...register(\n                            `images.${index}.name` as const\n                          )}\n                        />\n                        <Button\n                          mode={'outlined'}\n                          labelStyle={styles.text}\n                          style={[\n                            styles.button,\n                            {\n                              marginTop: 24,\n                              backgroundColor: theme.colors.surface,\n                            },\n                          ]}\n                          onPress={() => remove(index)}\n                        >\n                          Remove\n                        </Button>\n                      </View>\n                    );\n                  }),\n              },\n            ]}\n          />\n        </View>\n\n        <Button\n          mode={'outlined'}\n          labelStyle={styles.text}\n          style={[\n            styles.button,\n            { marginTop: 24, backgroundColor: theme.colors.surface },\n          ]}\n          onPress={Platform.OS === 'web' ? pickFiles : pickImage}\n        >\n          Upload Images\n        </Button>\n        {/* <View\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          {Platform.OS === 'web'\n            ? files &&\n              files.type === 'success' && (\n                <Image\n                  source={{ uri: files.uri }}\n                  style={{ width: 200, height: 200 }}\n                />\n              )\n            : images &&\n              images.map((image) => (\n                <Image\n                  source={{ uri: image.uri }}\n                  style={{ width: 200, height: 200 }}\n                />\n              ))}\n        </View> */}\n        <Button\n          mode={'contained'}\n          labelStyle={styles.text}\n          style={[styles.button, { marginTop: 24 }]}\n          onPress={handleSubmit(onSubmit, onError)}\n        >\n          Submit\n        </Button>\n        {errors.title && <Text>{errors.title.message}</Text>}\n      </React.Fragment>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollViewContent: {\n    flex: 1,\n    paddingHorizontal: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  centerText: {\n    textAlign: 'center',\n  },\n  button: {\n    width: '100%',\n    marginVertical: 10,\n    paddingVertical: 2,\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    lineHeight: 26,\n  },\n  container: {\n    width: '100%',\n    marginVertical: 12,\n  },\n});\n","import React, { ComponentType } from 'react';\nimport { FlatList, View, StyleSheet, Text } from 'react-native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { useTheme, ActivityIndicator } from 'react-native-paper';\nimport {\n  ProductStackNavigatorParamList,\n  ProductTypeParamList,\n} from '../../types';\nimport { useVendorData } from '../../context/vendor.context';\nimport { Product } from '../../components/products/product';\n\ntype ProductProps = ProductStackNavigatorParamList['ProductDetails'];\n\nfunction Separator() {\n  return <View style={{ height: StyleSheet.hairlineWidth }} />;\n}\n\ntype Props = {\n  navigation?: StackNavigationProp<ProductStackNavigatorParamList>;\n};\n\nexport const MyProductsScreen = (props: Props) => {\n  const theme = useTheme();\n  const { vendor, loading } = useVendorData();\n\n  return loading ? (\n    <ActivityIndicator />\n  ) : vendor && vendor.products.length < 1 ? (\n    <Text>You Haven't saved posted any products yet!</Text>\n  ) : (\n    <FlatList\n      contentContainerStyle={{\n        backgroundColor: theme.colors.background,\n      }}\n      style={{ backgroundColor: theme.colors.background }}\n      data={\n        vendor &&\n        vendor.products.map((productProps) => ({\n          ...productProps,\n          onPress: () =>\n            props.navigation &&\n            props.navigation.push('ProductDetails', {\n              ...productProps,\n            }),\n        }))\n      }\n      renderItem={({ item }: { item: ProductProps }) => (\n        <Product product={item} />\n      )}\n      keyExtractor={(item: ProductProps) => item.id.toString()}\n      ItemSeparatorComponent={Separator}\n    />\n  );\n};\n","import React, { ComponentType } from 'react';\nimport {\n  FlatList,\n  View,\n  StyleSheet,\n  Text,\n  VirtualizedList,\n} from 'react-native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { useTheme, ActivityIndicator } from 'react-native-paper';\nimport {\n  ProductStackNavigatorParamList,\n  ProductTypeParamList,\n} from '../../types';\nimport { useVendorData } from '../../context/vendor.context';\nimport { Product } from '../../components/products/product';\nimport { getVendorFavorites } from '../../services/get.service';\n\ntype ProductProps = ProductStackNavigatorParamList['ProductDetails'];\n\nfunction Separator() {\n  return <View style={{ height: StyleSheet.hairlineWidth }} />;\n}\n\ntype Props = {\n  navigation?: StackNavigationProp<ProductStackNavigatorParamList>;\n};\n\nexport const FavoriteProductsScreen = (props: Props) => {\n  const theme = useTheme();\n  const { vendor, loading } = useVendorData();\n\n  return loading ? (\n    <ActivityIndicator />\n  ) : vendor && vendor.favorites.length < 1 ? (\n    <Text style={{ color: theme.colors.text }}>\n      You Haven't saved any product favorites\n    </Text>\n  ) : (\n    <FlatList\n      contentContainerStyle={{\n        backgroundColor: theme.colors.background,\n      }}\n      style={{ backgroundColor: theme.colors.background }}\n      data={\n        vendor &&\n        vendor.favorites.map((productProps) => ({\n          ...productProps,\n          onPress: () =>\n            props.navigation &&\n            props.navigation.push('ProductDetails', {\n              ...productProps,\n            }),\n        }))\n      }\n      renderItem={({ item }: { item: ProductProps }) => (\n        <Product product={item} />\n      )}\n      keyExtractor={(item: ProductProps) => item.id.toString()}\n      ItemSeparatorComponent={Separator}\n    />\n  );\n};\n","import React from 'react';\nimport color from 'color';\n\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { useTheme, Portal, FAB } from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  useIsFocused,\n  RouteProp,\n  getFocusedRouteNameFromRoute,\n} from '@react-navigation/native';\n\nimport * as ROUTES from '../constants/routes.constants';\nimport * as ICONS from '../constants/icons.constants';\n\nimport { ProductScreen } from '../screens/products/productScreen';\nimport { FavoriteProductsScreen } from '../screens/vendor/favoritesScreen';\nimport { TransactionOrdersScreen } from '../screens/orders/ordersScreen';\n\nimport { AddProductScreen } from '../screens/vendor/newAddProductScreen';\nimport { MyProductsScreen } from '../screens/vendor/myProductsScreen';\n\nimport {\n  OrderTransactionStackParamList,\n  ProductStackNavigatorParamList,\n} from '../types';\n\nimport overlay from '../utils/overlay';\n\nimport { useAuth } from '../context/authorization.context';\n\nconst Tab = createMaterialBottomTabNavigator();\n\ntype OrderProps = {\n  route: RouteProp<OrderTransactionStackParamList, 'Order'>;\n};\ntype Props = {\n  route: RouteProp<ProductStackNavigatorParamList, 'Products'>;\n};\n\nexport const BottomTabs = (props: Props) => {\n  const routeName =\n    getFocusedRouteNameFromRoute(props.route) ?? 'Store';\n\n  const { state } = useAuth();\n\n  const theme = useTheme();\n  const safeArea = useSafeAreaInsets();\n  const isFocused = useIsFocused();\n\n  let icon = 'feather';\n\n  switch (routeName) {\n    case ROUTES.PRODUCTS_ROUTE:\n      icon = ICONS.PRODUCTS_ICON;\n      break;\n    case ROUTES.TRANSACTIONS_ROUTE:\n      icon = ICONS.TRANSACTIONS_ICON;\n      break;\n    case ROUTES.FAVORITES_ROUTE:\n      icon = ICONS.FAVORITES_ICON;\n      break;\n    case ROUTES.MY_PRODUCTS_ROUTE:\n      icon = ICONS.MY_PRODUCTS_ICON;\n      break;\n    case ROUTES.ADD_PRODUCT_ROUTE:\n      icon = ICONS.ADD_PRODUCT_ICON;\n      break;\n    default:\n      icon = 'feather';\n      break;\n  }\n\n  const tabBarColor = theme.dark\n    ? (overlay(6, theme.colors.surface) as string)\n    : theme.colors.surface;\n\n  React.useEffect(() => {\n    console.log('Bottom Tabs: route', props.route);\n  }, [props]);\n\n  React.useEffect(() => {\n    console.log('BottomTab Navigator', Tab);\n  }, []);\n\n  console.log('BottomTabs: tabBarColor', tabBarColor);\n\n  return (\n    <React.Fragment>\n      <React.Fragment>\n        <Tab.Navigator\n          initialRouteName=\"Store\"\n          backBehavior=\"initialRoute\"\n          shifting={true}\n          activeColor={theme.colors.primary}\n          inactiveColor={color(theme.colors.text)\n            .alpha(0.6)\n            .rgb()\n            .string()}\n          sceneAnimationEnabled={false}\n          barStyle={{\n            backgroundColor: theme.dark\n              ? (overlay(6, theme.colors.surface) as string)\n              : theme.colors.surface,\n          }}\n        >\n          <Tab.Screen\n            name={ROUTES.PRODUCTS_ROUTE}\n            component={ProductScreen}\n            options={{\n              tabBarIcon: ICONS.PRODUCTS_ICON,\n              tabBarColor,\n            }}\n          />\n          <Tab.Screen\n            name={ROUTES.TRANSACTIONS_ROUTE}\n            component={TransactionOrdersScreen}\n            options={{\n              tabBarIcon: ICONS.TRANSACTIONS_ICON,\n              tabBarColor,\n            }}\n          />\n          <Tab.Screen\n            name={ROUTES.FAVORITES_ROUTE}\n            component={FavoriteProductsScreen}\n            options={{\n              tabBarIcon: ICONS.FAVORITES_ICON,\n              tabBarColor,\n            }}\n          />\n          <Tab.Screen\n            name={ROUTES.MY_PRODUCTS_ROUTE}\n            component={MyProductsScreen}\n            options={{\n              tabBarIcon: ICONS.MY_PRODUCTS_ICON,\n              tabBarColor,\n            }}\n          />\n          <Tab.Screen\n            name={ROUTES.ADD_PRODUCT_ROUTE}\n            component={AddProductScreen}\n            options={{\n              tabBarIcon: ICONS.ADD_PRODUCT_ICON,\n              tabBarColor,\n            }}\n          />\n        </Tab.Navigator>\n        <Portal>\n          <FAB\n            visible={isFocused}\n            icon={icon}\n            style={{\n              position: 'absolute',\n              bottom: safeArea.bottom + 65,\n              right: 16,\n            }}\n            color=\"white\"\n            theme={{\n              colors: {\n                accent: theme.colors.primary,\n              },\n            }}\n            onPress={() => {}}\n          />\n        </Portal>\n      </React.Fragment>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { DrawerNavigationProp } from '@react-navigation/drawer';\nimport {\n  getFocusedRouteNameFromRoute,\n  RouteProp,\n} from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  StackNavigationOptions,\n} from '@react-navigation/stack';\n\nimport { TouchableOpacity, useWindowDimensions } from 'react-native';\nimport { Appbar, Avatar, useTheme } from 'react-native-paper';\n\nimport * as ROUTES from '../constants/routes.constants';\n\nimport { useVendorIcon } from '../hooks/useVendorIcon';\nimport { ProductDetailScreen } from '../screens/products/productDetailScreen';\nimport { MakeOfferScreen } from '../screens/products/newMakeOfferScreen';\nimport { MakePurchaseScreen } from '../screens/products/makePurchaseScreen';\nimport { UpdateProductScreen } from '../screens/products/updateProductScreen';\nimport { ProductStackNavigatorParamList } from '../types';\nimport { BottomTabs } from './bottomTabNavigator';\n\nconst Stack = createStackNavigator<ProductStackNavigatorParamList>();\n\nexport const StackNavigator = () => {\n  const theme = useTheme();\n\n  const { vendorInitials, vendorIcon } = useVendorIcon();\n\n  const dimensions = useWindowDimensions();\n\n  const isLargeScreen = dimensions.width >= 768;\n\n  const handleSearch = () => console.log('Searching');\n\n  React.useEffect(() => {\n    console.log('ProductStackNavigator', Stack);\n  }, []);\n\n  return (\n    <Stack.Navigator\n      initialRouteName=\"Products\"\n      screenOptions={{\n        animationEnabled: true,\n\n        header: ({ navigation, route, options, back }) => {\n          const title =\n            options.headerTitle !== undefined\n              ? options.headerTitle\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          return (\n            <Appbar.Header\n              theme={{ colors: { primary: theme.colors.surface } }}\n            >\n              {back ? (\n                <Appbar.BackAction\n                  onPress={navigation.goBack}\n                  color={theme.colors.primary}\n                />\n              ) : (\n                <TouchableOpacity\n                  style={{ marginLeft: 10 }}\n                  onPress={() => {\n                    (\n                      navigation as any as DrawerNavigationProp<{}>\n                    ).openDrawer();\n                  }}\n                >\n                  {vendorIcon ? (\n                    <Avatar.Image\n                      size={40}\n                      source={{\n                        uri: vendorIcon,\n                      }}\n                    />\n                  ) : vendorInitials ? (\n                    <Avatar.Text size={40} label={vendorInitials} />\n                  ) : (\n                    <Avatar.Icon size={40} icon=\"account\" />\n                  )}\n                </TouchableOpacity>\n              )}\n              <Appbar.Content\n                title={\n                  title === 'Store' ? (\n                    <MaterialCommunityIcons\n                      style={{ marginRight: 10 }}\n                      name=\"package-variant-closed\"\n                      size={40}\n                      color={theme.colors.primary}\n                    />\n                  ) : (\n                    title\n                  )\n                }\n                titleStyle={{\n                  fontSize: 18,\n                  fontWeight: 'bold',\n                  color: theme.colors.primary,\n                }}\n              />\n              <Appbar.Action\n                icon={() => (\n                  <MaterialCommunityIcons\n                    name=\"magnify\"\n                    size={30}\n                    color={theme.colors.primary}\n                  />\n                )}\n                onPress={handleSearch}\n              />\n            </Appbar.Header>\n          );\n        },\n      }}\n    >\n      <Stack.Screen\n        name=\"Products\"\n        component={BottomTabs}\n        options={({ route }) => {\n          const routeName =\n            getFocusedRouteNameFromRoute(route) ?? 'Store';\n          return { headerTitle: routeName };\n        }}\n      />\n      <Stack.Screen\n        name={ROUTES.PRODUCT_DETAILS_ROUTE}\n        component={ProductDetailScreen}\n        options={{ headerTitle: 'Product Details' }}\n      />\n      <Stack.Screen\n        name={ROUTES.MAKE_OFFER_ROUTE}\n        component={MakeOfferScreen}\n        options={{ headerTitle: 'Make Offer' }}\n      />\n      <Stack.Screen\n        name={ROUTES.MAKE_PURCHASE_ROUTE}\n        component={MakePurchaseScreen}\n        options={{ headerTitle: 'Make Purchase' }}\n      />\n      <Stack.Screen\n        name={ROUTES.UPDATE_PRODUCT_ROUTE}\n        component={UpdateProductScreen}\n        options={{ headerTitle: 'Update Product' }}\n      />\n    </Stack.Navigator>\n  );\n};\n","import React from 'react';\n\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport color from 'color';\n\nimport {\n  DrawerContentComponentProps,\n  DrawerContentScrollView,\n  DrawerItem,\n  useDrawerProgress,\n} from '@react-navigation/drawer';\n\nimport {\n  DrawerActions,\n  StackActions,\n} from '@react-navigation/native';\n\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  useWindowDimensions,\n  ScrollViewProps,\n  View,\n} from 'react-native';\n\nimport {\n  Avatar,\n  Caption,\n  Drawer,\n  Paragraph,\n  Switch,\n  Text,\n  Title,\n  TouchableRipple,\n  useTheme,\n  Button,\n} from 'react-native-paper';\nimport Animated from 'react-native-reanimated';\n\nimport * as ICONS from '../../constants/icons.constants';\nimport * as ROUTES from '../../constants/routes.constants';\n\nimport { usePreference } from '../../context/preferences.context';\nimport { useVendorData } from '../../context/vendor.context';\nimport { useVendorIcon } from '../../hooks/useVendorIcon';\nimport { useAuth } from '../../context/authorization.context';\n\ntype Props = DrawerContentComponentProps;\n\nexport function DrawerContent(props: Props) {\n  const { vendor } = useVendorData();\n  const { signOut, isSignedOut } = useAuth();\n  const { vendorIcon, vendorInitials } = useVendorIcon();\n\n  const paperTheme = useTheme();\n  const { rtl, theme, isThemeDark, toggleRTL, toggleTheme } =\n    usePreference();\n\n  const dimensions = useWindowDimensions();\n\n  const isLargeScreen = dimensions.width >= 768;\n\n  const progress = useDrawerProgress();\n\n  const translateX = Animated.interpolateNode(\n    // @ts-ignore\n    progress,\n    {\n      inputRange: [0, 0.5, 0.7, 0.8, 1],\n      outputRange: [-100, -85, -70, -45, 0],\n    }\n  );\n\n  const { state } = props;\n  const { routes, index } = state;\n  const focusedRoute = routes[index].name;\n\n  const activeColor = theme.colors.primary;\n\n  const inactiveColor = color(theme.colors.text)\n    .alpha(0.6)\n    .rgb()\n    .string();\n\n  console.log('Drawer: state focused route', focusedRoute);\n  console.log('Drawer: state', props.state);\n  console.log('Drawer: state routes', props.state.routes);\n  console.log('Drawer: state routenames', props.state.routeNames);\n  console.log('Drawer: navigation', props.navigation);\n\n  function getCurrentRouteName() {\n    let routes = props.state.routeNames;\n\n    console.log('DrawerContent: routes', routes);\n\n    let route = routes[routes.length - 1];\n    console.log('DrawerContent: route', route);\n    if (route.length > 0) {\n      console.log(\n        'DrawerContent: route.length > 0',\n        route.length > 0\n      );\n      console.log(\n        'DrawerContent: return rout[route.length - 1]',\n        route[route.length - 1]\n      );\n      return route[route.length - 1];\n    }\n    return null;\n  }\n\n  const navigationWithPush = (\n    routeName: string,\n    params?: object | undefined\n  ) => {\n    let currentRoute;\n\n    /**\n     **  get route of current screen from the navigation props\n     **/\n    if (\n      Object.keys(props.state).length > 0 &&\n      props.state.routes != undefined\n    ) {\n      console.log(\n        'DrawerContent: navigationWithPush: if props.state.length > 0'\n      );\n      currentRoute = getCurrentRouteName();\n      console.log(\n        'DrawerContent: navigationWithPush: currentRoute = getCurrentRouteName',\n        currentRoute\n      );\n      console.log(\n        'DrawerContent: navigationWithPush: value of getCurrentRouteName',\n        getCurrentRouteName()\n      );\n    }\n\n    /**\n     ** if current route is the routeName itself then just close the drawer, else\n     ** push routeName to navigation state by dispatching the StackActions\n     **/\n\n    if (currentRoute === routeName) {\n      console.log(\n        'DrawerContent: navigationWithPush: currentRoute === routeName'\n      );\n      console.log(\n        'DrawerContent: navigationWithPush: currentroute:',\n        currentRoute\n      );\n      console.log(\n        'DrawerContent: navigationWithPush: routeName',\n        routeName\n      );\n      props.navigation.dispatch(DrawerActions.closeDrawer());\n    } else {\n      console.log(\n        'DrawerContent: navigationWithPush: currentRoute is not equal to routeName'\n      );\n      console.log(\n        'DrawerContent: navigationWithPush: currentroute:',\n        currentRoute\n      );\n      console.log(\n        'DrawerContent: navigationWithPush: routeName',\n        routeName\n      );\n      const pushAction = StackActions.push(routeName, params);\n      props.navigation.closeDrawer();\n      props.navigation.dispatch(pushAction);\n    }\n  };\n\n  return (\n    <DrawerContentScrollView {...props}>\n      <Animated.View\n        //@ts-ignore\n        style={[\n          styles.drawerContent,\n          {\n            backgroundColor: paperTheme.colors.surface,\n            transform: [{ translateX }],\n          },\n        ]}\n      >\n        <View style={styles.userInfoSection}>\n          <TouchableOpacity\n            style={{ marginLeft: 10 }}\n            onPress={() => {\n              props.navigation.toggleDrawer();\n            }}\n          >\n            {vendorIcon ? (\n              <Avatar.Image\n                size={40}\n                style={{ marginRight: 10 }}\n                source={{\n                  uri: vendorIcon,\n                }}\n              />\n            ) : vendorInitials ? (\n              <Avatar.Text size={50} label={vendorInitials} />\n            ) : (\n              <Avatar.Icon size={50} icon=\"account\" />\n            )}\n          </TouchableOpacity>\n          <Title style={styles.title}>\n            {vendor?.name ? vendor.name : 'Dawid'}\n          </Title>\n          <Caption style={styles.caption}>\n            {vendor?.online ? 'Online' : 'Offline'}\n          </Caption>\n          <View style={styles.row}>\n            <View style={styles.section}>\n              <Paragraph style={[styles.paragraph, styles.caption]}>\n                {vendor?.product_count || 'failed to fetch'}\n              </Paragraph>\n              <Caption style={styles.caption}>Products</Caption>\n            </View>\n            <View style={styles.section}>\n              <Paragraph style={[styles.paragraph, styles.caption]}>\n                {vendor?.order_count || 'failed to fetch'}\n              </Paragraph>\n              <Caption style={styles.caption}>Transactions</Caption>\n            </View>\n          </View>\n        </View>\n        <Drawer.Section style={styles.drawerSection}>\n          <DrawerItem\n            icon={({ color, size }) => (\n              <MaterialCommunityIcons\n                name={ICONS.MY_PRODUCTS_ICON}\n                color={\n                  focusedRoute === ROUTES.MY_PRODUCTS_ROUTE\n                    ? activeColor\n                    : inactiveColor\n                }\n                size={size}\n              />\n            )}\n            label=\"My Products\"\n            onPress={() => {\n              isLargeScreen\n                ? props.navigation.navigate(ROUTES.MY_PRODUCTS_ROUTE)\n                : navigationWithPush('Products', {\n                    screen: ROUTES.MY_PRODUCTS_ROUTE,\n                  });\n            }}\n          />\n          <DrawerItem\n            activeTintColor={activeColor}\n            inactiveTintColor={inactiveColor}\n            icon={({ color, focused, size }) => (\n              <MaterialCommunityIcons\n                name={ICONS.TRANSACTIONS_ICON}\n                color={\n                  focusedRoute === ROUTES.TRANSACTIONS_ROUTE\n                    ? activeColor\n                    : inactiveColor\n                }\n                size={size}\n              />\n            )}\n            label=\"Transactions\"\n            onPress={() => {\n              console.log('Drawer: pushed Transactions');\n              isLargeScreen\n                ? props.navigation.navigate(ROUTES.TRANSACTIONS_ROUTE)\n                : navigationWithPush('Products', {\n                    screen: ROUTES.TRANSACTIONS_ROUTE,\n                  });\n            }}\n          />\n          <DrawerItem\n            activeTintColor={activeColor}\n            inactiveTintColor={inactiveColor}\n            icon={({ color, size }) => (\n              <MaterialCommunityIcons\n                name={ICONS.FAVORITES_ICON}\n                color={\n                  focusedRoute === ROUTES.FAVORITES_ROUTE\n                    ? activeColor\n                    : inactiveColor\n                }\n                size={size}\n              />\n            )}\n            label=\"Favorites\"\n            onPress={() => {\n              console.log('Drawer: pushed Favorites');\n              isLargeScreen\n                ? props.navigation.navigate(ROUTES.FAVORITES_ROUTE)\n                : navigationWithPush('Products', {\n                    screen: ROUTES.FAVORITES_ROUTE,\n                  });\n            }}\n          />\n          <DrawerItem\n            activeTintColor={activeColor}\n            inactiveTintColor={inactiveColor}\n            icon={({ color, size }) => (\n              <MaterialCommunityIcons\n                name={ICONS.PRODUCTS_ICON}\n                color={\n                  focusedRoute === ROUTES.PRODUCTS_ROUTE\n                    ? activeColor\n                    : inactiveColor\n                }\n                size={size}\n              />\n            )}\n            label=\"All Products\"\n            onPress={() => {\n              console.log('Drawer: pushed All Products');\n              isLargeScreen\n                ? props.navigation.navigate(ROUTES.PRODUCTS_ROUTE)\n                : navigationWithPush('Products');\n            }}\n          />\n          <DrawerItem\n            activeTintColor={activeColor}\n            inactiveTintColor={inactiveColor}\n            icon={({ color, size }) => (\n              <MaterialCommunityIcons\n                name={ICONS.ADD_PRODUCT_ICON}\n                color={\n                  focusedRoute === ROUTES.ADD_PRODUCT_ROUTE\n                    ? activeColor\n                    : inactiveColor\n                }\n                size={size}\n              />\n            )}\n            label=\"Add Product\"\n            onPress={() => {\n              console.log('Drawer: pushed Add Product');\n              isLargeScreen\n                ? props.navigation.navigate(ROUTES.ADD_PRODUCT_ROUTE)\n                : navigationWithPush('Products', {\n                    screen: ROUTES.ADD_PRODUCT_ROUTE,\n                  });\n            }}\n          />\n        </Drawer.Section>\n        <Drawer.Section title=\"Preferences\">\n          <TouchableRipple onPress={toggleTheme}>\n            <View style={styles.preference}>\n              <Text>Dark Theme</Text>\n              <View pointerEvents=\"none\">\n                <Switch value={theme.dark} />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={toggleRTL}>\n            <View style={styles.preference}>\n              <Text>RTL</Text>\n              <View pointerEvents=\"none\">\n                <Switch value={rtl === 'right'} />\n              </View>\n            </View>\n          </TouchableRipple>\n        </Drawer.Section>\n        <Drawer.Section title=\"Account\">\n          <TouchableRipple onPress={() => signOut()}>\n            <View style={styles.preference}>\n              <Text>Sign Out</Text>\n              <View pointerEvents=\"none\">\n                <Switch value={isSignedOut === false} />\n              </View>\n            </View>\n          </TouchableRipple>\n        </Drawer.Section>\n      </Animated.View>\n    </DrawerContentScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  drawerContent: {\n    flex: 1,\n  },\n  userInfoSection: {\n    paddingLeft: 20,\n  },\n  title: {\n    marginTop: 20,\n    fontWeight: 'bold',\n  },\n  caption: {\n    fontSize: 14,\n    lineHeight: 14,\n  },\n  row: {\n    marginTop: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  section: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 15,\n  },\n  paragraph: {\n    fontWeight: 'bold',\n    marginRight: 3,\n  },\n  drawerSection: {\n    marginTop: 15,\n  },\n  preference: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n  },\n});\n","import React from 'react';\nimport { useWindowDimensions, ScrollView } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { useTheme, Button, Appbar } from 'react-native-paper';\n\nimport { ProductScreen } from '../screens/products/productScreen';\nimport { ProductDetailScreen } from '../screens/products/productDetailScreen';\nimport { MakeOfferScreen } from '../screens/products/newMakeOfferScreen';\nimport { MakePurchaseScreen } from '../screens/products/makePurchaseScreen';\nimport { UpdateProductScreen } from '../screens/products/updateProductScreen';\n\nimport { TransactionOrdersScreen } from '../screens/orders/ordersScreen';\nimport { AddProductScreen } from '../screens/vendor/newAddProductScreen';\nimport { MyProductsScreen } from '../screens/vendor/myProductsScreen';\nimport { FavoriteProductsScreen } from '../screens/vendor/favoritesScreen';\n\nimport * as ICONS from '../constants/icons.constants';\nimport * as ROUTES from '../constants/routes.constants';\n\nimport { StackNavigator } from './productStackNavigator';\n\nimport { DrawerContent } from '../screens/vendor/drawerContent';\n\nimport { DrawerStackParamList } from '../types';\n\nconst Drawer = createDrawerNavigator<DrawerStackParamList>();\n\nexport const DrawerNavigator = () => {\n  const theme = useTheme();\n\n  // const translateX = Animated.interpolateNode(props.progress, {\n  //   inputRange: [0, 0.5, 0.7, 0.8, 1],\n  //   outputRange: [-100, -85, -70, -45, 0],\n  // });\n  const dimensions = useWindowDimensions();\n\n  const isLargeScreen = dimensions.width >= 768;\n\n  return (\n    <Drawer.Navigator\n      // useLegacyImplementation={true}\n      // drawerType={isLargeScreen ? 'permanent' : 'front'}\n\n      screenOptions={{\n        headerShown: isLargeScreen,\n        drawerType: isLargeScreen ? 'permanent' : 'front',\n        sceneContainerStyle: {},\n        // drawerLabel: ({ focused, color }) => (\n\n        // )\n        drawerLabelStyle: { fontFamily: 'space-mono' },\n        // labelStyle: {}\n        // drawerStyle: isLargeScreen ? null : { width: '100%' },\n        // overlayColor: theme.colors.background,\n        header: ({ navigation, route, options }) => {\n          const title =\n            options.headerTitle !== undefined\n              ? options.headerTitle\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n          return (\n            <Appbar.Header\n              theme={{ colors: { primary: theme.colors.surface } }}\n            >\n              {route.name !== title ? (\n                <Appbar.BackAction\n                  onPress={navigation.goBack}\n                  color={theme.colors.primary}\n                />\n              ) : (\n                'Hello'\n              )}\n              <Appbar.Content\n                title={\n                  title === 'Store' ? (\n                    <MaterialCommunityIcons\n                      style={{ marginRight: 10 }}\n                      name=\"package-variant-closed\"\n                      size={40}\n                      color={theme.colors.primary}\n                    />\n                  ) : (\n                    title\n                  )\n                }\n                titleStyle={{\n                  fontSize: 18,\n                  fontWeight: 'bold',\n                  color: theme.colors.primary,\n                }}\n              />\n              <Appbar.Action\n                icon={() => (\n                  <MaterialCommunityIcons\n                    name=\"magnify\"\n                    size={30}\n                    color={theme.colors.primary}\n                  />\n                )}\n                onPress={() => {}}\n              />\n            </Appbar.Header>\n          );\n        },\n      }}\n      drawerContent={(props) => <DrawerContent {...props} />}\n    >\n      {isLargeScreen ? (\n        <React.Fragment>\n          <Drawer.Screen\n            name={ROUTES.PRODUCTS_ROUTE}\n            component={ProductScreen}\n            options={{\n              headerTitle: 'Product',\n              drawerIcon: () => (\n                <MaterialCommunityIcons\n                  name={ICONS.PRODUCTS_ICON}\n                  size={40}\n                  color={theme.colors.primary}\n                />\n              ),\n            }}\n          />\n          <Drawer.Screen\n            name={ROUTES.PRODUCT_DETAILS_ROUTE}\n            component={(props) => (\n              <ScrollView>\n                <ProductDetailScreen {...props} />\n              </ScrollView>\n            )}\n            options={{\n              headerTitle: 'Product Details',\n              drawerIcon: () => (\n                <MaterialCommunityIcons\n                  name={ICONS.PRODUCT_DETAILS_ICON}\n                  size={40}\n                  color={theme.colors.primary}\n                />\n              ),\n            }}\n          />\n          <Drawer.Screen\n            name={ROUTES.MAKE_OFFER_ROUTE}\n            component={MakeOfferScreen}\n            options={{\n              headerTitle: 'Make Offer',\n              drawerIcon: () => (\n                <MaterialCommunityIcons\n                  name={ICONS.MAKE_OFFER_ICON}\n                  size={40}\n                  color={theme.colors.primary}\n                />\n              ),\n            }}\n          />\n          <Drawer.Screen\n            name={ROUTES.MAKE_PURCHASE_ROUTE}\n            component={MakePurchaseScreen}\n            options={{\n              headerTitle: 'Make Purchase',\n              drawerIcon: () => (\n                <MaterialCommunityIcons\n                  name={ICONS.MAKE_PURCHASE_ICON}\n                  size={40}\n                  color={theme.colors.primary}\n                />\n              ),\n            }}\n          />\n          <Drawer.Screen\n            name={ROUTES.UPDATE_PRODUCT_ROUTE}\n            component={UpdateProductScreen}\n            options={{\n              headerTitle: 'Update Product',\n              drawerIcon: () => (\n                <MaterialCommunityIcons\n                  name={ICONS.UPDATE_PRODUCT_ICON}\n                  size={40}\n                  color={theme.colors.primary}\n                />\n              ),\n            }}\n          />\n          <Drawer.Screen\n            name={ROUTES.TRANSACTIONS_ROUTE}\n            component={TransactionOrdersScreen}\n            options={{\n              headerTitle: 'Transactions',\n              drawerIcon: () => (\n                <MaterialCommunityIcons\n                  name={ICONS.TRANSACTIONS_ICON}\n                  size={40}\n                  color={theme.colors.primary}\n                />\n              ),\n            }}\n          />\n          <Drawer.Screen\n            name={ROUTES.FAVORITES_ROUTE}\n            component={FavoriteProductsScreen}\n            options={{\n              headerTitle: 'Favorites',\n              drawerIcon: () => (\n                <MaterialCommunityIcons\n                  name={ICONS.FAVORITES_ICON}\n                  size={40}\n                  color={theme.colors.primary}\n                />\n              ),\n            }}\n          />\n          <Drawer.Screen\n            name={ROUTES.MY_PRODUCTS_ROUTE}\n            component={MyProductsScreen}\n            options={{\n              headerTitle: 'My Products',\n              drawerIcon: () => (\n                <MaterialCommunityIcons\n                  name={ICONS.MY_PRODUCTS_ICON}\n                  size={40}\n                  color={theme.colors.primary}\n                />\n              ),\n            }}\n          />\n          <Drawer.Screen\n            name={ROUTES.ADD_PRODUCT_ROUTE}\n            component={AddProductScreen}\n            options={{\n              headerTitle: 'Add Product',\n              drawerIcon: () => (\n                <MaterialCommunityIcons\n                  name={ICONS.ADD_PRODUCT_ICON}\n                  size={40}\n                  color={theme.colors.primary}\n                />\n              ),\n            }}\n          />\n        </React.Fragment>\n      ) : (\n        <Drawer.Screen name=\"Home\" component={StackNavigator} />\n      )}\n    </Drawer.Navigator>\n  );\n};\n","import { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as Linking from 'expo-linking';\nimport React from 'react';\nimport { useTheme } from 'react-native-paper';\n\nimport {\n  CombinedDarkTheme,\n  CombinedDefaultTheme,\n} from '../components/common/theme';\nimport {\n  AuthStateInterface,\n  useAuth,\n} from '../context/authorization.context';\nimport { stateConditionString } from '../context/authUtils';\nimport UserProvider from '../context/user.context';\nimport {\n  Dashboard,\n  LoginScreen,\n  RegisterScreen,\n  ResetPasswordScreen,\n  StartScreen,\n} from '../screens/account';\n\nimport { ProductDetailScreen } from '../screens/products/productDetailScreen';\nimport { DrawerContent } from '../screens/vendor/drawerContent';\nimport { AuthStackNavigationParamList } from '../types';\nimport { AccountStackNavigator } from './accountStackNavigator';\nimport { DrawerNavigator } from './drawerNavigator';\nimport { StackNavigator } from './productStackNavigator';\n\nexport const CoreNavigator = () => {\n  const { state } = useAuth();\n  const {\n    isLoading,\n    isSignedIn,\n    accessToken,\n    noAccount,\n    isSignedUp,\n  } = useAuth();\n\n  console.log('Core: isSignedIn', isSignedIn);\n  console.log('Core: isLoading', isLoading);\n  console.log('Core: accessToken', accessToken);\n  console.log('Core: noAccount', noAccount);\n  console.log('Core: isSignedUp', isSignedUp);\n\n  // React.useEffect(() => {\n  //   if (isLoading) {\n  //     navigation.replace('Dashboard');\n  //   }\n  //   if (isSignedIn && accessToken && isSignedUp) {\n  //     console.log('isSignedIn and accessToken and isSignedUp');\n  //     navigation.replace('LoginScreen');\n  //   }\n  //   if (!isSignedUp && noAccount) {\n  //     console.log('not isSignedUp and noAccount');\n  //     navigation.replace('RegisterScreen');\n  //   }\n  //   if (!isSignedIn && !noAccount) {\n  //     console.log('not isSignedIn and not noAccount');\n  //     navigation.replace('LoginScreen');\n  //   }\n  // }, [isSignedIn, accessToken, isSignedUp, noAccount, isLoading]);\n\n  // const chooseScreen = (state: AuthStateInterface) => {\n  //   let navigateTo = stateConditionString(state);\n  //   let arr = [];\n\n  //   switch (navigateTo) {\n  //     case 'LOAD_APP':\n  //       arr.push(\n  //         <RootStack.Screen\n  //           name=\"SplashScreen\"\n  //           component={StartScreen}\n  //         />\n  //       );\n  //       break;\n\n  //     case 'LOAD_SIGNUP':\n  //       arr.push(\n  //         <RootStack.Screen\n  //           name=\"SignUpScreen\"\n  //           component={RegisterScreen}\n  //           options={{\n  //             title: 'Sign Up',\n  //             animationTypeForReplace: state.isSignedOut\n  //               ? 'pop'\n  //               : 'push',\n  //           }}\n  //         />\n  //       );\n  //       break;\n  //     case 'LOAD_SIGNIN':\n  //       arr.push(\n  //         <RootStack.Screen name=\"SignInScreen\" component={SignIn} />\n  //       );\n  //       break;\n\n  //     case 'LOAD_HOME':\n  //       arr.push(\n  //         <RootStack.Screen\n  //           name=\"HomeScreen\"\n  //           component={DrawerNavigator}\n  //         />\n  //       );\n  //       break;\n  //     default:\n  //       arr.push(\n  //         <RootStack.Screen name=\"SignInScreen\" component={SignIn} />\n  //       );\n  //       break;\n  //   }\n  //   return arr[0];\n  // };\n\n  return (\n    <>\n      <>\n        <>\n          {state.isSignedIn ? (\n            <DrawerNavigator />\n          ) : (\n            <AccountStackNavigator />\n          )}\n        </>\n      </>\n      {/* <RootStack.Navigator>\n          {chooseScreen(state)}\n        </RootStack.Navigator> */}\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport * as React from \"react\";\n\nimport * as Navigator from \"../navigation/rootNavigator\";\nimport { Toast } from \"../components/common/toast\";\nimport { useToast, IToastProps } from \"native-base\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useLinkTo } from \"@react-navigation/native\";\nimport { StackNavigationProp, StackScreenProps } from \"@react-navigation/stack\";\nimport { AuthResponseType } from \"../types\";\nimport { localStorage } from \"../utils/storage\";\nimport { nativeStorage } from \"../utils/nativeStorage\";\nimport {\n  signInRequest,\n  signUpRequest,\n  signOutRequest,\n} from \"../services/auth.service\";\n\nimport { deleteRequest } from \"../services/crud.service\";\nimport { useVendorData, VendorActionTypes } from \"./vendor.context\";\nimport { useAuth, AccountActionTypes } from \"./auth.context\";\n\n/**\n * Top-most Context provider for all user authentication: form values, auth errors etc.\n *\n */\n\nexport type UserContent = {\n  userId: number | string;\n  setUserId: React.Dispatch<React.SetStateAction<number | string>>;\n  username: string;\n  setUsername: React.Dispatch<React.SetStateAction<string>>;\n  email: string;\n  setEmail: React.Dispatch<React.SetStateAction<string>>;\n\n  loading: boolean;\n  setLoading?: React.Dispatch<React.SetStateAction<boolean>>;\n  password: string;\n  setPassword: React.Dispatch<React.SetStateAction<string>>;\n  heading: string;\n  setHeading: React.Dispatch<React.SetStateAction<string>>;\n  alert: boolean;\n  setAlert: React.Dispatch<React.SetStateAction<boolean>>;\n  returning: boolean;\n  setReturning: React.Dispatch<React.SetStateAction<boolean>>;\n  handleSignIn: (\n    e: React.BaseSyntheticEvent<React.FunctionComponent>\n  ) => Promise<void>;\n  handleSignOut: (\n    e: React.BaseSyntheticEvent<React.FunctionComponent>\n  ) => Promise<void>;\n  handleDelete: (\n    e: React.BaseSyntheticEvent<React.FunctionComponent>\n  ) => Promise<void>;\n};\n\nexport const UserContext = React.createContext<UserContent>(undefined!);\n\nexport default function UserProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const { dispatch: vendorDispatch, setVendorId } = useVendorData();\n  // const { dispatch: authDispatch, state, actions } = useAuth();\n\n  const [userId, setUserId] = React.useState<number | string>(0);\n  const [username, setUsername] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n\n  const [loading, setLoading] = React.useState(false);\n\n  const [password, setPassword] = React.useState(\"\");\n  const [heading, setHeading] = React.useState(\"\");\n  const [alert, setAlert] = React.useState(false);\n  const [returning, setReturning] = React.useState(true);\n\n  const [openSuccess, setOpenSuccess] = React.useState(false);\n  const [openWarning, setOpenWarning] = React.useState(false);\n  const [openError, setOpenError] = React.useState(false);\n\n  const [message, setMessage] = React.useState<string | any>(\"\");\n  const onSuccess = (text: string | any) => {\n    setMessage(text);\n    setOpenSuccess(true);\n    setTimeout(() => {\n      setOpenSuccess(false);\n      setMessage(\"\");\n    }, 1750);\n  };\n  const onWarning = (text: string | any) => {\n    setMessage(text);\n    setOpenWarning(true);\n    setTimeout(() => {\n      setOpenWarning(false);\n      setMessage(\"\");\n    }, 1750);\n  };\n  const onError = (text: string | any) => {\n    setMessage(text);\n    setOpenError(true);\n    setTimeout(() => {\n      setOpenError(false);\n      setMessage(\"\");\n    }, 1750);\n  };\n\n  const handleSignIn = async (\n    e: React.BaseSyntheticEvent<React.FunctionComponent>\n  ) => {\n    // authDispatch({\n    //   type: AccountActionTypes.fetchAccount,\n    // });\n    vendorDispatch({ type: VendorActionTypes.fetchVendor });\n\n    if (!returning) {\n      try {\n        await signUpRequest({\n          body: {\n            username,\n            email,\n            password,\n          },\n        }).then((response) => {\n          if (response.ok) {\n            response.json().then((data: AuthResponseType) => {\n              if (data.access) {\n                setEmail(\"\");\n                setPassword(\"\");\n\n                setUsername(data.user.name);\n                setUserId(data.user.id);\n\n                setVendorId(data.user.id.toString());\n\n                // authDispatch({\n                //   type: AccountActionTypes.fetchAccountSignUp,\n                //   accessToken: data.access,\n                // });\n\n                // actions.register(data.access);\n\n                vendorDispatch({\n                  type: VendorActionTypes.fetchVendorSuccess,\n                  vendor: data.user,\n                });\n\n                setTimeout(() => {\n                  onSuccess(\"Account Created\");\n                }, 750);\n                setTimeout(() => {\n                  setLoading(false);\n                }, 1500);\n              }\n            });\n          } else {\n            response.json().then((data) => {\n              if (data.message) {\n                setLoading(false);\n\n                // authDispatch({\n                //   type: AccountActionTypes.fetchAccountTokenFailure,\n                //   accessToken: null,\n                // });\n                // actions.blacklist();\n\n                vendorDispatch({ type: VendorActionTypes.fetchVendorFailure });\n\n                onWarning(data.message);\n              }\n            });\n          }\n        });\n      } catch (err: any) {\n        setLoading(false);\n\n        // authDispatch({\n        //   type: AccountActionTypes.fetchAccountTokenFailure,\n        //   accessToken: null,\n        // });\n        // actions.blacklist();\n\n        vendorDispatch({ type: VendorActionTypes.fetchVendorFailure });\n\n        console.log(err?.message || \"Something went wrong.\");\n      }\n    } else {\n      try {\n        await signInRequest({\n          body: {\n            username,\n            password,\n          },\n        }).then((response) => {\n          if (response.ok) {\n            response.json().then((data: AuthResponseType) => {\n              if (data.access) {\n                setUsername(\"\");\n\n                setPassword(\"\");\n\n                setUsername(data.user.name);\n                setUserId(data.user.id);\n\n                // actions.register(data.access);\n\n                // authDispatch({\n                //   type: AccountActionTypes.fetchAccountSignIn,\n                //   accessToken: data.access,\n                // });\n\n                vendorDispatch({\n                  type: VendorActionTypes.fetchVendorSuccess,\n                  vendor: data.user,\n                });\n\n                setTimeout(() => {\n                  onSuccess(`Welcome Back, ${data.user.name}`);\n                }, 750);\n                setTimeout(() => {\n                  setLoading(false);\n                  // navigation.navigate(\"Home\");\n                }, 1500);\n              } else {\n                setLoading(false);\n\n                // authDispatch({\n                //   type: AccountActionTypes.fetchAccountTokenFailure,\n                //   accessToken: null,\n                // });\n\n                // actions.blacklist();\n\n                vendorDispatch({ type: VendorActionTypes.fetchVendorFailure });\n\n                console.log(\"Access Failed\");\n              }\n            });\n          } else {\n            response.json().then((data) => {\n              if (data.message) {\n                setLoading(false);\n\n                // authDispatch({\n                //   type: AccountActionTypes.fetchAccountTokenFailure,\n                // });\n                // actions.blacklist();\n\n                vendorDispatch({\n                  type: VendorActionTypes.fetchVendorFailure,\n                  error: data.message,\n                });\n\n                console.log(\"Request failed\");\n              }\n            });\n          }\n        });\n      } catch (err: any) {\n        setLoading(false);\n\n        // authDispatch({\n        //   type: AccountActionTypes.fetchAccountTokenFailure,\n        // });\n        // actions.blacklist();\n\n        vendorDispatch({\n          type: VendorActionTypes.fetchVendorFailure,\n          error: err,\n        });\n\n        console.log(err.message);\n      }\n    }\n  };\n\n  const handleSignOut = async (\n    e: React.BaseSyntheticEvent<React.FunctionComponent>\n  ) => {\n    setLoading(true);\n\n    const localToken = await localStorage.getToken();\n\n    try {\n      await signOutRequest({\n        accessToken: localToken,\n      }).then((response) => {\n        if (response.ok) {\n          setUsername(\"\");\n          setUserId(\"\");\n\n          setReturning(true);\n\n          // actions.blacklist();\n\n          setTimeout(() => {\n            onSuccess(\"Signed Out\");\n          }, 250);\n          setTimeout(() => {\n            setLoading(false);\n            // navigation.navigate(`/`);\n          }, 750);\n        } else {\n          setLoading(false);\n          console.log(\"Sign Out Failed\");\n        }\n      });\n    } catch (err: any) {\n      setLoading(false);\n      console.log(err.message);\n    }\n  };\n\n  const handleDelete = async (\n    e: React.BaseSyntheticEvent<React.FunctionComponent>\n  ) => {\n    setLoading(true);\n    try {\n      await deleteRequest({\n        url: `account/${userId}`,\n        accessToken: \"\",\n      }).then((res) => {\n        if (res.ok) {\n          setUsername(\"\");\n          setUserId(\"\");\n\n          setTimeout(() => {\n            onSuccess(\"Account Deleted\");\n          }, 750);\n          setTimeout(() => {\n            setLoading(false);\n          }, 1500);\n        } else {\n          setLoading(false);\n          onWarning(\"Request Failed\");\n        }\n      });\n    } catch (err: any) {\n      setLoading(false);\n      onError(err.message);\n    }\n  };\n\n  // React.useEffect(() => {\n  //   if (!(username || accessToken)) {\n  //     navigation.navigate(\"/\");\n  //   }\n  // }, [username, accessToken]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        userId,\n        setUserId,\n        username,\n        setUsername,\n        email,\n        setEmail,\n\n        loading,\n        setLoading,\n        handleSignIn,\n        handleSignOut,\n        handleDelete,\n        password,\n        setPassword,\n        heading,\n        setHeading,\n        alert,\n        setAlert,\n        returning,\n        setReturning,\n      }}\n    >\n      {children}\n      {/* <Toast\n        open={openSuccess}\n        setOpen={setOpenSuccess}\n        success\n        message={message}\n      />\n      <Toast\n        open={openWarning}\n        setOpen={setOpenWarning}\n        warning\n        message={message}\n      />\n      <Toast open={openError} setOpen={setOpenError} error message={message} /> */}\n    </UserContext.Provider>\n  );\n}\n\nexport const useUserContext = () => React.useContext(UserContext);\n","// Example of Animated Splash Screen in React Native\n// https://aboutreact.com/animated-splash-screen/\n\n// import React in our code\nimport React from 'react';\n\n// import all the components we are going to use\n// https://snack.expo.dev/embedded/@aboutreact/animated-splash-screen-example-?iframeId=h1ftiunob9&preview=true&platform=ios&theme=dark\nimport {\n  View,\n  Text,\n  Image,\n  Animated,\n  StyleSheet,\n  Easing,\n} from 'react-native';\n\nimport { useTheme } from 'react-native-paper';\n\nexport const Splash = ({ isVisible }: { isVisible: boolean }) => {\n  const theme = useTheme();\n  const [align, setAlign] = React.useState<\n    | 'center'\n    | 'flex-start'\n    | 'flex-end'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n    | undefined\n  >('center');\n\n  const [alignsecond, setAlignsecond] =\n    React.useState<boolean>(false);\n\n  const [spinAnim, setSpinAnim] = React.useState(\n    new Animated.Value(0)\n  );\n\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '360deg'],\n  });\n\n  const fadeAnim = React.useRef(new Animated.Value(1)).current;\n\n  setTimeout(() => {\n    setAlign('flex-start'), setAlignsecond(true);\n  }, 2000);\n\n  React.useEffect(() => {\n    Animated.loop(\n      Animated.timing(spinAnim, {\n        toValue: 1,\n        duration: 3000,\n        easing: Easing.linear,\n        useNativeDriver: true,\n      })\n    ).start();\n  });\n\n  React.useEffect(() => {\n    if (!isVisible) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 6000,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [fadeAnim, isVisible]);\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        {\n          justifyContent: 'center',\n          opacity: fadeAnim,\n          backgroundColor: theme.colors.surface,\n        },\n      ]}\n    >\n      <Animated.Image\n        source={{\n          uri: require('../../assets/logo@2x.png'),\n        }}\n        style={{\n          width: 100,\n          height: 100,\n          transform: [{ rotate: spin }],\n        }}\n      />\n      {!alignsecond ? null : (\n        <View style={{ margin: 10, justifyContent: align }}>\n          <Text\n            style={{\n              color: '#114998',\n              fontSize: 30,\n              fontWeight: 'bold',\n              fontFamily: 'space-mono',\n            }}\n          >\n            ThriftHub\n          </Text>\n        </View>\n      )}\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'row',\n    marginHorizontal: 40,\n  },\n});\n","import React from 'react';\n\nimport { Platform, ActivityIndicator, Text } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport {\n  NavigationContainer,\n  PathConfigMap,\n  InitialState,\n} from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n\nimport { StatusBar } from 'expo-status-bar';\n\nimport { CoreNavigator } from './navigation/coreNavigator';\n\nimport VendorDataProvider from './context/vendor.context';\nimport ProductsDataProvider from './context/products.context';\nimport AuthorizationProvider from './context/authorization.context';\nimport { usePreference } from './context/preferences.context';\nimport useCachedResources from './hooks/useCachedResources';\nimport UserProvider from './context/user.context';\n\nimport { NAVIGATION_PERSISTENCE_KEY } from './constants/keys.constants';\n\nimport { Splash } from './components/common/splash';\n\nimport { ProductTypeParamList, RootStackParamList } from './types';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace ReactNavigation {\n    interface RootParamList extends RootStackParamList {}\n  }\n}\n\nconst SCREENS = {\n  StartScreen: { title: 'Native Stack', component: {} },\n  LoginScreen: { title: 'Simple Stack', component: {} },\n  RegisterScreen: {\n    title: 'Modal Stack',\n    component: {},\n  },\n  Products: {\n    title: 'Regular + Modal Stack',\n    component: {},\n  },\n  ProductDetails: {\n    title: 'Float + Screen Header Stack',\n    component: {},\n  },\n  MakeOffer: {\n    title: 'Transparent Stack',\n    component: {},\n  },\n  MakePurchase: {\n    title: 'Header Customization in Stack',\n    component: {},\n  },\n  UpdateProduct: {\n    title: 'Header Customization in Native Stack',\n    component: {},\n  },\n  Transactions: { title: 'Bottom Tabs', component: {} },\n  Favorites: {\n    title: 'Material Top Tabs',\n    component: {},\n  },\n  MyProducts: {\n    title: 'Material Bottom Tabs',\n    component: {},\n  },\n  AddProduct: {\n    title: 'Dynamic Tabs',\n    component: {},\n  },\n};\n\nexport const Core = () => {\n  const { theme } = usePreference();\n\n  const isLoadingComplete = useCachedResources();\n\n  const [isReady, setIsReady] = React.useState(\n    __DEV__ ? false : true\n  );\n  const [initialState, setInitialState] = React.useState<\n    InitialState | undefined\n  >();\n\n  const [showSplash, setShowSplash] = React.useState(true);\n\n  React.useEffect(() => {\n    const restoreState = async () => {\n      try {\n        const initialUrl = await Linking.getInitialURL();\n\n        if (Platform.OS !== 'web' && initialUrl == null) {\n          // Only restore state if there's no deep link and we're not on web\n          const savedStateString = await AsyncStorage.getItem(\n            NAVIGATION_PERSISTENCE_KEY\n          );\n          const state = savedStateString\n            ? JSON.parse(savedStateString)\n            : undefined;\n\n          if (state !== undefined) {\n            setInitialState(state);\n          }\n        }\n      } finally {\n        setIsReady(true);\n      }\n    };\n\n    if (!isReady) {\n      restoreState();\n    }\n  }, [isReady]);\n\n  React.useEffect(() => {\n    if (!isReady || !isLoadingComplete)\n      setTimeout(() => {\n        setShowSplash(false);\n      }, 7000);\n  }, []);\n\n  // if (!isReady || !isLoadingComplete) {\n  //   return <Splash />;\n  // }\n\n  if (showSplash) {\n    return <Splash isVisible={!isReady || !isLoadingComplete} />;\n  }\n\n  console.log('Core: Linking.getInitialUrl', Linking.getInitialURL());\n\n  return (\n    <PaperProvider theme={theme}>\n      <StatusBar\n        translucent\n        animated={true}\n        style={theme.dark ? 'light' : 'dark'}\n        backgroundColor=\"rgba(0, 0, 0, 0.24)\"\n      />\n\n      <NavigationContainer\n        initialState={initialState}\n        onStateChange={(state) => {\n          console.log(\n            'NavigationContainer: onStateChange',\n            JSON.stringify(state)\n          );\n          AsyncStorage.setItem(\n            NAVIGATION_PERSISTENCE_KEY,\n            JSON.stringify(state)\n          );\n        }}\n        theme={theme}\n        linking={{\n          // To test deep linking on, run the following in the Terminal:\n          // Android: adb shell am start -a android.intent.action.VIEW -d \"exp://127.0.0.1:19000/--/simple-stack\"\n          // iOS: xcrun simctl openurl booted exp://127.0.0.1:19000/--/simple-stack\n          // Android (bare): adb shell am start -a android.intent.action.VIEW -d \"rne://127.0.0.1:19000/--/simple-stack\"\n          // iOS (bare): xcrun simctl openurl booted rne://127.0.0.1:19000/--/simple-stack\n          // The first segment of the link is the the scheme + host (returned by `Linking.makeUrl`)\n          prefixes: [Linking.createURL('/')],\n          enabled: true,\n          config: {\n            initialRouteName: 'Home',\n            screens: Object.keys(SCREENS).reduce<\n              PathConfigMap<RootStackParamList>\n            >(\n              (acc, name) => {\n                // Convert screen names such as SimpleStack to kebab case (simple-stack)\n                const path = name\n                  .replace(/([A-Z]+)/g, '-$1')\n                  .replace(/^-/, '')\n                  .toLowerCase();\n\n                console.log('CONFIG path', path);\n                console.log('CONFIG namge', name);\n                // @ts-expect-error: these types aren't accurate\n                // But we aren't too concerned for now\n                acc[name] = {\n                  path,\n                  screens: {\n                    ProductScreen: 'products',\n                    ProductDetailScreen: {\n                      path: 'products/:slug?',\n                      parse: {\n                        slug: (slug: string) =>\n                          slug.charAt(0).toUpperCase() +\n                          slug.slice(1).replace(/-/g, ' '),\n                      },\n                      stringify: {\n                        slug: (slug: string) =>\n                          slug.toLowerCase().replace(/\\s/g, '-'),\n                      },\n                    },\n                    MakeOfferScreen: {\n                      path: `${path}/offer/:product`,\n                      parse: {\n                        product: (product: ProductTypeParamList) =>\n                          product.slug.charAt(0).toUpperCase() +\n                          product.slug.slice(1).replace(/-/g, ' '),\n                      },\n                      stringify: {\n                        product: (product: ProductTypeParamList) =>\n                          product.slug\n                            .toLowerCase()\n                            .replace(/\\s/g, '-'),\n                      },\n                    },\n                    MakePurchaseScreen: {\n                      path: 'products/purchase/:slug',\n                      parse: {\n                        slug: (slug: string) =>\n                          slug.charAt(0).toUpperCase() +\n                          slug.slice(1).replace(/-/g, ' '),\n                      },\n                      stringify: {\n                        slug: (slug: string) =>\n                          slug.toLowerCase().replace(/\\s/g, '-'),\n                      },\n                    },\n                    UpdateProductScreen: {\n                      path: 'products/update/:slug?',\n                      parse: {\n                        slug: (slug: string) =>\n                          slug.charAt(0).toUpperCase() +\n                          slug.slice(1).replace(/-/g, ' '),\n                      },\n                      stringify: {\n                        slug: (slug: string) =>\n                          slug.toLowerCase().replace(/\\s/g, '-'),\n                      },\n                    },\n                    TransactionOrdersScreen: {\n                      screens: {\n                        orderRequests: {\n                          path: 'transactions/sales',\n                        },\n                        ordersMade: {\n                          path: 'transactions/purchases',\n                        },\n                      },\n                    },\n                    FavoriteProductsScreen: 'favorites',\n                    MyProductsScreen: 'myproducts',\n                    AddProductScreen: 'add',\n                  },\n                };\n\n                return acc;\n              },\n              {\n                Home: {\n                  screens: {\n                    StartScreen: '',\n                    LoginScreen: 'signin',\n                    RegisterScreen: 'signup',\n                  },\n                },\n                NotFound: '*',\n              }\n            ),\n          },\n        }}\n        fallback={<Text>Loading…</Text>}\n        documentTitle={{\n          formatter: (options, route) =>\n            `${options?.title ?? route?.name} - ThriftHub`,\n        }}\n      >\n        <ProductsDataProvider>\n          <VendorDataProvider>\n            <AuthorizationProvider>\n              <UserProvider>\n                <CoreNavigator />\n              </UserProvider>\n            </AuthorizationProvider>\n          </VendorDataProvider>\n        </ProductsDataProvider>\n      </NavigationContainer>\n    </PaperProvider>\n  );\n};\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] =\n    React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...MaterialCommunityIcons.font,\n          'space-mono': require('../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","import React from 'react';\nimport 'react-native-gesture-handler';\n\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport PreferencesProvider from './src/context/preferences.context';\n\nimport { Core } from './src/core';\n\nexport default function App() {\n  return (\n    <>\n      <PreferencesProvider>\n        <SafeAreaProvider>\n          <Core />\n        </SafeAreaProvider>\n      </PreferencesProvider>\n    </>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/background_dot.06ffdbc6.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/logo@2x.8d0cb9f8.png\";"],"sourceRoot":""}